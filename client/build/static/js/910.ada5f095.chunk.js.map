{"version":3,"file":"static/js/910.ada5f095.chunk.js","mappings":"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","sources":["Routes/Register.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport firebase from \"./firebase\";\r\nimport '../styles/Styles.css'\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n//import Select from 'react-select';\r\nconst user = AuthService.getCurrentUser();\r\n\r\n\r\n\r\nconst options = [\r\n  // Leaves\r\n  { label: \"Amaranthus\" },\r\n  { label: \"Beet Root\" },\r\n  { label: \"Chukka- sorrel Leaves\" },\r\n  { label: \"Colocasia Leaves\" },\r\n  { label: \"Curry Leaves\" },\r\n  { label: \"Dill\" },\r\n  { label: \"Fenugreek Leaves\" },\r\n  { label: \"Green Amaranth\" },\r\n  { label: \"Spinach\" },\r\n  { label: \"Spring Onion\" },\r\n  { label: \"Sufflower\" },\r\n  // Wild-Antic\r\n  { label: \"Chilli\" },\r\n  { label: \" Colocasia Roots\" },\r\n  { label: \"Cucumber Madras\" },\r\n  { label: \"Kohlrabi\" },\r\n  { label: \"Onion White-Pandhara Kanda\" },\r\n  { label: \"Pointed Gourd\" },\r\n  { label: \"Pumpkin\" },\r\n  { label: \"Raw Jackfruit\" },\r\n  { label: \"Raw Papaya\" },\r\n  { label: \"Sambhar Kanda\" },\r\n  { label: \"Snake Gourd\" },\r\n  { label: \"Spiny Gourd\" },\r\n  { label: \"Sweet Potato\" },\r\n  { label: \"Yam\" },\r\n  // Exotic\r\n  { label: \"Asparagus\" },\r\n  { label: \"Avocado\" },\r\n  { label: \"Baby Corn\" },\r\n  { label: \"Baby Potato\" },\r\n  { label: \"Basil\" },\r\n  { label: \"Broccoli\" },\r\n  { label: \"Celery\" },\r\n  { label: \"Cherry Tomato\" },\r\n  { label: \"chinese Cabbage\" },\r\n  { label: \"Coccinia\" },\r\n  { label: \"Green Zucchini\" },\r\n  { label: \"Iceberg Lettuce\" },\r\n  { label: \"Parsley\" },\r\n  { label: \"Red Cabbage\" },\r\n  { label: \"Red Capsicum\" },\r\n  { label: \"Romaine Lettuce\" },\r\n  { label: \"Yellow Capsicum\" },\r\n  { label: \"Yellow Zucchini\" },\r\n  { label: \"Mushroom\" },\r\n  { label: \"Sweet Corn\" },\r\n  { label: \"Sweet Corn Grains\" },\r\n  // Special stall\r\n  { label: \"Cabbage\" },\r\n  { label: \"Potato (Agra)\" },\r\n  { label: \"Potato (Indore)\" },\r\n  { label: \"Potato (Talegav)\" },\r\n  // Fruit Vegetables\r\n  { label: \"Beans Double\" },\r\n  { label: \"Bitter Gourd\" },\r\n  { label: \"Brinjal Big\" },\r\n  { label: \"Brinjal Green\" },\r\n  { label: \"Brinjal Long Green\" },\r\n  { label: \"Brinjal Purple\" },\r\n  { label: \"Carrot\" },\r\n  { label: \"Cauliflower\" },\r\n  { label: \"Chavali Beans\" },\r\n  { label: \"Chickpeas - Chana sprouts\" },\r\n  { label: \"chilli - Bhavgagari Mirchi\" },\r\n  { label: \"Chilli Green\" },\r\n  { label: \"chilli Simple\" },\r\n  { label: \"Cluster Beans\" },\r\n  { label: \"Coconut\" },\r\n  { label: \"Colocasia Roots\" },\r\n  { label: \"Coriander\" },\r\n  { label: \"Cucumber\" },\r\n  { label: \"Cucumder Madras\" },\r\n  { label: \"Cucumber Madras- Sambar Kakadi\" },\r\n  { label: \"Cucumber Polyhouse- English Kakadi\" },\r\n  { label: \"Drum Sticks\" },\r\n  { label: \"Field Beans\" },\r\n  { label: \"Fresh Peeled Green Peas\" },\r\n  { label: \"Garlic\" },\r\n  { label: \"Ginger\" },\r\n  { label: \"Green Capsicum\" },\r\n  { label: \"Green Mango\" },\r\n  { label: \"Green Peas\" },\r\n  { label: \"Groundnut Pods\" },\r\n  { label: \"Tamarind\" },\r\n  { label: \"Lady Finger\" },\r\n  { label: \"Lemon Grass\" },\r\n  { label: \"Mint\" },\r\n  { label: \"Onion\" },\r\n  { label: \"Onion Sambhar\" },\r\n  { label: \"Lima Beans\" },\r\n  { label: \"Peeled Garlic\" },\r\n  { label: \"Potato\" },\r\n  { label: \"Radish\" },\r\n  { label: \"Ridgegourd\" },\r\n  { label: \"Sponge Gourd\" },\r\n  { label: \"Tomato\" },\r\n  { label: \"Wal\" },\r\n  { label: \"Wal Broad\" },\r\n  { label: \"Wal surati\" },\r\n  { label: \"Water Chestnuts\" },\r\n  // Fruit Export\r\n  { label: \"Apple Fuji\" },\r\n  { label: \"Apple Green\" },\r\n  { label: \"Apple Kinnaur\" },\r\n  { label: \"Apple Red Delicious\" },\r\n  { label: \"Apple Shimla Big\" },\r\n  { label: \"Kiwi\" },\r\n  { label: \"Litchi\" },\r\n  { label: \"Strawberry\" },\r\n  // Fruit Summer\r\n  { label: \"Grapes Black\" },\r\n  { label: \"Grapes Green\" },\r\n  { label: \"Jambhul\" },\r\n  { label: \"Mango Badami (For Juice)\" },\r\n  { label: \"Mango Devgad Hapus\" },\r\n  { label: \"Mango Keshar\" },\r\n  { label: \"Mango Lalbag\" },\r\n  { label: \"Mango Payri\" },\r\n  { label: \"Mango Ratnagiri Hapus\" },\r\n  { label: \"Mango Totapuri\" },\r\n  { label: \"Muskmelon\" },\r\n  { label: \"Watermelon Kiran\" },\r\n  { label: \"Watermelon Regular\" },\r\n  // Fruit\r\n  { label: \"Amla\" },\r\n  { label: \"Apple Gourd\" },\r\n  { label: \"Ashgourd\" },\r\n  { label: \"Banana\" },\r\n  { label: \"Custard-apple\" },\r\n  { label: \"Elaichi Banana\" },\r\n  { label: \"Figs\" },\r\n  { label: \"Guava\" },\r\n  { label: \"Jackfruit Peeled\" },\r\n  { label: \"Jujube - Ber\" },\r\n  { label: \"Orange Small\" },\r\n  { label: \"Orange Kinnow\" },\r\n  { label: \"Papaya\" },\r\n  { label: \"Pear Imported\" },\r\n  { label: \"Pomogranate\" },\r\n  { label: \"Raw Banana\" },\r\n  { label: \"Sapodilla\" },\r\n  { label: \"Sugarcane\" },\r\n  { label: \"Sweet Lime\" },\r\n  { label: \"Tender\" },\r\n  { label: \"Masale\" },\r\n  { label: \"Paneer\" },\r\n  { label: \"Dairy and Milk Products\" },\r\n  { label: \"Homemade Foods\" },\r\n  { label: \"Flowers\" },\r\n  { label: \"Snacks\" },\r\n];\r\n\r\n\r\nexport default function Register({ t, languages }) {\r\n  const { state } = useLocation();\r\n  var path;\r\n  var id;\r\n  var bookedStalls\r\n  if (state === null) {\r\n    path = 'register'\r\n  } else {\r\n    path = state.path\r\n    id = state.id\r\n\r\n    bookedStalls = state.bookedStalls\r\n\r\n  }\r\n  var num = 1;\r\n  const newArray = options.map((option) => ({\r\n    id: String(num++),\r\n    text: option.label,\r\n  }));\r\n  console.log(newArray)\r\n\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n\r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    type: \"\",\r\n    farmertype: \"\",\r\n    address: \"\",\r\n    // joiningDate :\"\",\r\n    employeeID :\"\",\r\n    // desigination:\"\"\r\n  });\r\n\r\n  const [tags, setTags] = React.useState([]);\r\n  const [tag1, setTag] = useState();\r\n  const [error, seterror] = useState(\"\");\r\n  const [disable, setDisable] = useState(false);\r\n\r\n\r\n  const handleDelete = (i) => {\r\n    const newTags = tags.slice(0);\r\n    newTags.splice(i, 1);\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleAddition = (tag) => {\r\n    setTags([...tags, tag]);\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    console.log(\"inside handleSubmit\")\r\n    seterror(\"\");\r\n    event.preventDefault();\r\n    const { phone, firstname, lastname, farmertype, type ,employeeID } = data;\r\n\r\n    if (!phone.match(\"[0-9]{10}\")) {\r\n      seterror(\"Please provide valid phone number\");\r\n    } else if (firstname.length === 0 && lastname.length === 0) {\r\n      seterror(\"Please provide valid first and last name\");\r\n    } else if (type.length === 0) {\r\n      seterror(\"Please select type\");\r\n    } else if (type === \"farmer\" && farmertype.length === 0) {\r\n      seterror(\"select producer type\");\r\n    } else if (type === \"farmer\" && tags.length === 0) {\r\n      seterror(\"select atleast one commodity and press enter\");\r\n    } else {\r\n      seterror(\"no error\");\r\n      setLoading(true);\r\n      AuthService.register(\r\n        data.phone,\r\n        data.password,\r\n        data.firstname,\r\n        data.lastname,\r\n        data.type,\r\n        data.farmertype,\r\n        data.address,\r\n        // data.desigination,\r\n        tags,\r\n        data.employeeID,\r\n        // data.joiningDate,\r\n        \r\n      ).then(\r\n        () => {\r\n          toast.success(\"Registration successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            //logic\r\n            if (path === 'register') {\r\n              navigate(\"/registeration-successfull\");\r\n            } else {\r\n              navigate(\"/home/temp/stallsTemp/${Id}/paymentpage\", { state: { bookStall: bookedStalls, d: date } })\r\n            }\r\n\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n            // joiningDate :\"\",\r\n            employeeID :\"\",\r\n            // desigination:\"\"\r\n          });\r\n          setTimeout(() => {\r\n            //logic\r\n            if (path === 'register') {\r\n              navigate(\"/login\");\r\n            } else {\r\n              navigate(\"/login\", { state: { path: 'stall', id: id, bookedStalls: bookedStalls } });\r\n            }\r\n\r\n            window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const configureCaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"sign-in-button\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          onSignInSubmit();\r\n          console.log(\"Recaptcha Verified\");\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"here\")\r\n    configureCaptcha();\r\n    setDisable(true);\r\n    setTimeout(() => { setDisable(false) }, 5000);\r\n    //check if the user exists\r\n\r\n    const phoneNumber = \"+91\" + data.phone;\r\n\r\n    console.log(phoneNumber);\r\n\r\n    AuthService.check(data.phone)\r\n      .then(\r\n        () => {\r\n          const appVerifier = window.recaptchaVerifier;\r\n          firebase\r\n            .auth()\r\n            .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then((confirmationResult) => {\r\n              // SMS sent. Prompt user to type the code from the message, then sign the\r\n              // user in with confirmationResult.confirm(code).\r\n              toast.success(\"OTP SENT!\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              window.confirmationResult = confirmationResult;\r\n              console.log(\"OTP has been sent\");\r\n\r\n              // ...\r\n            })\r\n            .catch((error) => {\r\n              // Error; SMS not sent\r\n              // ...\r\n              console.log(\"SMS Not Sent\");\r\n              toast.warn(\"Invalid Phone Number\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setData({\r\n                phone: \"\",\r\n                password: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                type: \"\",\r\n                farmertype: \"\",\r\n                address: \"\",\r\n                // joiningDate :\"\",\r\n                employeeID :\"\",\r\n                // desigination:\"\"\r\n              });\r\n              setTimeout(() => {\r\n\r\n                //window.location.reload(false);\r\n              }, 1000);\r\n            });\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n            // joiningDate :\"\",\r\n            employeeID :\"\",\r\n            // desigination:\"\"\r\n          });\r\n          setTimeout(() => {\r\n            if (path === 'register') {\r\n              navigate(\"/login\");\r\n            } else {\r\n              navigate(\"/login\", { state: { path: 'stall', id: id, bookedStalls: bookedStalls } });\r\n            }\r\n            // window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n\r\n\r\n\r\n\r\n  };\r\n  const onSubmitOTP = (e) => {\r\n    e.preventDefault();\r\n    const code = data.password;\r\n    console.log(code);\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then((result) => {\r\n        //User signed in successfully.\r\n        const user = result.user;\r\n        console.log(JSON.stringify(user));\r\n        alert(\"User is Verified\");\r\n\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        // User couldn't sign in (bad verification code?)\r\n\r\n        console.log(\"error in sumbitotp\")\r\n      });\r\n  };\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [isSearchable, setIsSearchable] = useState(true);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRtl, setIsRtl] = useState(false);\r\n\r\n\r\n  const suggestionsRef = useRef(null);\r\n\r\n  function handleScroll(event) {\r\n    event.preventDefault();\r\n    const { scrollTop, scrollHeight, clientHeight } = event.target;\r\n    if (scrollTop === 0) {\r\n      // Scrolled to the top\r\n    } else if (scrollTop + clientHeight === scrollHeight) {\r\n      // Scrolled to the bottom\r\n    } else {\r\n      // Scrolled in the middle\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        color=\"success\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/2.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <div id=\"sign-in-button\"></div>\r\n            <img className=\"form-logo\" src=\".\\images\\logo.png\" alt=\"form-logo\" />\r\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Welcome to Wingrow Agritech</span>\r\n            </Typography>\r\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Signup with us</span>\r\n            </Typography>\r\n\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: 'text-lg font-arturo',\r\n                  }}\r\n                  name=\"firstname\"\r\n                  value={data.firstname}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n\r\n\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  value={data.lastname}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield registerLabel\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={9}  >\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleChange}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  autoComplete=\"nope\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  disabled={disable}\r\n                  onClick={onSignInSubmit}\r\n                  className=\"signup-btn\"\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  size=\"large\"\r\n                  sx={{ mt: 0.5, mb: 0.5 }}\r\n                >\r\n                  <span className=\"heading\">Fetch Otp</span>\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={9}  >\r\n\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Enter OTP\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={data.password}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n\r\n                />\r\n\r\n\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {/* <button \r\n              fullWidth\r\n              className=\"signup-btn\" \r\n              type=\"button\"\r\n              variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n              >\r\n              Submit OTP & Register\r\n            </button> */}\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  onClick={onSubmitOTP}\r\n                  className=\"signup-btn\"\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  size=\"large\"\r\n                  sx={{ mt: 0.5, mb: 0.5 }}\r\n                >\r\n                  <span className=\"heading\">Submit OTP</span>\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className=\"textfield\"\r\n                  sx={{ width: \"100%\", fontSize: 14 }}\r\n                >\r\n                  <InputLabel\r\n                    inputlabelprops={{\r\n                      style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                    }}\r\n                    id=\"demo-simple-select-helper-label\"\r\n                  >\r\n                    <span className=\"heading\">Type</span>\r\n                  </InputLabel>\r\n                  <Select\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={data.type}\r\n                    label=\"Type\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    color=\"success\"\r\n                  >\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value=\"\"\r\n                    >\r\n                      <em className=\"heading\">Select</em>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"farmer\"}\r\n                    >\r\n                      <span className=\"heading\">Producer</span>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      <span className=\"heading\">Consumer</span>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"employee\"}\r\n                    >\r\n                      <span className=\"heading\">Employee</span>\r\n                    </MenuItem>\r\n\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">\r\n                      <span className=\"heading\">Producer Type</span>\r\n                    </InputLabel>\r\n                    <Select\r\n                      sx={{ fontSize: \"1.3rem\" }}\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={data.farmertype}\r\n                      label=\"farmertype\"\r\n                      name=\"farmertype\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em className=\"heading\">None</em>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Organic farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Organic Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"FPO/FPC\"}\r\n                      >\r\n                        <span className=\"heading\">FPO/FPC</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Retailer\"}\r\n                      >\r\n                        <span className=\"heading\">Retailer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Wholesaler\"}\r\n                      >\r\n                        <span className=\"heading\">Wholesaler</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Start-up\"}\r\n                      >\r\n                        <span className=\"heading\">Start Up</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Vocal for local producers\"}\r\n                      >\r\n                        <span className=\"heading\">Vocal for Local Producers</span>\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              )}\r\n              {data.type === \"employee\" &&\r\n                \r\n                <Grid className=\"input-div-holder\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  // autoComplete=\"given-name\"\r\n                  autoComplete=\"nope\"\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  name=\"employeeID\"\r\n                  value={data.employeeID}\r\n                  onChange={handleChange}\r\n                  \r\n                  fullWidth\r\n                  id=\"employeeID\"\r\n                  label=\"EmployeeID\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  \r\n                  fullWidth\r\n                  id=\"desigination\"\r\n                  label=\"Desigination\"\r\n                  name=\"desigination\"\r\n                  value={data.desigination}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield registerLabel\"\r\n                />\r\n              </Grid> */}\r\n              {/* <Grid item xs={9}  >\r\n                \r\n                <DatePicker \r\n                name =\"joiningDate\"\r\n                value={data.joiningDate} \r\n                onChange={date => handleChange({ target: { value: date, name: 'joiningDate' } })}\r\n                renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n\r\n\r\n                    />\r\n\r\n\r\n                  </Grid> */}\r\n                </Grid>\r\n               }\r\n\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  label=\"address (optional)\"\r\n                  type=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-address\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <ReactTags\r\n                    inputProps={{\r\n                      autoComplete: 'off'\r\n                    }}\r\n                    fullWidth\r\n                    tags={tags}\r\n                    suggestions={newArray}\r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    placeholder=\"Add new tag\"\r\n                    allowNew={true}\r\n                    autofocus={false}\r\n                    minQueryLength={1}\r\n                    className=\"textfield\"\r\n                    color=\"success\"\r\n                    classNames={{\r\n                      suggestions: 'tag-suggestions'\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n\r\n\r\n              )}\r\n            </Grid>\r\n            {error !== \"no error\" && (\r\n              <h3\r\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\r\n              >\r\n                {error}\r\n              </h3>\r\n            )}\r\n\r\n\r\n            <Button item xs={12}\r\n              type=\"submit\"\r\n              fullWidth\r\n\r\n              className=\"signup-btn\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              sx={{ mt: 2, mb: 2, height:{xs:\"45px\"}}}\r\n            >\r\n              <span className=\"heading\">register</span>\r\n            </Button>\r\n\r\n\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\r\n                  Already have an account? <span className=\"login\">Log In</span>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          {/* <form onSubmit={onSubmitOTP}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            </Grid>\r\n            <button className=\"forgot-btn\" type=\"submit\">\r\n              Submit OTP & Register\r\n            </button>\r\n          </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["user","AuthService","options","label","Register","_ref","t","languages","path","id","bookedStalls","state","useLocation","num","newArray","map","option","String","text","console","log","useEffect","window","location","reload","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","Loading","setLoading","_useState3","phone","password","firstname","lastname","type","farmertype","address","employeeID","_useState4","data","setData","_React$useState","React","_React$useState2","tags","setTags","_useState5","_useState6","_useState7","_useState8","error","seterror","_useState9","_useState10","disable","setDisable","handleChange","e","_e$target","target","name","value","prev","_objectSpread","_defineProperty","configureCaptcha","recaptchaVerifier","firebase","size","callback","response","onSignInSubmit","defaultCountry","preventDefault","setTimeout","phoneNumber","then","appVerifier","signInWithPhoneNumber","confirmationResult","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","catch","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","useRef","_jsxs","className","children","_jsx","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","color","Spinner","src","alt","component","noValidate","onSubmit","event","match","length","bookStall","d","date","sx","mt","Typography","variant","Grid","container","spacing","item","xs","sm","TextField","inputProps","autoComplete","InputLabelProps","onChange","required","fullWidth","autoFocus","inputlabelprops","style","fontSize","fontFamily","Button","disabled","onClick","mb","code","confirm","result","JSON","stringify","alert","FormControl","width","InputLabel","Select","labelId","MenuItem","ReactTags","suggestions","handleDelete","i","newTags","slice","splice","handleAddition","tag","concat","_toConsumableArray","placeholder","allowNew","autofocus","minQueryLength","classNames","alignSelf","marginTop","height","justifyContent","Link","to","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends2","_extends","typography","body1","display","alignItems","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","primary","mainChannel","selectedOpacity","alpha","main","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginBottom","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","inProps","ref","useThemeProps","_props$autoFocus","_props$component","_props$dense","_props$divider","_props$disableGutters","focusVisibleClassName","_props$role","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","selected","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","clsx","focusVisible"],"sourceRoot":""}