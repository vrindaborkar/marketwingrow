{"version":3,"file":"static/js/964.1e4ccb01.chunk.js","mappings":"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","sources":["Routes/Farmer/AdvanceBookings.js","Routes/Farmer/FarmersHome.js","Routes/Farmer/FarmersMain.js","Routes/Farmer/InwardData.js","components/ConfirmDelete.js","Routes/Farmer/MyBookings.js","Routes/Farmer/OutwardData.js","Routes/Farmer/StallsPlaces.js","Routes/Farmer/Test.js","Routes/Farmer/Ticket.js","Routes/Farmer/FarmerNavigation.js","Routes/Farmer/Subscription.js","Routes/Farmer/Farmer.js","services/user.service.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import Datepicker from \"../../components/Datepicker\";\r\nimport \"../../styles/AdvanceBookings.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport axios from \"axios\";\r\nimport Stall from \"./Stall\";\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport dayjs from \"dayjs\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import SelectSeatModal from \"../../components/SelectSeatModal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { Button} from \"@mui/material\";\r\n// import Spinner from '../../components/Spinner';\r\nconst userCurr = AuthService.getCurrentUser();\r\nvar today = new Date();\r\n// var tomorrow = today.add(1).day();\r\nconsole.log(today.getDate() + 1)\r\nconst replacement = today.getDate() + 1;\r\nconst todayFormatted = today.toISOString().slice(0, 10);\r\nconst locations = [\r\n  { location: \"karvenagar_location\" },\r\n  { location: \"Kondhwa BK\"},\r\n  { location: \"hadapsar_location\"},\r\n  { location: \"Undri\"},   \r\n  { location: \"kharadi_iT_park_location\"},\r\n  { location: \"bramhasun_city_location\"},\r\n  { location: \"wagholi_location\"},\r\n  { location: \"Bhavadi Road\"},\r\n  { location: \"magarpatta_location\"},\r\n  { location: \"amanora_city_location\"},\r\n  { location: \"Green City\"},\r\n\r\n];\r\n\r\nconst AdvanceBookings = ({ setbookingDetails, setValue }) => {\r\n  const [location, setlocation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  const [data, setdata] = useState();\r\n  const [UpdatedData, setUpdatedData] = useState();\r\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\r\n  const [bookedStalls, setBookedStalls] = useState([]);\r\n  const [value, setvalue] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"));\r\n  const [alreadyBooked, setAlreadyBooked] = useState();\r\n  const [open, setOpen] = useState();\r\n  const [date, setdate] = useState(0);\r\n  const [totalStall, setTotalStalls] = useState(0);\r\n  const [available, setAvailable] = useState(0);\r\n  const [Loading, setLoading] = useState();\r\n  const [alreadyBookedLocataion, setAlreadyBookedLocation] = useState(0);\r\n  const { Id } = useParams();\r\n  const currentDate = 0\r\n  const lengthofUpdatedData = UpdatedData?.length;\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n\r\n  //function to input number of stalls\r\n  const handleChange = (e) => {\r\n    if (e.target.value <= -1) {\r\n      setNumberOfSeats(0);\r\n      setvalue(0);\r\n    }\r\n    else if (e.target.value <= available) {\r\n      setNumberOfSeats(e.target.value);\r\n      setvalue(e.target.value);\r\n    } else {\r\n      setNumberOfSeats(available);\r\n      setvalue(available);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    FarmerService.getMyStalls().then((response) => {\r\n      setLoading(false);\r\n      setdata(response.data);\r\n    });\r\n\r\n    FarmerService.getBookedStalls().then((response) => {\r\n      console.log(date)\r\n      const res = response.data && response.data.filter((e) => e.location === `${Id}` && e.bookedAt === date);\r\n      setAlreadyBooked(response.data);\r\n      setAlreadyBookedLocation(res.length);\r\n\r\n      console.log(\"already booked\", alreadyBooked);\r\n\r\n    });\r\n    handleOpen(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const confirmBookingCash = async (e) => {\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n    console.log(bookedStalls.length);\r\n    console.log(\"price\", price)\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(\"Failed to book stalls!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    let bookedStats = bookedStalls.toString();\r\n    const responseData = {\r\n      location: Id,\r\n      bookedStalls: bookedStalls,\r\n      bookedBy: userCurr.id,\r\n      bookedAt: dayjs(Date.now()).format(\"YYYY-MM-DD\"),\r\n      isBooked: true,\r\n    };\r\n\r\n    const stallsBooked = [];\r\n    bookedStalls.forEach((e) => {\r\n      stallsBooked.push(e.stallName);\r\n    });\r\n\r\n    // const price = bookedStalls.reduce(\r\n    //   (total, item) => item.stallPrice + total,\r\n    //   0\r\n    // );\r\n    const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n    const orderId = \"123\"\r\n    axios\r\n      .post(Url, responseData, { headers: authHeader() })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          setbookingDetails({\r\n            farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n            phone: userCurr.phone,\r\n            paymentDetails: orderId,\r\n            BookedStalls: stallsBooked,\r\n            stallsBooked: bookedStalls.length,\r\n            totalAmount: price,\r\n            address: bookedStalls[0].address\r\n          });\r\n        }\r\n        toast.success(\"stalls booked successfully!\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"../ticket\");\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(\"Failed to book stalls!\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setBookedStalls([]);\r\n        setNumberOfSeats(0);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const res = data && data.filter((e) => e.location === `${location}`);\r\n    console.log(res)\r\n    setUpdatedData(res);\r\n  }, [location, data, value]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (UpdatedData) {\r\n      setTotalStalls(UpdatedData.length)\r\n      console.log(totalStall)\r\n      setAvailable(totalStall - alreadyBookedLocataion)\r\n    }\r\n  }, [UpdatedData, totalStall]);\r\n\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const confirmBooking = async (e) => {\r\n    if (cashOnDelivery) {\r\n      confirmBookingCash();\r\n    }\r\n    else{\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(\"Failed to book stalls!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      // const orderUrl = \"https://wingrowagritech.herokuapp.com/order\";\r\n      const orderUrl = REACT_APP_API_URL+\"order\";\r\n      const { data } = await axios.post(\r\n        orderUrl,\r\n        { amount: price * 100 },\r\n        { headers: authHeader() }\r\n      );\r\n      initPayment(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      bookedStalls: bookedStats,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n          const verifyUrl = REACT_APP_API_URL+\"verify\";\r\n          const { data } = await axios.post(verifyUrl, response, {\r\n            headers: authHeader(),\r\n          });\r\n          const orderId = data.orderId;\r\n          console.log('tot')\r\n          const responseData = {\r\n            location: location,\r\n            bookedStalls: bookedStalls,\r\n            bookedBy: userCurr.id,\r\n            bookedAt: dayjs(value).format(\"YYYY-MM-DD\"),\r\n            isBooked: true,\r\n          };\r\n          const stallsBooked = [];\r\n          bookedStalls.forEach((e) => {\r\n            console.log(e.stallName)\r\n            stallsBooked.push(e.stallName);\r\n          });\r\n\r\n          const price = bookedStalls.reduce(\r\n            (total, item) => item.stallPrice + total,\r\n            0\r\n          );\r\n          const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n\r\n          axios\r\n            .post(Url, responseData, { headers: authHeader() })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                setbookingDetails({\r\n                  farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n                  phone: userCurr.phone,\r\n                  paymentDetails: orderId,\r\n                  BookedStalls: stallsBooked,\r\n                  stallsBooked: bookedStalls.length,\r\n                  totalAmount: price,\r\n                });\r\n              }\r\n              toast.success(\"stalls booked successfully!\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                navigate(\"../ticket\");\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(\"Failed to book stalls!\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setBookedStalls([]);\r\n              setNumberOfSeats(0);\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n          setBookedStalls([]);\r\n          setNumberOfSeats(0);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n\r\n  //function to input date from user \r\n  const handlechange1 = (event) => {\r\n    if (dayjs(event.target.value).format(\"YYYY-MM-DD\") <= todayFormatted) {\r\n      toast.warn(\"Please select a date after today\\'s date\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      setdate(todayFormatted.replace(/.{0,2}$/, '') + replacement);\r\n    }\r\n    else {\r\n      setdate(dayjs(event.target.value).format(\"YYYY-MM-DD\"));\r\n\r\n    }\r\n  };\r\n\r\n  const handleClick = (ev) => {\r\n\r\n\r\n    console.log(\"already \", alreadyBooked)\r\n\r\n    console.log(\"booked \", bookedStalls);\r\n    console.log(\"number of seats \", numberOfSeats);\r\n    console.log(ev.target)\r\n    if (numberOfSeats && ev.target.className !== \"booked\") {\r\n      const seatsToBook = parseInt(numberOfSeats, 20);\r\n      if (bookedStalls.length <= seatsToBook) {\r\n\r\n        if (bookedStalls.includes(ev.target.id)) {\r\n\r\n          //if already selected then remove it\r\n          const newAvailable = bookedStalls.filter(\r\n            (seat) => seat !== ev.target.id\r\n          );\r\n          setBookedStalls(newAvailable);\r\n          setAvailable(available + 1);\r\n        } else if (bookedStalls.length < numberOfSeats) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          console.log(\"here booked\");\r\n          setAvailable(available - 1);\r\n          //console.log(userCurr)\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n        } else if (bookedStalls.length === seatsToBook) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          bookedStalls.shift();\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n        }\r\n      }\r\n    }\r\n    //console.log(bookedStalls.map(function(v,i){return v.stallPrice}));\r\n\r\n  };\r\n\r\n  const alertStyles = {\r\n    backgroundColor: '#f2dede',\r\n    border: '1px solid #ebccd1',\r\n    color: '#a94442',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    marginBottom: '15px'\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"Test\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n\r\n      <Link to=\"../\" className=\"advancebookinglinkback\">\r\n        Go Back to stalls!\r\n      </Link>\r\n      <div className=\"main_container_stalls\">\r\n        <Grid className=\"input-div-holder\" container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel className=\"stall-booking-lable\">\r\n              Enter Booking Date\r\n            </InputLabel>\r\n            <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 14, fontFamily: \"monospace\" },\r\n              }}\r\n              name=\"booking-date\"\r\n              required\r\n              fullWidth\r\n              type=\"date\"\r\n              id=\"booking-date\"\r\n              autoFocus\r\n              value={date}\r\n              onChange={handlechange1}\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n            />\r\n            {console.log(date)}\r\n          </Grid>\r\n          <Grid className=\"select-market-grid\" item xs={12} sm={6}>\r\n            <FormControl className=\"formcontrol\" sx={{ width: \"100%\", fontSize: 14 }}>\r\n              <InputLabel color=\"success\" className=\"stall-booking-lable\">\r\n                Market\r\n              </InputLabel>\r\n              <Select\r\n                className=\"textfield\"\r\n                id=\"demo-simple-select-autowidth\"\r\n                value={location}\r\n                color=\"success\"\r\n                onChange={(e) => {\r\n                  setlocation(e.target.value);\r\n                }}\r\n                label=\"address\"\r\n                name=\"address\"\r\n                required\r\n              >\r\n                {locations.map((e, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={e.location}>\r\n                      {e.location}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel className=\"stall-booking-lable\">\r\n              Enter Number of Stalls\r\n            </InputLabel>\r\n            <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 14, fontFamily: \"monospace\" },\r\n              }}\r\n              name=\"number-of-stalls-req\"\r\n              required\r\n              placeholder=\"00\"\r\n              fullWidth\r\n              type=\"number\"\r\n              id=\"number-of-stalls-req\"\r\n              autoFocus\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <div className=\"secondary_container_stalls\">\r\n          {UpdatedData && location !== \"\" ? (\r\n            <Grid className=\"stalls-count-cantainer\">\r\n\r\n              <div className=\"stall_wrapper\">\r\n\r\n                <div className=\"StallsContainer\">\r\n                  <Grid>\r\n                    <div className=\"stalls-count-div\">\r\n                      <Typography className=\"count\">Total Stalls :{totalStall}</Typography>\r\n                      <Typography className=\"count\">\r\n                        Available Stalls :{available}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                  {lengthofUpdatedData === 34 && (\r\n                    <div className=\"StallsContainer\">\r\n                      {console.log(bookedStalls)}\r\n                      <Stall\r\n                        data={UpdatedData.slice(0, 16)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(16, 17)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(17, 18)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(18, 34)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {lengthofUpdatedData === 50 && (\r\n                    <div className=\"StallsContainer\">\r\n                      <Stall\r\n                        data={UpdatedData.slice(0, 24)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(24, 25)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(25, 26)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(26, 50)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          ) : (\r\n            <div className=\"select_market\">\r\n              <h2>Please select the market</h2>\r\n            </div>\r\n          )}\r\n          <Grid className=\"stall-pricing-grid\">\r\n            <div className=\"stall-pricing-main-div\">\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#AACE48\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">100/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#3AA54B\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">300/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#A42A56\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">500/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#B3B3B3\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">Booked</div>\r\n              </div>\r\n            </div>\r\n            <Divider className=\"divider\" />\r\n            <div className=\"stall-total-amount-holder\">\r\n              <div className=\"total-amount\">Total Amount</div>\r\n              <div className=\"total-amount\">Rs.{bookedStalls.reduce(\r\n                (total, item) => item.stallPrice + total,\r\n                0\r\n              )}/-</div>\r\n            </div>\r\n          </Grid>\r\n          {numberOfSeats !== 0 && bookedStalls.length !== 0 ? (\r\n            <div className=\"modalbtn\">\r\n              <ConfirmModal setCashOnDelivery={setCashOnDelivery} confirmBooking={confirmBooking} />\r\n            </div>\r\n          ) : (\r\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <Button\r\n                    style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    PAY\r\n                  </Button>\r\n                  <Button style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    PAY IN MARKET\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceBookings;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../../styles/Farmer.css\";\r\n\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\nimport * as echarts from 'echarts';\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\n// import { Bar } from 'react-chartjs-2';\r\n// import NavMenu from \"../../components/NavMenu\";\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\n\r\n\r\n\r\nconst FarmersHome = ({t}) => {\r\n  const [InwardData, setInwardData] = useState([]);\r\n  const [OutwardData, setOutwardData] = useState([]);\r\n  const [InwardDataGraph, setInwardDataGraph] = useState([]);\r\n  const [OutwardDataGraph, setOutwardDataGraph] = useState([]);\r\n  const [salesQuantity, setSalesQuantity] = useState(0);\r\n  const [salesRate, setSalesRate] = useState(0);\r\n  const [purchaseQuantity, setPurchaseQuantity] = useState(0);\r\n  const [purchaseRate, setPurchaseRate] = useState(0);\r\n  const today = new Date();\r\n  const [mondaySalesQuantity, setMondaySalesQuantity] = useState(0);\r\n  const [tuesdaySalesQuantity, setTuesdaySalesQuantity] = useState(0);\r\n  const [wednesdaySalesQuantity, setWednesdaySalesQuantity] = useState(0);\r\n  const [thursdaySalesQuantity, setThursdaySalesQuantity] = useState(0);\r\n  const [fridaySalesQuantity, setFridaySalesQuantity] = useState(0);\r\n  const [saturdaySalesQuantity, setSaturdaySalesQuantity] = useState(0);\r\n  const [sundaySalesQuantity, setSundaySalesQuantity] = useState(0);\r\n  const [mondayPurchaseQuantity, setMondayPurchaseQuantity] = useState(0);\r\n  const [tuesdayPurchaseQuantity, setTuesdayPurchaseQuantity] = useState(0);\r\n  const [wednesdayPurchaseQuantity, setWednesdayPurchaseQuantity] = useState(0);\r\n  const [thursdayPurchaseQuantity, setThursdayPurchaseQuantity] = useState(0);\r\n  const [fridayPurchaseQuantity, setFridayPurchaseQuantity] = useState(0);\r\n  const [saturdayPurchaseQuantity, setSaturdayPurchaseQuantity] = useState(0);\r\n  const [sundayPurchaseQuantity, setSundayPurchaseQuantity] = useState(0);\r\n  const [mondaySalesRate, setMondaySalesRate] = useState(0);\r\n  const [tuesdaySalesRate, setTuesdaySalesRate] = useState(0);\r\n  const [wednesdaySalesRate, setWednesdaySalesRate] = useState(0);\r\n  const [thursdaySalesRate, setThursdaySalesRate] = useState(0);\r\n  const [fridaySalesRate, setFridaySalesRate] = useState(0);\r\n  const [saturdaySalesRate, setSaturdaySalesRate] = useState(0);\r\n  const [sundaySalesRate, setSundaySalesRate] = useState(0);\r\n  const [mondayPurchaseRate, setMondayPurchaseRate] = useState(0);\r\n  const [tuesdayPurchaseRate, setTuesdayPurchaseRate] = useState(0);\r\n  const [wednesdayPurchaseRate, setWednesdayPurchaseRate] = useState(0);\r\n  const [thursdayPurchaseRate, setThursdayPurchaseRate] = useState(0);\r\n  const [fridayPurchaseRate, setFridayPurchaseRate] = useState(0);\r\n  const [saturdayPurchaseRate, setSaturdayPurchaseRate] = useState(0);\r\n  const [sundayPurchaseRate, setSundayPurchaseRate] = useState(0);\r\n  const [location, setlocation] = useState(\"\");\r\n  const [totalPurchase, setTotalPurchase] = useState(0);\r\n  const [totalRemainingSales, setTotalRemainingSales] = useState(0);\r\n  const [totSales, setTotSales] = useState(0);\r\n  const chartRef = useRef(null);\r\n\r\n  const chartData = [mondaySalesQuantity * mondaySalesRate - mondayPurchaseQuantity * mondayPurchaseRate,\r\n  tuesdaySalesQuantity * tuesdaySalesRate - tuesdayPurchaseQuantity * tuesdayPurchaseRate,\r\n  (wednesdaySalesQuantity * wednesdaySalesRate) - (wednesdayPurchaseQuantity * wednesdayPurchaseRate),\r\n  (thursdaySalesQuantity * thursdaySalesRate) - (thursdayPurchaseQuantity * thursdayPurchaseRate),\r\n  fridaySalesQuantity * fridaySalesRate - fridayPurchaseQuantity * fridayPurchaseRate,\r\n  (saturdaySalesQuantity * saturdaySalesRate) - (saturdayPurchaseQuantity * saturdayPurchaseRate),\r\n  (sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate)];\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n  // console.log(InwardData)\r\n\r\n  const arr = { 'Karve Nagar': 2, 'Kondhwa BK':2, 'Hadapsar': 3, 'Undri':3, 'Kharadi IT Park': 4,  'Bramhasun City': 5, 'Wagholi':5, 'Bhavadi Road':6,'Amanora City': 7,'Magarpatta':7,'Green City':7}\r\n\r\n\r\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n  const weekdayNumber = today.getDay();\r\n\r\n  const data = {\r\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n    datasets: [\r\n      {\r\n        label: 'Data',\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        data: [mondaySalesQuantity * mondaySalesRate - mondayPurchaseQuantity * mondayPurchaseRate,\r\n        tuesdaySalesQuantity * tuesdaySalesRate - tuesdayPurchaseQuantity * tuesdayPurchaseRate,\r\n        (wednesdaySalesQuantity * wednesdaySalesRate) - (wednesdayPurchaseQuantity * wednesdayPurchaseRate),\r\n        (thursdaySalesQuantity * thursdaySalesRate) - (thursdayPurchaseQuantity * thursdayPurchaseRate),\r\n        fridaySalesQuantity * fridaySalesRate - fridayPurchaseQuantity * fridayPurchaseRate,\r\n        (saturdaySalesQuantity * saturdaySalesRate) - (saturdayPurchaseQuantity * saturdayPurchaseRate),\r\n        (sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate)]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const locations = [\r\n\r\n    { location: t(\"karvenagar_location\") },\r\n    { location: t(\"Kondhwa BK\") },\r\n    { location: t(\"hadapsar_location\") },\r\n    { location: t(\"Undri\") },   \r\n    { location: t(\"kharadi_iT_park_location\") },\r\n    { location: t(\"bramhasun_city_location\") },\r\n    { location: t(\"wagholi_location\") },\r\n    { location: t(\"Bhavadi Road\") },\r\n    { location: t(\"magarpatta_location\") },\r\n    { location: t(\"amanora_city_location\") },\r\n    { location: t(\"Green City\") }\r\n    \r\n  ];\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const cumulativeData = {};\r\n\r\n\r\n  const marketNames = ['Karve Nagar', 'Kondhwa BK', 'Hadapsar', 'Undri', 'Kharadi IT Park', 'Bramhasun City', 'Wagholi','Bhavadi Road', 'Amanora City', 'Magarpatta','Green City'];\r\n\r\n  // Loop through each market and calculate cumulative data\r\n  for (const market of marketNames) {\r\n    const filteredInwardData = InwardDataGraph.filter(data => data.market === market);\r\n    const filteredOutwardData = OutwardDataGraph.filter(data => data.market === market);\r\n\r\n    const commoditiesInMarket = [...new Set(filteredInwardData.map(data => data.commodity))];\r\n\r\n    const cumulativeDataForMarket = {};\r\n\r\n    let totalNetProfit = 0; // initialize total net profit to 0\r\n\r\n    for (const commodity of commoditiesInMarket) {\r\n      const filteredInwardDataForCommodity = filteredInwardData.filter(data => data.commodity === commodity);\r\n      const totalPurchaseQuantity = filteredInwardDataForCommodity.reduce((sum, data) => sum + data.purchase_quantity, 0);\r\n      const totalPurchaseRate = filteredInwardDataForCommodity.reduce((sum, data) => sum + data.purchase_rate, 0);\r\n\r\n      const filteredOutwardDataForCommodity = filteredOutwardData.filter(data => data.commodity === commodity);\r\n      const totalRemainingSalesCalc = filteredOutwardDataForCommodity.reduce((sum, data) => sum + data.total_sales, 0);\r\n      const totalSalesRate = filteredOutwardDataForCommodity.reduce((sum, data) => sum + data.sales_rate, 0);\r\n\r\n      const netProfit = ((totalPurchaseQuantity - totalRemainingSalesCalc) * totalSalesRate) - (totalPurchaseQuantity * totalPurchaseRate);\r\n\r\n      cumulativeDataForMarket[commodity] = {\r\n        commodity,\r\n        totalPurchaseQuantity,\r\n        totalPurchaseRate,\r\n        // totalSalesQuantity,\r\n        totalRemainingSalesCalc,\r\n        totalSalesRate,\r\n        netProfit\r\n      };\r\n\r\n      totalNetProfit += netProfit; // add net profit of current commodity to total net profit\r\n    }\r\n\r\n    cumulativeData[market] = cumulativeDataForMarket;\r\n    cumulativeData[market].totalNetProfit = totalNetProfit; // add total net profit to cumulative data for current market\r\n  }\r\n\r\n   \r\n\r\n  const options = {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Only run the effect if both location and selectedDate are truthy values\r\n    if (location && selectedDate && searchClicked) {\r\n      console.log(\"here\")\r\n      const date = new Date(selectedDate);\r\n      const year = date.getFullYear();\r\n      const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n      const day = ('0' + date.getDate()).slice(-2);\r\n      const formattedDate = `${year}-${month}-${day}`;\r\n\r\n      console.log(formattedDate); // outputs something like \"2023-04-17\"\r\n\r\n      FarmerService.getInward().then((response) => {\r\n\r\n\r\n        const res = response.data && response.data.filter((e) => e.market === location && e.time.slice(0, 10) === formattedDate);\r\n        console.log(res);\r\n        setInwardData(res); // Move the setInwardData method inside the then method\r\n      });\r\n\r\n      FarmerService.getOutward().then((response) => {\r\n        const res = response.data && response.data.filter((e) => e.market === location && e.time.slice(0, 10) === formattedDate);\r\n        console.log(res);\r\n        setOutwardData(res); // Move the setOutwardData method inside the then method\r\n      });\r\n      setSearchClicked(false)\r\n    }\r\n  }, [location, selectedDate, searchClicked]);\r\n\r\n  const handleSearchClick = () => {\r\n    if (location === \"\") {\r\n\r\n      toast.warn('Please Select Market!', {\r\n        position: 'top-right',\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    }\r\n    else setSearchClicked(true); // Set searchClicked to true when the search button is clicked\r\n  };\r\n\r\n  useEffect(() => {\r\n    FarmerService.getInward().then((res) => {\r\n      setInwardDataGraph(res.data);\r\n    });\r\n\r\n    FarmerService.getOutward().then((res) => {\r\n      setOutwardDataGraph(res.data);\r\n      // console.log(res.data)\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  function calculateSalesQuantity(i, y) {\r\n    let temp = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.sales_quantity;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function handleDateChange(date) {\r\n    const selectedDate = new Date(date);\r\n    const day = selectedDate.getDate();\r\n    const month = selectedDate.getMonth() + 1;\r\n    const year = selectedDate.getFullYear();\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    console.log(formattedDate); // outputs \"12/4/2023\" for April 12th, 2023\r\n\r\n    setSelectedDate(selectedDate);\r\n  }\r\n\r\n\r\n  function calculateSalesRate(i, y) {\r\n    let temp = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.sales_rate;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function calculatePurchaseRate(i, y) {\r\n    let temp = 0;\r\n    if (InwardDataGraph) {\r\n      InwardData.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.purchase_rate;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function calculatePurchaseQuality(i, y) {\r\n    let temp = 0;\r\n    if (InwardDataGraph) {\r\n      InwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.purchase_quantity;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculateSalesQuantity(0, setSundaySalesQuantity)\r\n      }\r\n      else if (i === 1) {\r\n        calculateSalesQuantity(1, setMondaySalesQuantity)\r\n      }\r\n      else if (i === 2) {\r\n        calculateSalesQuantity(2, setTuesdaySalesQuantity);\r\n      }\r\n      else if (i === 3) {\r\n        calculateSalesQuantity(3, setWednesdaySalesQuantity)\r\n      }\r\n      else if (i === 4) {\r\n        calculateSalesQuantity(4, setThursdaySalesQuantity)\r\n      }\r\n      else if (i === 5) {\r\n        calculateSalesQuantity(5, setFridaySalesQuantity)\r\n      }\r\n      else if (i === 6) {\r\n        calculateSalesQuantity(6, setSaturdaySalesQuantity)\r\n      }\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculateSalesRate(0, setSundaySalesRate)\r\n      }\r\n      else if (i === 1) {\r\n        calculateSalesRate(1, setMondaySalesRate)\r\n      }\r\n      else if (i === 2) {\r\n        calculateSalesRate(2, setTuesdaySalesRate);\r\n      }\r\n      else if (i === 3) {\r\n        calculateSalesRate(3, setWednesdaySalesRate)\r\n      }\r\n      else if (i === 4) {\r\n        calculateSalesRate(4, setThursdaySalesRate)\r\n      }\r\n      else if (i === 5) {\r\n        calculateSalesRate(5, setFridaySalesRate)\r\n      }\r\n      else if (i === 6) {\r\n        calculateSalesRate(6, setSaturdaySalesRate)\r\n      }\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculatePurchaseRate(0, setSundayPurchaseRate)\r\n      }\r\n      else if (i === 1) {\r\n        calculatePurchaseRate(1, setMondayPurchaseRate)\r\n      }\r\n      else if (i === 2) {\r\n        calculatePurchaseRate(2, setTuesdayPurchaseRate);\r\n      }\r\n      else if (i === 3) {\r\n        calculatePurchaseRate(3, setWednesdayPurchaseRate)\r\n      }\r\n      else if (i === 4) {\r\n        calculatePurchaseRate(4, setThursdayPurchaseRate)\r\n      }\r\n      else if (i === 5) {\r\n        calculatePurchaseRate(5, setFridayPurchaseRate)\r\n      }\r\n      else if (i === 6) {\r\n        calculatePurchaseRate(6, setSaturdayPurchaseRate)\r\n      }\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculatePurchaseQuality(0, setSundayPurchaseQuantity)\r\n      }\r\n      else if (i === 1) {\r\n        calculatePurchaseQuality(1, setMondayPurchaseQuantity)\r\n      }\r\n      else if (i === 2) {\r\n        calculatePurchaseQuality(2, setTuesdayPurchaseQuantity);\r\n      }\r\n      else if (i === 3) {\r\n        calculatePurchaseQuality(3, setWednesdayPurchaseQuantity)\r\n      }\r\n      else if (i === 4) {\r\n        calculatePurchaseQuality(4, setThursdayPurchaseQuantity)\r\n      }\r\n      else if (i === 5) {\r\n        calculatePurchaseQuality(5, setFridayPurchaseQuantity)\r\n      }\r\n      else if (i === 6) {\r\n        calculatePurchaseQuality(6, setSaturdayPurchaseQuantity)\r\n      }\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let totalSalesRate = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          totalSalesRate += e.sales_rate;\r\n        }\r\n      });\r\n      setSalesRate(totalSalesRate);\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n\r\n\r\n  const handleLocation = (e) => {\r\n    if (!selectedDate) {\r\n      toast.warn('Please Select Date!', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    }\r\n    else setlocation(e.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let totalPurchaseRate = 0;\r\n    if (InwardDataGraph) {\r\n      InwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          console.log(e.market)\r\n          totalPurchaseRate += e.purchase_rate;\r\n        }\r\n      });\r\n      setPurchaseRate(totalPurchaseRate);\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n  function handlePAndL() {\r\n    const profitLossArray = []; // Create an empty array to store profit/loss values\r\n    InwardData.forEach((inwardItem) => {\r\n      const matchingOutwardItem = OutwardData.find(\r\n        (outwardItem) => outwardItem.commodity === inwardItem.commodity\r\n      );\r\n\r\n      if (matchingOutwardItem) {\r\n        const purchaseQuantity = inwardItem.purchase_quantity;\r\n        const purchaseRate = inwardItem.purchase_rate;\r\n        const remainingSales = matchingOutwardItem.total_sales;\r\n        const salesRate = matchingOutwardItem.sales_rate;\r\n        \r\n        const profitLoss =\r\n          ((purchaseQuantity - remainingSales) * salesRate) -\r\n          (purchaseQuantity * purchaseRate);\r\n\r\n        const existingProfit = profitLossArray.find(\r\n          (item) => item.commodity === inwardItem.commodity\r\n        );\r\n\r\n        if (existingProfit) {\r\n          existingProfit.profit += profitLoss;\r\n        } else {\r\n          profitLossArray.push({\r\n            commodity: inwardItem.commodity,\r\n            profit: profitLoss\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return profitLossArray; // Return the array of profit/loss values\r\n  }\r\n\r\n  console.log(chartRef);\r\n\r\n  useEffect(() => {\r\n    // Initialize the ECharts instance\r\n    const chart = echarts.init(chartRef.current);\r\nconsole.log(cumulativeData['Hadapsar']['totalNetProfit'])\r\n    // Define the chart options\r\n    const options = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: [t('mon'), t('tue'), t('wed'), t('thu'), t('fri'), t('sat'), t('sun')],\r\n        axisLabel: {\r\n          show: true,\r\n          interval: 0, // Display all labels\r\n          textStyle: {\r\n            fontSize: 12 // Adjust the font size as needed\r\n          },\r\n          // rotate: -45 \r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      dataGroupId: '',\r\n      animationDurationUpdate: 500,\r\n      series: [{\r\n       \r\n        type: 'bar',\r\n         id: 'sales',\r\n         itemStyle: {\r\n          color: 'lightgreen' // Change the color of the bars here\r\n        },\r\n        data: [\r\n          // {\r\n          //   value: 0,\r\n          //   groupId: t('monday')\r\n          // },\r\n          {\r\n            value: chartData[1],\r\n            groupId: t('tuesday')\r\n          },\r\n          { value: cumulativeData['Karve Nagar']['totalNetProfit']+cumulativeData['Kondhwa BK']['totalNetProfit'],\r\n          groupId: t('tuesday')\r\n          },\r\n          {\r\n            value: cumulativeData['Hadapsar']['totalNetProfit']+cumulativeData['Undri']['totalNetProfit'],\r\n            groupId: t('wednesday')\r\n          },\r\n\r\n          {\r\n            value: cumulativeData['Kharadi IT Park']['totalNetProfit'],\r\n            groupId: t('thursday')\r\n          },\r\n          {\r\n            value: cumulativeData['Bramhasun City']['totalNetProfit'] + cumulativeData['Wagholi']['totalNetProfit'], \r\n            groupId: t('friday')\r\n          },\r\n          {\r\n            value: cumulativeData['Bhavadi Road']['totalNetProfit'], \r\n            groupId: t('saturday')\r\n          },\r\n          {\r\n            value: cumulativeData['Amanora City']['totalNetProfit'] + cumulativeData['Magarpatta']['totalNetProfit']+cumulativeData['Green City']['totalNetProfit'],\r\n            groupId: t('sunday')\r\n          }\r\n        ],\r\n        universalTransition: {\r\n          enabled: true,\r\n          divideShape: 'clone'\r\n        }\r\n      }]\r\n    };\r\n\r\n    // Set the chart options and render the chart\r\n    chart.setOption(options);\r\n   \r\n    console.log('Cumulative Data for all Markets:', cumulativeData);\r\n\r\n\r\n    \r\n    // Loop through each market\r\n    for (const market in cumulativeData) {\r\n      console.log(`Market: ${market}`);\r\n      // Loop through each commodity in the current market\r\n      for (const commodity in cumulativeData[market]) {\r\n        const netProfit = cumulativeData[market][commodity].netProfit;\r\n        console.log(`Commodity: ${commodity}, Net Profit: ${netProfit}`);\r\n      }\r\n    }\r\n    const karveNagarData = Object.keys(cumulativeData['Karve Nagar'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Karve Nagar'][commodity]['netProfit']])\r\n    const kondhwaData = Object.keys(cumulativeData['Kondhwa BK'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Kondhwa BK'][commodity]['netProfit']])\r\n    const hadapsarData = Object.keys(cumulativeData['Hadapsar'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Hadapsar'][commodity]['netProfit']])\r\n    const kharadiData = Object.keys(cumulativeData['Kharadi IT Park'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Kharadi IT Park'][commodity]['netProfit']])\r\n    const magarpattaData = Object.keys(cumulativeData['Magarpatta'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Magarpatta'][commodity]['netProfit']])\r\n    const amanoraData = Object.keys(cumulativeData['Amanora City'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Amanora City'][commodity]['netProfit']])\r\n    const BramhasuncityData = Object.keys(cumulativeData['Bramhasun City'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit')\r\n                            .map(commodity => [commodity, cumulativeData['Bramhasun City'][commodity]['netProfit']])\r\n    // const wanawadiData = Object.keys(cumulativeData['Wanawadi'])\r\n    //                         .filter(commodity => commodity !== 'totalNetProfit')\r\n    //                         .map(commodity => [commodity, cumulativeData['Wanawadi'][commodity]['netProfit']])\r\n    const WagholiData = Object.keys(cumulativeData['Wagholi'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit')\r\n                            .map(commodity => [commodity, cumulativeData['Wagholi'][commodity]['netProfit']])\r\n    // const adityaNandanvanData = Object.keys(cumulativeData['Aditya Nandanvan'])\r\n    //                         .filter(commodity => commodity !== 'totalNetProfit')\r\n    //                         .map(commodity => [commodity, cumulativeData['Aditya Nandanvan'][commodity]['netProfit']])\r\n    const undriData = Object.keys(cumulativeData['Undri'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit')\r\n                            .map(commodity => [commodity, cumulativeData['Undri'][commodity]['netProfit']])\r\n    const greenCityData = Object.keys(cumulativeData['Green City'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Green City'][commodity]['netProfit']])\r\n    const bhavadiData = Object.keys(cumulativeData['Bhavadi Road'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Bhavadi Road'][commodity]['netProfit']])\r\n\r\n    const drilldownData = [\r\n      {\r\n        dataGroupId: t('tuesday'),\r\n        data: Object.keys(cumulativeData['Karve Nagar'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Karve Nagar'][commodity]['netProfit']])\r\n      },\r\n      {\r\n        dataGroupId: t('wednesday'),\r\n        data: Object.keys(cumulativeData['Hadapsar'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Hadapsar'][commodity]['netProfit']])\r\n      },\r\n\r\n      {\r\n        dataGroupId: t('thursday'),\r\n        data: Object.keys(cumulativeData['Kharadi IT Park'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Kharadi IT Park'][commodity]['netProfit']])\r\n      },\r\n      {\r\n        dataGroupId: t('tuesday'),\r\n        data: [\r\n          ...karveNagarData,\r\n          ...kondhwaData\r\n          \r\n        ]\r\n      },\r\n      {\r\n        dataGroupId: t('wednesday'),\r\n        data: [\r\n          ...hadapsarData,\r\n          ...undriData\r\n        ],\r\n      },\r\n      {\r\n        dataGroupId: t('thursday'),\r\n        data: [\r\n          ...kharadiData\r\n        ]\r\n      },\r\n\r\n      {\r\n        dataGroupId: t('friday'),\r\n        data: [\r\n          ...BramhasuncityData,\r\n          ...WagholiData\r\n        ],\r\n      },\r\n      {\r\n        dataGroupId: t('saturday'),\r\n        data: [\r\n          ...bhavadiData\r\n        ],\r\n      },\r\n      {\r\n        dataGroupId: t('sunday'),\r\n        data: [\r\n          ...magarpattaData,\r\n          ...amanoraData,\r\n          ...greenCityData\r\n        ]\r\n      }\r\n    ];\r\n\r\n    chart.on('click', function (event) {\r\n      if (event.data) {\r\n        var subData = drilldownData.find(function (data) {\r\n          return data.dataGroupId === event.data.groupId;\r\n        });\r\n        if (!subData) {\r\n          return;\r\n        }\r\n        chart.setOption({\r\n          xAxis: {\r\n            data: subData.data.map(function (item) {\r\n              return item[0];\r\n            })\r\n          },\r\n          series: {\r\n            type: 'bar',\r\n            id: 'sales',\r\n            dataGroupId: subData.dataGroupId,\r\n            data: subData.data.map(function (item) {\r\n              return item[1];\r\n            }),\r\n            universalTransition: {\r\n              enabled: true,\r\n              divideShape: 'clone'\r\n            }\r\n          },\r\n          graphic: [\r\n            {\r\n              type: 'text',\r\n              left: 50,\r\n              top: 20,\r\n              style: {\r\n                text: 'Back',\r\n                fontSize: 18\r\n              },\r\n              onclick: function () {\r\n                chart.setOption(options);\r\n              }\r\n            }\r\n          ]\r\n        });\r\n     }\r\n    });\r\n  \r\n    \r\n    // Dispose the chart instance when the component is unmounted\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [chartData, InwardDataGraph]);\r\n  const [totalPurchaseQuantity1, setTotalPurchaseQuantity1] = useState(0);\r\n  \r\n  // useEffect(() => {\r\n  //   // Calculate total purchase quantity after InwardData has been updated\r\n  //   let totalRemaining = 0;\r\n  //   OutwardData.forEach((e) => {\r\n  //     totalRemaining += e.total_sales;\r\n  //   });\r\n  //   setTotalRemainingSales(totalRemaining);\r\n  // }, [OutwardData]);\r\n\r\n  useEffect(() => {\r\n    // Calculate total purchase quantity after InwardData has been updated\r\n    let totalPurchase = 0;\r\n    OutwardData.forEach((e) => {\r\n      totalPurchase += e.total_sales;\r\n    });\r\n    setTotalPurchaseQuantity1(totalPurchase);\r\n  }, [InwardData]);\r\n\r\n  const profitLossArray = handlePAndL()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Calculate and update the total purchase and remaining sales after the inward and outward data have been processed\r\n    const calculateTotals = () => {\r\n      let purchaseTotal = 0;\r\n      let remainingSalesTotal = 0;\r\n\r\n      InwardData.forEach((inwardItem) => {\r\n        const matchingOutwardItem = OutwardData.find(\r\n          (outwardItem) => outwardItem.commodity === inwardItem.commodity\r\n        );\r\n\r\n        if (matchingOutwardItem) {\r\n          purchaseTotal += inwardItem.purchase_quantity;\r\n          remainingSalesTotal += matchingOutwardItem.total_sales;\r\n        }\r\n      });\r\n\r\n      setTotalPurchase(purchaseTotal);\r\n      setTotalRemainingSales(remainingSalesTotal);\r\n    };\r\n\r\n    calculateTotals();\r\n  }, [InwardData, OutwardData]);\r\n  return (\r\n    <>\r\n\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <div className=\"inOutData\">\r\n\r\n      </div>\r\n\r\n      <div className=\"farmers_page\">\r\n        <div className=\"backbtndiv\">\r\n          <Link className=\"backbtn green backbtndiv\" to=\"/farmers\" >\r\n            {t(\"back\")}\r\n          </Link>\r\n        </div>\r\n\r\n        {InwardData && OutwardData && (\r\n          <div className=\"farmers\">\r\n            <div className=\"farmers_data\">\r\n              <Grid className=\"input-div-holder-new\" container spacing={3}>\r\n\r\n                <Grid item xs={12} sm={6} className=\"date-input-farmer-home\">\r\n                  <InputLabel className=\"farmerDataLabel\">\r\n                    {t(\"enter_booking_date\")}\r\n                  </InputLabel>\r\n                  <DatePicker\r\n                    renderInput={(props) => <TextField {...props} />}\r\n                    selected={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    placeholderText=\"Select a date\"\r\n                    value={selectedDate}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid className=\"select-market-grid\" item xs={12} sm={6}>\r\n                  <InputLabel className=\"farmerDataLabel\">\r\n                    {t(\"select_market\")}\r\n                  </InputLabel>\r\n                  <FormControl className=\"formcontrol\" sx={{ width: \"100%\", fontSize: 14 }}>\r\n                    <InputLabel color=\"success\" className=\"stall-booking-lable\">\r\n                      {t(\"market_label\")}\r\n                    </InputLabel>\r\n                    {console.log(searchClicked)}\r\n                    <Select\r\n                      className=\"textfield\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={location}\r\n                      color=\"success\"\r\n                      onChange={\r\n                        handleLocation}\r\n                      label=\"address\"\r\n                      name=\"address\"\r\n                      required\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {t(e.location)}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n\r\n                <div className=\"searchButton\">\r\n                  <Button\r\n                    onClick={handleSearchClick}\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    sx={{ m: 2 }}\r\n                  >\r\n                    {t(\"search\")}\r\n                  </Button>\r\n                </div>\r\n\r\n\r\n              </Grid>\r\n\r\n              {InwardData.length !== 0 && (\r\n                <div className=\"inwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"inward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {/* <div className=\"farmerdata_items\">\r\n                      <p>Purchase Rate : {purchaseRate}</p>\r\n                    </div>\r\n                    <div className=\"farmerdata_items\">\r\n                      <p>Purchase Quantity : {purchaseQuantity}</p>\r\n                    </div> */}\r\n                    {InwardData.map((e, i) => {\r\n                      \r\n                    return (\r\n                    <div key={i} className=\"farmerdata_items\">\r\n                      {console.log(e)}\r\n                      <p>{t(\"commodity\")} {e.commodity}</p>\r\n                      <p>{t(\"market\")} {e.market}</p>\r\n                      <p>{t(\"purchase_rate\")} {e.purchase_rate}</p>\r\n                      <p>{t(\"purchase_quantity\")} {e.purchase_quantity}</p>\r\n                    </div>)})}\r\n                  </div>\r\n                </div>\r\n\r\n              )}\r\n              {InwardData.length === 0 && (\r\n                <div className=\"inwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"inward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {t(\"no_inward_data_available\")}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {OutwardData.length !== 0 && (\r\n                <div className=\"outwardData\">\r\n                  {console.log(salesQuantity)}\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"outward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {OutwardData.map((e, i) => {\r\n                      return (\r\n                        <div key={i} className=\"farmerdata_items\">\r\n                          <p>{t(\"commodity\")} {e.commodity}</p>\r\n                          <p>{t(\"market\")} {e.market}</p>\r\n                          <p>{t(\"sales_rate\")} {e.sales_rate}</p>\r\n                          <p>{t(\"Remaining_Sales\")} : {e.total_sales}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {OutwardData.length === 0 && (\r\n                <div className=\"outwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"outward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                  {t(\"no_outward_data_available\")}\r\n                  </div>\r\n                </div>\r\n\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {InwardData.length !== 0 ? (\r\n                <div style={{ display: 'Grid', alignItems: 'Center', justifyContent: 'center', marginTop: '2rem' }}>\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"Cumulative Sales Data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                  <div className=\"farmerdata_items\">\r\n                  <h3>{t(\"Total Purchase Quantity\")}: {totalPurchase}</h3>\r\n                  <h3>\r\n                        {totalPurchase}\r\n                        </h3>\r\n     \r\n            </div>\r\n            <div className=\"farmerdata_items\">\r\n          <h3>{t(\"Total Remaining Sales\")}: {totalRemainingSales}</h3>\r\n           <h3>\r\n                        {totalRemainingSales}\r\n                        </h3>\r\n     \r\n        </div>\r\n        <div className=\"farmerdata_items\">\r\n                      <h3>{t(\"Total Sales\")}: {(totalPurchase - totalRemainingSales)}</h3>\r\n          <h3>\r\n                        {(totalPurchase - totalRemainingSales)}\r\n                        </h3>\r\n    \r\n      </div>\r\n      </div>\r\n    </div>\r\n  ) : (     console.log(\"no\")\r\n   )}\r\n</div> \r\n\r\n\r\n            <div>\r\n              {InwardData.length !== 0 && OutwardData.length !== 0 ? (\r\n                <div style={{ display: 'Grid', alignItems: 'Center', justifyContent: 'center', marginTop: '2rem' }}>\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"profit_loss_label\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    <div className=\"farmerdata_items\">\r\n                      \r\n                      <h3>\r\n                        {profitLossArray.map((item, index) => (\r\n                          <div key={index}>\r\n                           {t(\"commodity\")}: {item.commodity}\r\n                            <br />\r\n                            {item.profit > 0 ? (\r\n                              <span>\r\n                                {t(\"Profit of\")} {item.profit}\r\n                                <br />\r\n                              </span>\r\n                            ) : (\r\n                              <span>\r\n                                {t(\"Loss of\")} {Math.abs(item.profit)}\r\n                                <br />\r\n                              </span>\r\n                            )}\r\n                            ---\r\n                          </div>\r\n                        ))}\r\n                      </h3>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                console.log(\"no\")\r\n              )}\r\n            </div>\r\n\r\n\r\n\r\n            <h1>{t(\"market_details\")}</h1>\r\n\r\n            <div className=\"second-row\">\r\n              <div className=\"inwardData\">\r\n                <h3 style={{ padding: \"0 0\" }}>{t(\"market_days\")}</h3>\r\n                <div className=\"farmersdata_container\">\r\n                  <div className=\"farmerdata_items\">\r\n                    <p>{t(\"monday\")}    : None</p>\r\n                    <p>{t(\"tuesday\")}   : {t(\"karvenagar_location\")},{t(\"Kondhwa BK\")}</p>\r\n                    <p>{t(\"wednesday\")} : {t(\"hadapsar_location\")}, {t(\"Undri\")}</p>\r\n                    <p>{t(\"thursday\")}  :  {t(\"kharadi_iT_park_location\")}</p>\r\n                    <p>{t(\"friday\")}    : {t(\"bramhasun_city_location\")}, {t(\"wagholi_location\")} </p>\r\n                    <p>{t(\"saturday\")}  : {t(\"Bhavadi Road\")}</p>\r\n                    <p>{t(\"sunday\")}    : {t(\"magarpatta_location\")}, {t(\"amanora_city_location\")}, {t(\"Green City\")}</p>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* { <Bar className=\"bar\"\r\n                data={data}\r\n                options={options}\r\n              >\r\n                {console.log((sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate))}\r\n              </Bar> } */}\r\n\r\n              <div className=\"graph\" ref={chartRef} style={{ width: '85%', height: '350px', alignItems:'center' }}>\r\n  {/* The chart container */}\r\n</div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        )}\r\n        {!InwardData && !OutwardData && <Spinner />}\r\n\r\n\r\n        <div className=\"pageBottom\" ></div>\r\n      </div>\r\n      {/* {mobile?<NavMenu\r\n       />:console.log(\"desktop\")} */}\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default FarmersHome;\r\n\r\n\r\n\r\n{/* <div>\r\n  {InwardData.length !== 0 ? (\r\n    <div style={{ display: 'Grid', alignItems: 'Center', justifyContent: 'center', marginTop: '2rem' }}>\r\n      <h3 style={{ padding: \"1rem 0\" }}>{t(\"Cumulative Sales Data\")}</h3>\r\n      <div className=\"farmersdata_container\">\r\n        <div className=\"farmerdata_items\">\r\n          <h3>Total Purchase Quantity: {purchaseQuantity}</h3>\r\n          {/* <h3 key={index}>\r\n                          {totalPurchaseQuantity1}\r\n                        </h3>\r\n     */}\r\n//         </div>\r\n//         <div className=\"farmerdata_items\">\r\n//           <h3>Total Remaining Sales: {totalRemainingSales}</h3>\r\n//           {/* <h3 key={index}>\r\n//                           {totalPurchaseQuantity1}\r\n//                         </h3>\r\n//      */}\r\n//         </div>\r\n//         <div className=\"farmerdata_items\">\r\n//           <h3>Total Sales: {purchaseQuantity - totalRemainingSales}</h3>\r\n//           {/* <h3 key={index}>\r\n//                           {totalPurchaseQuantity1}\r\n//                         </h3>\r\n//      */}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   ) : (\r\n//     console.log(\"no\")\r\n//   )}\r\n// </div> */}","import React from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\n// import FarmerNav from \"./FarmerNav\";\r\n\r\nconst FarmersMain = () => {\r\n  return (\r\n    <div style={{ postion: \"relative\" }}>\r\n      \r\n      <Outlet />\r\n      {/* <FarmerNav /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmersMain;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"../../styles/Farmer.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport dayjs from \"dayjs\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\n\r\nconst theme = createTheme();\r\nexport default function InwardData({t}) {\r\n  const locations = [\r\n    { location: t(\"karvenagar_location\") },\r\n    { location: t(\"Kondhwa BK\") },\r\n    { location: t(\"hadapsar_location\") },\r\n    { location: t(\"Undri\") },   \r\n    { location: t(\"kharadi_iT_park_location\") },\r\n    { location: t(\"bramhasun_city_location\") },\r\n    { location: t(\"wagholi_location\") },\r\n    { location: t(\"Bhavadi Road\") },\r\n    { location: t(\"magarpatta_location\") },\r\n    { location: t(\"amanora_city_location\") },\r\n    { location: t(\"Green City\") },\r\n  ];\r\n\r\n  const options = [\r\n    //leaves\r\n    { label: t(\"Amaranthus\") },\r\n    { label: t(\"Beet Root\") },\r\n    { label: t(\"Chukka- sorrel Leaves\") },\r\n    { label: t(\"Colocasia Leaves\") },\r\n    { label: t(\"Curry Leaves\") },\r\n    { label: t(\"Dill\") },\r\n    { label: t(\"Fenugreek Leaves\") },\r\n    { label: t(\"Green Amaranth\") },\r\n    { label: t(\"Spinach\") },\r\n    { label: t(\"Spring Onion\") },\r\n    { label: t(\"Sufflower\") },\r\n    // Wild-Antic\r\n    { label: t(\"Chilli\") },\r\n    { label: t(\" Colocasia Roots\") },\r\n    { label: t(\"Cucumber Madras\") },\r\n    { label: t(\"Kohlrabi\") },\r\n    { label: t(\"Onion White-Pandhara Kanda\") },\r\n    { label: t(\"Pointed Gourd\") },\r\n    { label: t(\"Pumpkin\") },\r\n    { label: t(\"Raw Jackfruit\") },\r\n    { label: t(\"Raw Papaya\") },\r\n    { label: t(\"Sambhar Kanda\") },\r\n    { label: t(\"Snake Gourd\") },\r\n    { label: t(\"Spiny Gourd\") },\r\n    { label: t(\"Sweet Potato\") },\r\n    { label: t(\"Yam\") },\r\n    // Exotic\r\n    { label: t(\"Asparagus\") },\r\n    { label: t(\"Avocado\") },\r\n    { label: t(\"Baby Corn\") },\r\n    { label: t(\"Baby Potato\") },\r\n    { label: t(\"Basil\") },\r\n    { label: t(\"Broccoli\") },\r\n    { label: t(\"Celery\") },\r\n    { label: t(\"Cherry Tomato\") },\r\n    { label: t(\"chinese Cabbage\") },\r\n    { label: t(\"Coccinia\") },\r\n    { label: t(\"Green Zucchini\") },\r\n    { label: t(\"Iceberg Lettuce\") },\r\n    { label: t(\"Parsley\") },\r\n    { label: t(\"Red Cabbage\") },\r\n    { label: t(\"Red Capsicum\") },\r\n    { label: t(\"Romaine Lettuce\") },\r\n    { label: t(\"Yellow Capsicum\") },\r\n    { label: t(\"Yellow Zucchini\") },\r\n    { label: t(\"Mushroom\") },\r\n    { label: t(\"Sweet Corn\") },\r\n    { label: t(\"Sweet Corn Grains\") },\r\n    // Special stall\r\n    { label: t(\"Cabbage\") },\r\n    { label: t(\"Potato (Agra)\") },\r\n    { label: t(\"Potato (Indore)\") },\r\n    { label: t(\"Potato (Talegav)\") },\r\n    // Fruit Vegetables\r\n    { label: t(\"Beans Double\") },\r\n    { label: t(\"Bitter Gourd\") },\r\n    { label: t(\"Brinjal Big\") },\r\n    { label: t(\"Brinjal Green\") },\r\n    { label: t(\"Brinjal Long Green\") },\r\n    { label: t(\"Brinjal Purple\") },\r\n    { label: t(\"Carrot\") },\r\n    { label: t(\"Cauliflower\") },\r\n    { label: t(\"Chavali Beans\") },\r\n    { label: t(\"Chickpeas - Chana sprouts\") },\r\n    { label: t(\"chilli - Bhavgagari Mirchi\") },\r\n    { label: t(\"Chilli Green\") },\r\n    { label: t(\"chilli Simple\") },\r\n    { label: t(\"Cluster Beans\") },\r\n    { label: t(\"Coconut\") },\r\n    { label: t(\"Colocasia Roots\") },\r\n    { label: t(\"Coriander\") },\r\n    { label: t(\"Cucumber\") },\r\n    { label: t(\"Cucumder Madras\") },\r\n    { label: t(\"Cucumber Madras- Sambar Kakadi\") },\r\n    { label: t(\"Cucumber Polyhouse- English Kakadi\") },\r\n    { label: t(\"Drum Sticks\") },\r\n    { label: t(\"Field Beans\") },\r\n    { label: t(\"Fresh Peeled Green Peas\") },\r\n    { label: t(\"Garlic\") },\r\n    { label: t(\"Ginger\") },\r\n    { label: t(\"Green Capsicum\") },\r\n    { label: t(\"Green Mango\") },\r\n    { label: t(\"Green Peas\") },\r\n    { label: t(\"Groundnut Pods\") },\r\n    { label: t(\"Tamarind\") },\r\n    { label: t(\"Lady Finger\") },\r\n    { label: t(\"Lemon Grass\") },\r\n    { label: t(\"Mint\") },\r\n    { label: t(\"Onion\") },\r\n    { label: t(\"Onion Sambhar\") },\r\n    { label: t(\"Lima Beans\") },\r\n    { label: t(\"Peeled Garlic\") },\r\n    { label: t(\"Potato\") },\r\n    { label: t(\"Radish\") },\r\n    { label: t(\"Ridgegourd\") },\r\n    { label: t(\"Sponge Gourd\") },\r\n    { label: t(\"Tomato\") },\r\n    { label: t(\"Wal\") },\r\n    { label: t(\"Wal Broad\") },\r\n    { label: t(\"Wal surati\") },\r\n    { label: t(\"Water Chestnuts\") },\r\n    // Fruit Export\r\n    { label: t(\"Apple Fuji\") },\r\n    { label: t(\"Apple Green\") },\r\n    { label: t(\"Apple Kinnaur\") },\r\n    { label: t(\"Apple Red Delicious\") },\r\n    { label: t(\"Apple Shimla Big\") },\r\n    { label: t(\"Kiwi\") },\r\n    { label: t(\"Litchi\") },\r\n    { label: t(\"Strawberry\") },\r\n    // Fruit Summer\r\n    { label: t(\"Grapes Black\") },\r\n    { label: t(\"Grapes Green\") },\r\n    { label: t(\"Jambhul\") },\r\n    { label: t(\"Mango Badami (For Juice)\") },\r\n    { label: t(\"Mango Devgad Hapus\") },\r\n    { label: t(\"Mango Keshar\") },\r\n    { label: t(\"Mango Lalbag\") },\r\n    { label: t(\"Mango Payri\") },\r\n    { label: t(\"Mango Ratnagiri Hapus\") },\r\n    { label: t(\"Mango Totapuri\") },\r\n    { label: t(\"Muskmelon\") },\r\n    { label: t(\"Watermelon Kiran\") },\r\n    { label: t(\"Watermelon Regular\") },\r\n    // Fruit\r\n    { label: t(\"Amla\") },\r\n    { label: t(\"Apple Gourd\") },\r\n    { label: t(\"Ashgourd\") },\r\n    { label: t(\"Banana\") },\r\n    { label: t(\"Custard-apple\") },\r\n    { label: t(\"Elaichi Banana\") },\r\n    { label: t(\"Figs\") },\r\n    { label: t(\"Guava\") },\r\n    { label: t(\"Jackfruit Peeled\") },\r\n    { label: t(\"Jujube - Ber\") },\r\n    { label: t(\"Orange Small\") },\r\n    { label: t(\"Orange Kinnow\") },\r\n    { label: t(\"Papaya\") },\r\n    { label: t(\"Pear Imported\") },\r\n    { label: t(\"Pomogranate\") },\r\n    { label: t(\"Raw Banana\") },\r\n    { label: t(\"Sapodilla\") },\r\n    { label: t(\"Sugarcane\") },\r\n    { label: t(\"Sweet Lime\") },\r\n    { label: t(\"Tender\") },\r\n\r\n\r\n\r\n\r\n  ];\r\n  \r\n  const [Data, setData] = useState({\r\n    purchase_quantity: undefined,\r\n    purchase_rate: undefined,\r\n    market: \"\",\r\n  });\r\n  const [commodity, setcommodity] = useState(\"\");\r\n\r\n  const handleData = (e) => {\r\n    console.log(e.target.value)\r\n    const { name, value } = e.target;\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      Data.purchase_quantity &&\r\n      Data.purchase_rate &&\r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postInward(\r\n        commodity,\r\n        Data.purchase_quantity,\r\n        Data.purchase_rate,\r\n        Data.market,\r\n        time\r\n      ).then(\r\n        () => {\r\n          toast.success(t(\"inward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",     \r\n          });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            market: \"\",\r\n            purchase_rate: 0,\r\n            purchase_quantity: 0,\r\n          });\r\n          setcommodity(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAdd = (event) => {\r\n    event.preventDefault();\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      Data.purchase_quantity &&\r\n      Data.purchase_rate &&\r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postInward(\r\n        commodity,\r\n        Data.purchase_quantity,\r\n        Data.purchase_rate,\r\n        Data.market,\r\n        time\r\n      ).then(\r\n        () => {\r\n          toast.success(t(\"inward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            purchase_quantity: \"\",\r\n            purchase_rate: \"\",\r\n            market: Data.market, // Preserve the selected market value\r\n          });\r\n          setcommodity(\"\");\r\n        },\r\n        (error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            market: Data.market, // Preserve the selected market value,\r\n            purchase_rate: 0,\r\n            purchase_quantity: 0,\r\n          });\r\n          setcommodity(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n\r\nconsole.log(Data)\r\n  return (\r\n\r\n    <div className=\"data_container\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <Container className=\"main\" component=\"main\" maxWidth=\"sm\" sx={{width: '100%'}}>\r\n          <CssBaseline />\r\n          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }}>\r\n            {t(\"back\")}\r\n          </Link>\r\n          <Box\r\n            className=\"box2\"\r\n            sx={{\r\n              // marginTop: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"20px 0px 10px 0px\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"h4\" fontFamily= 'Arturo' sx={{marginBottom:'1.5rem'}}>\r\n              {t(\"farmer_inward_data\")} !!\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ padding: 0, marginTop: '-0.5rem', width: '100%'}}>\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\", height: \"70px\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"select_market\")}\r\n                    </Typography>\r\n                    <Select\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield select-market\"\r\n                      labelId=\"demo-simple-select-autowidth-label\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={Data.market}\r\n                      onChange={handleData}\r\n                      // label=\"market\"\r\n                      name=\"market\"\r\n                      required\r\n                      color=\"success\"\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {e.location}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"select_one_commodity\")}\r\n                    </Typography>\r\n                    <Autocomplete\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield\"\r\n                      isOptionEqualToValue={(option, value) =>\r\n                        value ? option.value === value.value : false\r\n                      }\r\n\r\n                      disablePortal\r\n                      id=\"combo-box-demo\"\r\n                      onChange={(event, value) => setcommodity(value?.label)}\r\n                      value={commodity}\r\n                      options={options}\r\n                      sx={{ width: \"100%\" }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          color=\"success\"\r\n                          className=\"textfield\"\r\n                          name=\"commodity\"\r\n                          style={{ height: '100%' }} \r\n                          {...params}\r\n                        // label=\"Commodities\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" style={{ marginTop: \"1rem\" }} fontFamily= 'Arturo'>\r\n                      {t(\"purchase_quantity\")} \"kg\"<sup>*</sup>\r\n\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"purchase_quantity\"\r\n                      value={Data.purchase_quantity}\r\n                      onChange={handleData}\r\n                      // label=\"Purchase Quantity\"\r\n                      type=\"number\"\r\n                      id=\"purchase quantity\"\r\n                      autoComplete=\"new-purchase quantity\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"purchase_rate\")} (Rs/kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"purchase_rate\"\r\n                      value={Data.purchase_rate}\r\n                      onChange={handleData}\r\n                      // label=\"Purchase Rate\"\r\n                      type=\"number\"\r\n                      id=\"purchase rate\"\r\n                      autoComplete=\"new-purchase rate\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                \r\n              </Grid>\r\n              <Grid className=\"add-submit\">\r\n                <Button\r\n                  className=\"btn\"\r\n                  onClick={handleAdd}\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1, marginLeft: { xs: \"115px\", lg: \"180px\" }, marginTop: '1rem' }}\r\n                >\r\n                  {t(\"add\")}\r\n                </Button>\r\n                <Button\r\n                  className=\"btn\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1, marginLeft:{xs:\"115px\", lg:\"180px\"}, marginTop:\"1rem\"}}\r\n                  fontFamily= 'Arturo'\r\n                >\r\n                  {t(\"submit\")}\r\n                </Button>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n          <div className=\"pageBottom\" ></div>\r\n        </Container>\r\n      </ThemeProvider>\r\n      \r\n      {/* {mobile?<NavMenu\r\n         />:console.log(\"desktop\")} */}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"70%\",\r\n  height:\"80%\",\r\n  overflow:\"auto\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function ConfirmDelete({Delete , id, t}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div style={{textAlign:\"center\",backgroundColor:\"white\",marginTop:\"10px\"}}>\r\n      <Button onClick={handleOpen}>Cancel Booking</Button>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n         <Box sx={style}>\r\n          <button className=\"closebtn\" onClick={handleClose} style={{ marginLeft: '-250px', marginTop: '-15px' }}>\r\n            &times;\r\n          </button>\r\n          <div className='terms_and_conditions'>\r\n            <h1>{t(\"Terms_of_service\")}</h1>\r\n            <br/>\r\n            <h2>{t(\"wingrow_farmers_market\")}</h2>\r\n            <h3 class=\"city\">{t(\"role_of_wingrow_agritech\")}</h3>\r\n            <p><li>{t(\"role_para_1\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_2\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_3\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_4\")}</li>\r\n            <br/>\r\n            </p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"personal_information\")}</h3>\r\n            <br/>\r\n            <p>{t(\"personal_info_para_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"account_and_registration_obligations\")}</h3>\r\n            <br/>\r\n            <p>{t(\"acc_and_registration_obligations_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"LICENSE_&_SITE_ACCESS\")}</h3>\r\n            <br/>\r\n            <p>{t(\"LICENSE_&_SITE_ACCESS_PARA\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"pricing\")} </h3>\r\n            <br/>\r\n            <p>{t(\"pricing_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"return_and_refunds\")}</h3>\r\n            <br/>\r\n            <p>{t(\"return_and_refunds_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"cancellation_of_booking\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"cancellation_booking_para_1\")}</li>\r\n            <br/>\r\n              <li>{t(\"cancellation_booking_para_2\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"PAYMENT_FOR_BOOKING_AND_ANY_ADDITIONAL_CHARGES\")}</h3>\r\n            <br/>\r\n            <h4>{t(\"FULL_PAYMENT\")}</h4>\r\n            <br/>\r\n            <p>{t(\"Full_payment_para\")}</p>\r\n            <br/>\r\n            <h4>{t(\"CANCELLATION_CHARGES\")}</h4>\r\n            <br/>\r\n            <p></p>\r\n            <br/>\r\n            <p>\r\n              <table style={{width:\"100%\"}}>\r\n                <tr>\r\n                  <th>{t(\"cancellation_charges_head_1\")}</th>\r\n                  <th>{t(\"cancellation_charges_head_2\")}</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{t(\"cancellation_data_1\")}</td>\r\n                  <td>{t(\"cancellation_data_2\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_3\")}</td>\r\n                    <td>{t(\"cancellation_data_4\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_5\")}</td>\r\n                    <td>{t(\"cancellation_data_6\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_6\")}</td>\r\n                    <td>{t(\"cancellation_data_7\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_9\")}</td>\r\n                    <td>{t(\"cancellation_data_10\")}</td>\r\n                </tr>\r\n              </table>\r\n              </p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"YOU_AGREE_AND_CONFIRM\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"confirm_para_1\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_2\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_3\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_4\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"not_use_for_these\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"not_use_for_these_1\")}</li>\r\n              <li>{t(\"not_use_for_these_2\")}</li>\r\n              <li>{t(\"not_use_for_these_3\")}</li>\r\n              <li>{t(\"not_use_for_these_4\")}</li>\r\n              <li>{t(\"not_use_for_these_5\")}</li>\r\n              <li>{t(\"not_use_for_these_6\")}</li>\r\n              <li>{t(\"not_use_for_these_7\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"modification_of_t_and_c\")}</h3>\r\n            <br/>\r\n            <p>{t(\"modification_t_and_c_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"COPYRIGHT_&_TRADEMARK\")}</h3>\r\n            <br/>\r\n            <p>{t(\"copyright_and_trademark_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"OBJECTIONABLE_MATERIAL\")}</h3>\r\n            <br/>\r\n            <p>{t(\"objectionable_material_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"INDEMNITY\")} </h3>\r\n            <br/>\r\n            <p>{t(\"indemnity_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"TERMINATION\")}</h3>\r\n            <br/>\r\n            <p>{t(\"termination_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"RESCHEDULING_OF_TICKET\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"rescheduling_ticket_1\")}</li>\r\n              <li>{t(\"rescheduling_ticket_2\")}</li>\r\n              <li>{t(\"rescheduling_ticket_3\")}</li>\r\n              <li>{t(\"rescheduling_ticket_4\")}</li>\r\n              <li>{t(\"rescheduling_ticket_5\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"responsibilities\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"responsibilities_1\")}</li>\r\n              <li>{t(\"responsibilities_2\")}</li>\r\n              <li>{t(\"responsibilities_3\")}</li>\r\n              <li>{t(\"responsibilities_4\")}</li>\r\n              <li>{t(\"responsibilities_5\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"MISCELLANEOUS\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"MISCELLANEOUS_1\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_2\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_3\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_4\")}</li></p>\r\n            <br/>\r\n            <Button id={id} onClick={(e)=>{Delete(e); handleClose()}}>Confirm Delete?</Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React , {useState , useEffect} from 'react'\r\nimport AuthService from '../../services/auth.service'\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/MyBookings.css'\r\nimport Spinner from '../../components/Spinner';\r\nimport dayjs from 'dayjs'\r\nimport ConfirmDelete from '../../components/ConfirmDelete';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NavMenu from '../../components/NavMenu';\r\nimport useWindowDimensions from '../../components/useWindowDimensions';\r\n\r\nconst MyBookings = ({t}) => {\r\n    const user = AuthService.getCurrentUser()\r\n    const [MyStalls, setMyStalls] = useState();\r\n    var num = 0;\r\n    const { REACT_APP_API_URL } = process.env;\r\n\r\n    useEffect(() => {\r\n        FarmerService.getBookedStalls().then((res) => {\r\n            const { data } = res;\r\n            const filteredData = data.filter(e => e.bookedBy === user.id);\r\n            const sortedData = filteredData.sort((a, b) => new Date(b.bookedAt) - new Date(a.bookedAt));\r\n            setMyStalls(sortedData);\r\n        })\r\n    }, [user])\r\n\r\n\r\n    \r\n\r\n    const handleDelete = (e) => {\r\n       const DeleteId = e.target.id;\r\n       const cancelledStall = MyStalls.filter(e => e._id === DeleteId)\r\n       const [data] = cancelledStall;\r\n       data.cancelledAt = dayjs(Date.now()).format(\"YYYY-MM-DD\");\r\n        data.bookedBy = user.id\r\n        data.firstname = user.firstname\r\n        data.lastname = user.lastname\r\n        data.phone = user.phone\r\n        console.log(\"data - \",data)\r\n        axios.post(REACT_APP_API_URL+\"cancelledstalls\" , data , {headers:authHeader()})\r\n        axios.delete(REACT_APP_API_URL+\"bookedstalls\" , { headers: authHeader()  , data:{id: DeleteId}})\r\n        .then(res =>  {\r\n            if(res)\r\n            {\r\n                const resp = res.data;\r\n                const filData = MyStalls.filter(e => e._id !== resp._id)\r\n                // axios.post(\"https://wingrowmarket.onrender.com/cancelledstalls\" , data , {headers:authHeader()})\r\n                setMyStalls(filData);\r\n                toast.success('Cancelled successfully!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    });\r\n            }\r\n            else{\r\n                toast.warn('Failed to cancel booking!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    });\r\n            }\r\n       })\r\n    }\r\n\r\n    const [mobile, setmobile] = useState(false)\r\n\r\n    const { width } = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width < 850) {\r\n            setmobile(true)\r\n        } else {\r\n            setmobile(false)\r\n        }\r\n    }, [width])\r\n\r\n  return (\r\n    <>\r\n    \r\n    {MyStalls?<div className='bookings_container'>\r\n              {num = MyStalls.length}\r\n              {console.log(num)}\r\n    <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        />\r\n        \r\n        <div className='booking_content'>\r\n            <div className='booking_cards'> \r\n                      <div className='backbtndiv'>\r\n                          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginLeft: '-1100px' }}>\r\n                              {t(\"back\")}\r\n                          </Link>\r\n                      </div>  \r\n               \r\n            </div>\r\n\r\n            <div className='card_booking'>\r\n                {\r\n                          \r\n                    MyStalls.map((e,i)=>{\r\n                        const bookingExpired = e.bookedAt < dayjs(Date.now()).format(\"YYYY-MM-DD\") ? true : false;\r\n                        return(\r\n                            <div key={i} className='cards_section'>\r\n                                <div className='card'>\r\n                                    <div className='card_content'>\r\n                                        {bookingExpired && <h2 style={{color:\"red\",textAlign:\"center\"}}>Booking Expired</h2>}\r\n                                        <br/>\r\n                                        <h2 className='card_header'><span>Stall No : {num--}</span>\r\n                                        </h2>\r\n                                        <p className='card_para'>{e.location}</p>\r\n                                        <p className='card_para'>{e.address}</p>\r\n                                        <p className='card_para'>{e.stallName}</p>\r\n                                        <p className='card_para'>{e.bookedAt}</p>\r\n                                        <span>\r\n                                                {bookingExpired?\r\n                                                <div style={{cursor:\"not-allowed\",padding:\"4px\",backgroundColor:\"gray\",border:\"none\",marginTop:\"10px\",textAlign:\"center\"}}>Booking Expired</div>\r\n                                                :\r\n                                                <span><ConfirmDelete t={t} Delete={handleDelete} id={e._id}/></span>\r\n                                        }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    </div>:<Spinner/>}\r\n    <div className=\"pageBottom\" ></div>\r\n          {/* {mobile?<NavMenu\r\n             />:console.log(\"desktop\")} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyBookings","import React, { useState,useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"../../styles/Farmer.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\n// import InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport dayjs from \"dayjs\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function OutwardData({t}) {\r\n\r\n  const locations = [\r\n    { location: t(\"karvenagar_location\") },\r\n    { location: t(\"Kondhwa BK\") },\r\n    { location: t(\"hadapsar_location\") },\r\n    { location: t(\"Undri\") },   \r\n    { location: t(\"kharadi_iT_park_location\") },\r\n    { location: t(\"bramhasun_city_location\") },\r\n    { location: t(\"wagholi_location\") },\r\n    { location: t(\"Bhavadi Road\") },\r\n    { location: t(\"magarpatta_location\") },\r\n    { location: t(\"amanora_city_location\") },\r\n    { location: t(\"Green City\") },\r\n\r\n  ];\r\n\r\n  const options = [\r\n    // Leaves\r\n    { label: t(\"Amaranthus\") },\r\n    { label: t(\"Beet Root\") },\r\n    { label: t(\"Chukka- sorrel Leaves\") },\r\n    { label: t(\"Colocasia Leaves\") },\r\n    { label: t(\"Curry Leaves\") },\r\n    { label: t(\"Dill\") },\r\n    { label: t(\"Fenugreek Leaves\") },\r\n    { label: t(\"Green Amaranth\") },\r\n    { label: t(\"Spinach\") },\r\n    { label: t(\"Spring Onion\") },\r\n    { label: t(\"Sufflower\") },\r\n    // Wild-Antic\r\n    { label: t(\"Chilli\") },\r\n    { label: t(\" Colocasia Roots\") },\r\n    { label: t(\"Cucumber Madras\") },\r\n    { label: t(\"Kohlrabi\") },\r\n    { label: t(\"Onion White-Pandhara Kanda\") },\r\n    { label: t(\"Pointed Gourd\") },\r\n    { label: t(\"Pumpkin\") },\r\n    { label: t(\"Raw Jackfruit\") },\r\n    { label: t(\"Raw Papaya\") },\r\n    { label: t(\"Sambhar Kanda\") },\r\n    { label: t(\"Snake Gourd\") },\r\n    { label: t(\"Spiny Gourd\") },\r\n    { label: t(\"Sweet Potato\") },\r\n    { label: t(\"Yam\") },\r\n    // Exotic\r\n    { label: t(\"Asparagus\") },\r\n    { label: t(\"Avocado\") },\r\n    { label: t(\"Baby Corn\") },\r\n    { label: t(\"Baby Potato\") },\r\n    { label: t(\"Basil\") },\r\n    { label: t(\"Broccoli\") },\r\n    { label: t(\"Celery\") },\r\n    { label: t(\"Cherry Tomato\") },\r\n    { label: t(\"chinese Cabbage\") },\r\n    { label: t(\"Coccinia\") },\r\n    { label: t(\"Green Zucchini\") },\r\n    { label: t(\"Iceberg Lettuce\") },\r\n    { label: t(\"Parsley\") },\r\n    { label: t(\"Red Cabbage\") },\r\n    { label: t(\"Red Capsicum\") },\r\n    { label: t(\"Romaine Lettuce\") },\r\n    { label: t(\"Yellow Capsicum\") },\r\n    { label: t(\"Yellow Zucchini\") },\r\n    { label: t(\"Mushroom\") },\r\n    { label: t(\"Sweet Corn\") },\r\n    { label: t(\"Sweet Corn Grains\") },\r\n    // Special stall\r\n    { label: t(\"Cabbage\") },\r\n    { label: t(\"Potato (Agra)\") },\r\n    { label: t(\"Potato (Indore)\") },\r\n    { label: t(\"Potato (Talegav)\") },\r\n    // Fruit Vegetables\r\n    { label: t(\"Beans Double\") },\r\n    { label: t(\"Bitter Gourd\") },\r\n    { label: t(\"Brinjal Big\") },\r\n    { label: t(\"Brinjal Green\") },\r\n    { label: t(\"Brinjal Long Green\") },\r\n    { label: t(\"Brinjal Purple\") },\r\n    { label: t(\"Carrot\") },\r\n    { label: t(\"Cauliflower\") },\r\n    { label: t(\"Chavali Beans\") },\r\n    { label: t(\"Chickpeas - Chana sprouts\") },\r\n    { label: t(\"chilli - Bhavgagari Mirchi\") },\r\n    { label: t(\"Chilli Green\") },\r\n    { label: t(\"chilli Simple\") },\r\n    { label: t(\"Cluster Beans\") },\r\n    { label: t(\"Coconut\") },\r\n    { label: t(\"Colocasia Roots\") },\r\n    { label: t(\"Coriander\") },\r\n    { label: t(\"Cucumber\") },\r\n    { label: t(\"Cucumder Madras\") },\r\n    { label: t(\"Cucumber Madras- Sambar Kakadi\") },\r\n    { label: t(\"Cucumber Polyhouse- English Kakadi\") },\r\n    { label: t(\"Drum Sticks\") },\r\n    { label: t(\"Field Beans\") },\r\n    { label: t(\"Fresh Peeled Green Peas\") },\r\n    { label: t(\"Garlic\") },\r\n    { label: t(\"Ginger\") },\r\n    { label: t(\"Green Capsicum\") },\r\n    { label: t(\"Green Mango\") },\r\n    { label: t(\"Green Peas\") },\r\n    { label: t(\"Groundnut Pods\") },\r\n    { label: t(\"Tamarind\") },\r\n    { label: t(\"Lady Finger\") },\r\n    { label: t(\"Lemon Grass\") },\r\n    { label: t(\"Mint\") },\r\n    { label: t(\"Onion\") },\r\n    { label: t(\"Onion Sambhar\") },\r\n    { label: t(\"Lima Beans\") },\r\n    { label: t(\"Peeled Garlic\") },\r\n    { label: t(\"Potato\") },\r\n    { label: t(\"Radish\") },\r\n    { label: t(\"Ridgegourd\") },\r\n    { label: t(\"Sponge Gourd\") },\r\n    { label: t(\"Tomato\") },\r\n    { label: t(\"Wal\") },\r\n    { label: t(\"Wal Broad\") },\r\n    { label: t(\"Wal surati\") },\r\n    { label: t(\"Water Chestnuts\") },\r\n    // Fruit Export\r\n    { label: t(\"Apple Fuji\") },\r\n    { label: t(\"Apple Green\") },\r\n    { label: t(\"Apple Kinnaur\") },\r\n    { label: t(\"Apple Red Delicious\") },\r\n    { label: t(\"Apple Shimla Big\") },\r\n    { label: t(\"Kiwi\") },\r\n    { label: t(\"Litchi\") },\r\n    { label: t(\"Strawberry\") },\r\n    // Fruit Summer\r\n    { label: t(\"Grapes Black\") },\r\n    { label: t(\"Grapes Green\") },\r\n    { label: t(\"Jambhul\") },\r\n    { label: t(\"Mango Badami (For Juice)\") },\r\n    { label: t(\"Mango Devgad Hapus\") },\r\n    { label: t(\"Mango Keshar\") },\r\n    { label: t(\"Mango Lalbag\") },\r\n    { label: t(\"Mango Payri\") },\r\n    { label: t(\"Mango Ratnagiri Hapus\") },\r\n    { label: t(\"Mango Totapuri\") },\r\n    { label: t(\"Muskmelon\") },\r\n    { label: t(\"Watermelon Kiran\") },\r\n    { label: t(\"Watermelon Regular\") },\r\n    // Fruit\r\n    { label: t(\"Amla\") },\r\n    { label: t(\"Apple Gourd\") },\r\n    { label: t(\"Ashgourd\") },\r\n    { label: t(\"Banana\") },\r\n    { label: t(\"Custard-apple\") },\r\n    { label: t(\"Elaichi Banana\") },\r\n    { label: t(\"Figs\") },\r\n    { label: t(\"Guava\") },\r\n    { label: t(\"Jackfruit Peeled\") },\r\n    { label: t(\"Jujube - Ber\") },\r\n    { label: t(\"Orange Small\") },\r\n    { label: t(\"Orange Kinnow\") },\r\n    { label: t(\"Papaya\") },\r\n    { label: t(\"Pear Imported\") },\r\n    { label: t(\"Pomogranate\") },\r\n    { label: t(\"Raw Banana\") },\r\n    { label: t(\"Sapodilla\") },\r\n    { label: t(\"Sugarcane\") },\r\n    { label: t(\"Sweet Lime\") },\r\n    { label: t(\"Tender\") },\r\n\r\n  ];\r\n\r\n\r\n  const [Data, setData] = useState({\r\n    // sales_quantity: undefined,\r\n    total_sales: undefined,\r\n    sales_rate: undefined,\r\n    \r\n    market: \"\",\r\n  });\r\n\r\n  const [commodity, setcommodity] = useState(\"\");\r\n\r\n  const handleData = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name+\" \"+value)\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      // Data.sales_quantity &&\r\n      Data.total_sales &&\r\n      Data.sales_rate &&\r\n      \r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postOutward(\r\n        commodity,\r\n        // Data.sales_quantity,\r\n        Data.total_sales,\r\n        Data.sales_rate,\r\n        \r\n        Data.market,\r\n        time\r\n      ).then(\r\n        () => {\r\n          toast.success(t(\"outward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            market: \"\",\r\n            total_sales: 0,\r\n            sales_rate: 0,\r\n            // sales_quantity: 0,\r\n            \r\n          });\r\n          setcommodity(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAdd = (event) => {\r\n    event.preventDefault();\r\n\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      // Data.sales_quantity &&\r\n      Data.total_sales &&\r\n      Data.sales_rate &&\r\n      \r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postOutward(\r\n        commodity,\r\n        // Data.sales_quantity,\r\n        Data.total_sales,\r\n        Data.sales_rate,\r\n        \r\n        Data.market,\r\n        time\r\n      )\r\n        .then(() => {\r\n          toast.success(t(\"outward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          // Clear form fields after successful submission\r\n          setData({\r\n            // sales_quantity: \"\",\r\n            sales_rate: \"\",\r\n            total_sales: \"\",\r\n            market: Data.market, // Preserve the selected market value\r\n          });\r\n          setcommodity(\"\");\r\n        })\r\n        .catch((error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n  return (\r\n    <div className=\"data_container\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <Container className=\"main\" component=\"main\" maxWidth=\"sm\">\r\n          <CssBaseline />\r\n          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }} style={{marginLeft: '20px', marginBottom:'10px', marginTop:'0px',  position: 'relative', top:'15px'}}>\r\n            {t(\"back\")}\r\n          </Link>\r\n          <Box\r\n            className=\"box2\"\r\n            sx={{\r\n              // marginTop: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"20px 0px 10px 0px\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n\r\n\r\n            <Typography component=\"h1\" variant=\"h4\" className=\"outward-heading\" sx={{marginBottom:'1.5rem'}}>\r\n                {t(\"farmer_outward_data\")}!!\r\n\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ padding: 0, marginTop:'-2.5rem', width:'100%'}}>\r\n              <Grid container spacing={0} >\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\", height: \"70px\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"select_market\")}\r\n                    </Typography>\r\n                    <Select\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield select-market\"\r\n                      labelId=\"demo-simple-select-autowidth-label\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={Data.market}\r\n                      onChange={handleData}\r\n                      // label=\"market\"\r\n                      name=\"market\"\r\n                      required\r\n                      color=\"success\"\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {e.location}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"select_one_commodity\")}\r\n                    </Typography>\r\n                    <Autocomplete\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield\"\r\n                      isOptionEqualToValue={(option, value) =>\r\n                        value ? option.value === value.value : false\r\n                      }\r\n                      disablePortal\r\n                      id=\"combo-box-demo\"\r\n                      onChange={(event, value) => setcommodity(value?.label)}\r\n                      value={commodity}\r\n                      options={options}                      \r\n                      sx={{ width: \"100%\" }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n\r\n                          color=\"success\"\r\n                          className=\"textfield\"\r\n                          name=\"commodity\"\r\n                          style={{ height: '100%' }}\r\n                          {...params}\r\n                        // label=\"commodities\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"Remaining_Sales\")} (Rs/kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"total_sales\"\r\n                      value={Data.total_sales}\r\n                      onChange={handleData}\r\n                      // label=\"Sales Rate\"\r\n                      type=\"number\"\r\n                      id=\"total sales\"\r\n                      autoComplete=\"new-total sales\"\r\n\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"sales_rate\")} (Rs/kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"sales_rate\"\r\n                      value={Data.sales_rate}\r\n                      onChange={handleData}\r\n                      // label=\"Sales Rate\"\r\n                      type=\"number\"\r\n                      id=\"sales rate\"\r\n                      autoComplete=\"new-sales rate\"\r\n                    \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                \r\n              </Grid>\r\n              <Grid className=\"add-submit\">\r\n                <Button\r\n                  className=\"btn\"\r\n                  onClick={handleAdd}\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1 , marginLeft:{xs:\"115px\", lg:\"180px\"}, marginTop:'1rem'}}\r\n                >\r\n                  {t(\"add\")}\r\n                </Button>\r\n                <Button\r\n                  className=\"btn\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1, marginLeft: { xs: \"115px\", lg: \"180px\" }, marginTop: '1rem' }}\r\n                >\r\n                  {t(\"submit\")}\r\n                </Button>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n          <div className=\"pageBottom\" ></div>\r\n        </Container>\r\n      </ThemeProvider>\r\n     \r\n      {/* {mobile?<NavMenu\r\n        />:console.log(\"desktop\")} */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/Farmer.css'\r\nimport Spinner from '../../components/Spinner'\r\nimport useWindowDimensions from '../../components/useWindowDimensions'\r\n// import NavMenu from '../../components/NavMenu'\r\n\r\nconst StallsPlaces = ({t}) => {\r\n  const [stalls, setStalls] = useState()\r\n  const set = new Set();\r\n  const places = [];\r\n  const day = [\"Wednesday(3-9PM) \",\"Tuesday(3-9PM)\",\"Sunday(3-9PM)\",\"Sunday(7-9PM)\",\"Friday(3-9PM)\",\"Thursday (3-9PM)\",\"Friday(3-9PM)\",\"Wednesday(3-9PM)\",\"Saturday(3-9PM)\",\"Thuesday(3-9PM)\",\"Sunday (3-9PM)\",\"Sunday\"]\r\n  // const day = [\"tuesday\",\"tuesday\",\"wednesday\",\"wednesday\",\"thursday\",\"friday\",\"friday\",\"saturday\",\"saturday\",\"sunday\",\"sunday\",\"sunday\"]\r\n  const navigate = useNavigate()\r\n\r\n\r\n  if (stalls) {\r\n    for (let item of stalls) {\r\n      set.add(item.location)\r\n    }\r\n  }\r\n\r\n  for (let key of set){ \r\n    places.push(key);\r\n    console.log(places[0]);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    FarmerService.getMyStalls()\r\n      .then(res => { setStalls(res.data); console.log(res.data) })\r\n\r\n  }, [])\r\n\r\n  const handleClick = (ev) => {\r\n    const Id = ev.target.id\r\n    navigate(`stalls/${Id}`)\r\n  }\r\n\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {stalls && <div className='places_market_container'>\r\n        <div className='backbtnflex'>\r\n          <Link style={{ marginTop: '16px' }} className=\"backbtn green flex\" to=\"/farmers\" >\r\n            {t(\"back\")}\r\n          </Link>\r\n          <h2 className='main_header_places'>{t(\"Select Wingrow Market From Pune..\")}</h2>\r\n        </div>\r\n\r\n        <div className='places_wrapper'>\r\n          {\r\n            places && places.map((e, i) => {\r\n              return (\r\n                <div onClick={handleClick} key={e} id={e} className={`places_market_component${i % 4}`}>\r\n                  <img id={e} alt='logo' className='image_1' src=\"../images/4.webp\" />\r\n                  <div id={e}>\r\n                  {console.log(e)}\r\n                    <span id={e} className='places_headers'>{t(\"Wingrow Market in\")} <br />{t(e)} <br/>{day[i]}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n\r\n          }\r\n        </div>\r\n      </div>}\r\n      {!stalls && <Spinner />}\r\n      <div className=\"pageBottom\" ></div>\r\n      {/* {mobile?<NavMenu\r\n        />:console.log(\"no\")} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StallsPlaces","import \"../../styles/Test.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Stall from \"./Stall\";\r\nimport UserService from '../../services/user.service'\r\n\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport dayjs from \"dayjs\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import SelectSeatModal from \"../../components/SelectSeatModal\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n// Added\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { InputLabel } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { format } from 'date-fns';\r\n// import { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n// import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n// import NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n// import {styled} from '@mui/material'\r\n\r\n\r\n// const StyledIcon = styled(ArrowForwardIcon)`\r\n// font-size: 20vw;\r\n// max-height: 40px;\r\n// `\r\nconst useStyles = makeStyles({\r\n  arrowIcon: {\r\n    position:'relative',\r\n    top:'5rem'\r\n  },\r\n});\r\n\r\n\r\nconst userCurr = AuthService.getCurrentUser();\r\n\r\nfunction Test({ setbookingDetails, setValue, t }) {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n  const [data, setdata] = useState();\r\n  const[MyStalls,setMyStalls] = useState([]);\r\n  const [UpdatedData, setUpdatedData] = useState();\r\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\r\n  const [bookedStalls, setBookedStalls] = useState([]);\r\n  const [Loading, setLoading] = useState();\r\n  const { Id } = useParams();\r\n  const [value, setvalue] = useState(0);\r\n  const[status,setStatus] = useState(false)\r\n  const [alreadyBooked, setAlreadyBooked] = useState();\r\n  const [alreadyBookedLocataion, setAlreadyBookedLocation] = useState(0);\r\n  const [open, setOpen] = useState();\r\n  const [sub,setSub] = useState([]);\r\n  const[maxDate,setMaxDate] = useState();\r\n  const[first,setFirst] = useState(0)\r\n  const[second,setSecond] = useState(0)\r\n  const[third,setThird] = useState(0)\r\n\r\n  const[stall,setStall] = useState(8);\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n  const [totalStall, setTotalStalls] = useState(0);\r\n  const [available, setAvailable] = useState(0);\r\n  const today = new Date();\r\n  const[error,setError] = useState('')\r\n  const[subId,setSubId] = useState()\r\n  const todayFormatted = today.toISOString().slice(0, 10);\r\n  const [date, setdate] = useState(null);\r\n  const [number,setNumber] = useState(10)\r\n  const [message, setMessage] = useState('');\r\n  const [message2, setMessage2] = useState('');\r\n  const [message3, setMessage3] = useState('Please select stalls');\r\n  const [selected, setSelected] = useState([]);\r\n  const [weekId, setWeekId] = useState(0)\r\n  const arr = { 'Karve Nagar': 2, 'Kondhwa BK':2, 'Hadapsar': 3, 'Undri':3, 'Kharadi IT Park': 4,  'Bramhasun City': 5, 'Wagholi':5, 'Bhavadi Road':6, 'Amanora City': 7,'Magarpatta':7,'Green City':7}\r\n  const weekdays = ['monday','tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\r\n  const API_URL = \"https://wingrowmarket.com:8443/\";\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  // useEffect(()=>{\r\n  //   setStatus(st)\r\n  // },[status])\r\n  var status1 = true\r\n\r\n  const RenderIcon=()=>{\r\n    const icons = [];\r\n    for(var i=0; i<151; i++){\r\n      icons.push(<i style={{marginLeft: '10px'}} class=\"arrow right\"></i>);\r\n      // <i class=\"arrow right\"></i>\r\n    }\r\n    return icons;\r\n  }\r\n  const RenderIcon2=()=>{\r\n    const icons = [];\r\n    for(var i=0; i<152; i++){\r\n      icons.push(<i style={{marginLeft: '10px'}} class=\"arrow left\"></i>);\r\n      // <i class=\"arrow right\"></i>\r\n    }\r\n    return icons;\r\n  }\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(max-width: 767px)');\r\n    setIsMobile(mediaQuery.matches);\r\n    setWeekId(arr[Id])\r\n    // if(date.getDay() !== weekId){\r\n    //   setMessage(\"CHANGE DATE\")\r\n    // }\r\n    // console.log(\"weeks number\",arr[Id])\r\n    const listener = () => setIsMobile(mediaQuery.matches);\r\n    mediaQuery.addListener(listener);\r\n\r\n    return () => {\r\n      mediaQuery.removeListener(listener)\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  function disableDays(d) {\r\n    const today = new Date();\r\n    const selectedDate = new Date(d);\r\n\r\n    if(weekId === 7) {\r\n    setWeekId(0);\r\n    }\r\n    // Disable all days except the current day and the days that have the same day of the week as the selected date\r\n    return !(selectedDate.getDay() === weekId );\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(\"hello inside prebook\")\r\n  //   FarmerService.getBookedStalls().then(async(res)=>{\r\n  //       const {data} = res;\r\n  //       console.log(\"the data is- \",data)\r\n  //       //check for date of the booked stall date greater than equal to subscribed\r\n  //       if(sub.length !== 0){\r\n  //         const currentDate = new Date(sub[sub.length-1].date)\r\n  //         console.log(\"hello---  \",sub[sub.length-1].date)\r\n  //       setMyStalls(data.filter(e=> { \r\n        \r\n  //     if(e.bookedBy === userCurr.id && sub[sub.length-1].date <= e.bookedAt){\r\n  //       return true\r\n  //     } }))\r\n  //       console.log(\"the booked stalls are -- \", MyStalls)\r\n  //       console.log(sub)\r\n  //       var r = MyStalls.length\r\n  //       console.log(stall,r)\r\n  //       if(stall <=r ){\r\n  //         //subscribe again\r\n  //         const id = sub[sub.length-1]._id\r\n  //         if(status == \"active\"){\r\n  //           setStatus(false)\r\n  //           setStalls(0)\r\n  //           const s = \"expired\"\r\n            \r\n  //         await axios.put(API_URL+\"changestatus\",{id,s})\r\n  //         .then((res)=>{\r\n  //           window.location.reload(false);\r\n  \r\n  //           console.log(\"passed\")\r\n  \r\n  //         })\r\n  //         .catch((error)=>{\r\n  //           console.log(\"failed\")\r\n  //         })\r\n  //       }\r\n  //         console.log(\"sub is-\",sub[sub.length-1]._id)\r\n          \r\n          \r\n  //       }else{\r\n\r\n  //         setStalls(stall-r)\r\n  //         console.log(\"stall\",stall)\r\n  //       }\r\n  //   }\r\n  //   })\r\n  // }, [MyStalls,sub,stall])\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n\r\n    FarmerService.getMyStalls().then( (response) => {\r\n      setLoading(false);\r\n\r\n      console.log(\"response \",response.data)\r\n      setdata(response.data);\r\n    });\r\n    if (date !== null) {\r\n      FarmerService.getBookedStalls().then((response) => {\r\n    \r\n\r\n        const res = response.data && response.data.filter((e) => e.location === `${Id}` && e.bookedAt === date);\r\n        setAlreadyBooked(response.data);\r\n        setAlreadyBookedLocation(res.length);\r\n        console.log('alreadyBooked:', res)\r\n      });\r\n\r\n      handleOpen(true);\r\n    }\r\n    UserService.getSub(userCurr.id).then( (res)=>{\r\n      const {data} = res\r\n      console.log(\"all the subscriptions :\",data)\r\n      \r\n      console.log(\"helllooooooo \",data[data.length-1])\r\n      if(data.length !== 0){\r\n      if(data[data.length-1].status === \"active\"){\r\n        setSub(data)\r\n         setStatus(true)\r\n         status1 = true\r\n\r\n        setSubId(data[data.length-1]._id)\r\n        setStall(data[data.length-1].stalls)\r\n\r\n        const n  = Math.min(Number(data[data.length-1].stalls),3)\r\n        console.log(n)\r\n        setNumber(n)\r\n      }else{\r\n        setNumber(1000)\r\n\r\n        setStatus(false)\r\n        status1 = false\r\n\r\n      }\r\n      const currentDate = new Date(data[data.length-1].date)\r\n      \r\n      var year= currentDate.getFullYear();\r\n      var month = Number(currentDate.getMonth()) ;\r\n      var date = Number(currentDate.getDate());\r\n      // if(month == 0 || month == 2 ||month == 4 ||month == 6 ||month == 7 ||month == 9 || \r\n      //   month == 11 ){\r\n      //     if(Number(date) + 7 > 31){\r\n      //       date = Number(date) + 7 -31\r\n      //       month = month + 1\r\n      //     }else{\r\n      //       date = date + 7\r\n            \r\n      //     }\r\n      //   }\r\n      // else if(month == 1){\r\n      //   if(Number(date) + 7 > 28 ){\r\n      //     date = Number(date) + 7 -28\r\n      //     month = month + 1\r\n      //   }\r\n      //   else{\r\n      //     date = date + 7\r\n      //   }\r\n      // }else{\r\n      //   if(date + 7 > 30){\r\n      //     month = month + 1\r\n      //     date = Number(date) + 7 -30\r\n      //   }\r\n      //   else{\r\n      //     date = date + 7\r\n      //   }\r\n      // }\r\n\r\n      var currentDate1 = new Date(year,month,date + 90)\r\n          \r\n          //const validDate = String(year) + \"-\" + String(month) + \"-\" + String(date)\r\n          const dateNew = dayjs(currentDate1).format(\"YYYY-MM-DD\")\r\n          console.log(dateNew)\r\n          //setValidTill(dateNew)\r\n          setFirst(data[data.length-1].first)\r\n          setSecond(data[data.length-1].second)\r\n          setThird(data[data.length-1].third)\r\n        //  setStalls(data[data.length - 1].stalls)\r\n      //const dateNew = new Date(year,month-1,date)\r\n      //console.log(today,dateNew)\r\n      const dateToday  = new Date(dateNew)\r\n      console.log('status :', status)\r\n      console.log(today,dateToday)\r\n      setMaxDate(dateNew)\r\n      if(today > dateToday){\r\n        setStatus(false)\r\n        status1 = false\r\n        setNumber(1000)\r\n      }\r\n      const validDate = String(year) +\"-\" + String(month) + \"-\" + String(date)\r\n      console.log(\"\",validDate)\r\n      console.log('status :', status)\r\n      \r\n    }\r\n    })\r\n  }, [date, Id,status]);\r\n\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const res = data && data.filter((e) => e.location === `${Id}`);\r\n    console.log(\"updated data acc to loc:\",res)\r\n    setUpdatedData(res);\r\n  }, [Id, data]);\r\n\r\n  useEffect(() => {\r\n    if (UpdatedData) {\r\n      setTotalStalls(UpdatedData.length)\r\n      setAvailable(totalStall - alreadyBookedLocataion)\r\n    }\r\n  }, [UpdatedData]);\r\n\r\n\r\n  const confirmBookingCash = async (e) => {\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n    //console.log(bookedStalls.length);\r\n    //console.log(\"price\", price)\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(t(\"failed_to_book_stalls\"), {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    let bookedStats = bookedStalls.toString();\r\n    const responseData = {\r\n      location: Id,\r\n      bookedStalls: bookedStalls,\r\n      bookedBy: userCurr.id,\r\n      bookedAt: date,\r\n      isBooked: true,\r\n    };\r\n\r\n    const stallsBooked = [];\r\n    bookedStalls.forEach((e) => {\r\n      stallsBooked.push(e.stallName);\r\n    });\r\n\r\n    // const price = bookedStalls.reduce(\r\n    //   (total, item) => item.stallPrice + total,\r\n    //   0\r\n    // );\r\n    const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n    const orderId = \"123\"\r\n    axios\r\n      .post(Url, responseData, { headers: authHeader() })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          setbookingDetails({\r\n            farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n            phone: userCurr.phone,\r\n            paymentDetails: orderId,\r\n            BookedStalls: stallsBooked,\r\n            stallsBooked: bookedStalls.length,\r\n            totalAmount: price,\r\n            address: bookedStalls[0].address\r\n          });\r\n        }\r\n        toast.success(t(\"stalls_booked_successfully\"), {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"../ticket\");\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(t(\"failed_to_book_stalls\"), {\r\n          position: \"top-right\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setBookedStalls([]);\r\n        setNumberOfSeats(0);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  const confirmBooking = async (e) => {\r\n    \r\n    //IF STATUS = TRUE , THEN DECREASE THE AVAILABLE STALLS , BY UPDATING\r\n    if(status === true){\r\n    console.log(\"selected stalls : \",selected)\r\n    var s = stall - bookedStalls.length\r\n    console.log(\"new stall number\",s)\r\n    setStall(s)\r\n    var firstF = Number(first);\r\n    var secondF = Number(second);\r\n    var thirdF = Number(third);\r\n    \r\n    \r\n    await axios.put(REACT_APP_API_URL+\"changeStalls\",{subId,s,firstF,secondF,thirdF})\r\n    .then((res)=>{\r\n      \r\n      const {data} = res\r\n      console.log(\"passed\")\r\n\r\n    })\r\n    .catch((error)=>{\r\n      console.log(\"failed\")\r\n    })\r\n    \r\n\r\n    if(stall === 0){\r\n      \r\n      const s = \"expired\"\r\n      await axios.put(REACT_APP_API_URL+\"changestatus\",{subId,s})\r\n        .then((res)=>{\r\n          window.location.reload(false);\r\n\r\n          console.log(\"passed\")\r\n\r\n        })\r\n        .catch((error)=>{\r\n          console.log(\"failed\")\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n    if (bookedStalls.length !== 0) {\r\n      if (cashOnDelivery) {\r\n        confirmBookingCash();\r\n      }\r\n      else {\r\n        const price = bookedStalls.reduce(\r\n          (total, item) => item.stallPrice + total,\r\n          0\r\n        );\r\n\r\n        //console.log(bookedStalls.length);\r\n        //console.log(\"price\", price)\r\n        if (bookedStalls.length === 0) {\r\n          toast.warn(t(\"failed_to_book_stalls\"), {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          return;\r\n        }\r\n           try {\r\n                  const data = {\r\n                    purpose: \"Product name\", // REQUIRED\r\n                    amount: price, // REQUIRED and must be > ₹3 (3 INR)\r\n                    currency: \"INR\",\r\n                    buyer_name: userCurr.name,\r\n                    email: userCurr.email,\r\n                    phone: userCurr.phone,\r\n                    send_email: false,\r\n                    send_sms: false,\r\n                    allow_repeated_payments: false,\r\n                    webhook: \"\",\r\n                    redirect_url: `http://localhost:3000/farmers/stallplaces/stalls/callback?user_id=${userCurr.id}}`,\r\n                  };\r\n                  const orderUrl = REACT_APP_API_URL+\"pay\";\r\n                  await axios.post(\r\n                    orderUrl,\r\n                    data, { headers: authHeader() })\r\n                  .then((res)=>{\r\n                      console.log(res.data);\r\n                      initPayment(res.data);\r\n                      window.location.href = res.data;\r\n                  })\r\n                  .catch ((error)=> console.log(error.response.data)); \r\n                  //console.log(error);\r\n                } catch (error) {\r\n                  //console.log(error);\r\n                }\r\n              }\r\n            }\r\n    else {\r\n      // console.log('in')\r\n      toast.warn(t(\"please_select_stalls\")+\"!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      bookedStalls: bookedStats,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n          var orderId;\r\n          if (!cashOnDelivery) {\r\n            const verifyUrl = REACT_APP_API_URL+\"verify\";\r\n            const { data } = await axios.post(verifyUrl, response, {\r\n              headers: authHeader(),\r\n            });\r\n            orderId = data.orderId;\r\n          } else {\r\n            orderId = \"123\"\r\n          }\r\n\r\n          //console.log(date)\r\n          const responseData = {\r\n            location: Id,\r\n            bookedStalls: bookedStalls,\r\n            bookedBy: userCurr.id,\r\n            bookedAt: date,\r\n            isBooked: true,\r\n          };\r\n\r\n          const stallsBooked = [];\r\n          bookedStalls.forEach((e) => {\r\n            stallsBooked.push(e.stallName);\r\n          });\r\n\r\n          const price = bookedStalls.reduce(\r\n            (total, item) => item.stallPrice + total,\r\n            0\r\n          );\r\n          const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n\r\n          axios\r\n            .post(Url, responseData, { headers: authHeader() })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                setbookingDetails({\r\n                  farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n                  phone: userCurr.phone,\r\n                  paymentDetails: orderId,\r\n                  BookedStalls: stallsBooked,\r\n                  stallsBooked: bookedStalls.length,\r\n                  totalAmount: price,\r\n                  address: bookedStalls[0].address\r\n                });\r\n              }\r\n              toast.success(t(\"stalls_booked_successfully\"), {\r\n                position: \"top-center\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                navigate(\"../ticket\");\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(t(\"failed_to_book_stalls\"), {\r\n                position: \"top-right\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setBookedStalls([]);\r\n              setNumberOfSeats(0);\r\n            });\r\n        } catch (error) {\r\n          //console.log(error);\r\n          setBookedStalls([]);\r\n          setNumberOfSeats(0);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    \r\n  };\r\n// useEffect(()=>{\r\n// setBookedStalls(bookedStalls)\r\n// },[bookedStalls])\r\n  const handleClick = (ev) => {\r\n    if (numberOfSeats && ev.target.className !== \"booked\") {\r\n      const seatsToBook = parseInt(numberOfSeats, 20);\r\n   \r\n      if (bookedStalls.length <= seatsToBook) {\r\n        //Remove stall if already selected\r\n        if (selected.includes(ev.target.id)) {\r\n          console.log(\"no\" + \" \" + selected)\r\n          const idToRemove = ev.target.id;\r\n          const newBookedStalls = bookedStalls.filter((stall) => stall._id !== idToRemove);\r\n          if(newBookedStalls.length !== bookedStalls.length){\r\n            setBookedStalls(newBookedStalls);\r\n            setAvailable(available + 1);\r\n            setError('')\r\n            if(status === true){\r\n              var pp = bookedStalls[0].stallPrice\r\n              if(pp === 300){\r\n                setFirst(first+1)\r\n              }else if(pp === 500){\r\n                setSecond(second+1)\r\n              }else{\r\n                setThird(third+1)\r\n              }}\r\n          }else{\r\n            console.log(\"lol no new changes\")\r\n          }\r\n          \r\n          const index = selected.indexOf(ev.target.id);\r\n          console.log(index)\r\n          if (index >= 0) {\r\n            selected.splice(index, 1); // Remove the selected stall ID from the selected array\r\n          }\r\n          console.log(selected)\r\n          return\r\n        } //Select stall\r\n        else if (bookedStalls.length < numberOfSeats) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          if(status === true){\r\n            var pp = item[0].stallPrice\r\n            if((pp === 300 && first ===0)||(pp === 500 && second ===0) || (pp === 800 && third ===0)){\r\n              //do nothing\r\n            console.log(\"nope\")\r\n            if(first === 0){\r\n              setError(\"300rs stalls not availabe anymore\")\r\n            }else if(second === 0){\r\n              setError(\"500rs stalls not availabe anymore\")\r\n\r\n            }else{\r\n              console.log(\"im here in 800\")\r\n\r\n              setError(\"800rs stalls not availabe anymore\")\r\n\r\n            }\r\n             \r\n            }else{\r\n            setAvailable(available - 1);\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          setError('')\r\n          console.log(\"booked ::::\",bookedStalls)\r\n          if(pp === 300){\r\n            setFirst(first-1)\r\n          }else if( pp === 500){\r\n            setSecond(second-1)\r\n          }else{\r\n            setThird(third-1)\r\n          }\r\n            }\r\n          }else{\r\n            console.log(\"here bookedS:\",bookedStalls)\r\n\r\n            setAvailable(available - 1);\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          setError('')\r\n          }\r\n          \r\n          console.log('here')\r\n        } //shift stall if number of stalls reached\r\n        else if (bookedStalls.length === seatsToBook) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          if(status === true){\r\n            var pp = bookedStalls[0].stallPrice\r\n            if(pp === 300){\r\n              setFirst(first+1)\r\n            }else if(pp === 500){\r\n              setSecond(second+1)\r\n            }else{\r\n              setThird(third+1)\r\n            }\r\n            \r\n             pp = item[0].stallPrice\r\n            if((pp === 300 && first ===0)||(pp === 500 && second ===0) || (pp === 800 && third ===0)){\r\n              //do nothing\r\n            console.log(\"nope\")\r\n            if(first === 0){\r\n              setError(\"300rs stalls not availabe anymore\")\r\n            }else if(second === 0){\r\n              setError(\"500rs stalls not availabe anymore\")\r\n\r\n            }else{\r\n              console.log(\"im here in 800\")\r\n              setError(\"800rs stalls not availabe anymore\")\r\n\r\n            }\r\n            }else{\r\n              bookedStalls.shift();\r\n              selected.shift();\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          setError('')\r\n          if(pp === 300){\r\n            setFirst(first-1)\r\n          }else if( pp === 500){\r\n            setSecond(second-1)\r\n          }else{\r\n            setThird(third-1)\r\n          }\r\n            }\r\n            \r\n\r\n          }else{\r\n            bookedStalls.shift();\r\n            selected.shift();\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          setError('')\r\n        }\r\n          console.log(\"shifted\" + \" \" + selected)\r\n\r\n        }\r\n        // Add the clicked stall ID to the selected array\r\n        setSelected([...selected, ev.target.id]);\r\n        \r\n        console.log(selected)\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"selected:\",selected);\r\n    console.log(\"bookedStall- -\",bookedStalls)\r\n  }, [selected]);\r\n\r\n\r\n  const lengthofUpdatedData = UpdatedData?.length;\r\n  //UpdatedData?.length\r\n  const handleChange = (e, newValue) => {\r\n    if (date !== 0) {\r\n      if (e.target.value <= -1) {\r\n        setNumberOfSeats(0);\r\n        setvalue(0);\r\n      }\r\n      else if (e.target.value <= available) {\r\n        setNumberOfSeats(e.target.value);\r\n        setvalue(e.target.value);\r\n      } else {\r\n        setNumberOfSeats(available);\r\n        setvalue(available);\r\n      }\r\n      setMessage2('');\r\n    }\r\n    else {\r\n      setMessage2(t(\"please_select_date\"));\r\n    }\r\n  };\r\n  const disabledDates = [new Date('2023-04-02')];\r\n\r\n  const handlechange1 = (event) => {\r\n    const temp = new Date(event.target.value);\r\n    const weekdayNumber = temp.getDay();\r\n\r\n    // console.log(weekdayNumber)\r\n    //  if(weekdayNumber === arr[Id]){\r\n    setdate(event.target.value);\r\n    setMessage('');\r\n\r\n    //   }\r\n    // else {\r\n    setMessage(`Markets in ${Id} only on ${weekdays[arr[Id] - 1]}, Please choose date accordingly`);\r\n    //}\r\n  };\r\n  const isDateDisabled = (date) => {\r\n    return disabledDates.includes(format(date, 'yyyy-MM-dd'));\r\n  };\r\n\r\n\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n  return (\r\n    <>\r\n\r\n      {!Loading ? (\r\n        <div className=\"Test\">\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            theme=\"light\"\r\n          />\r\n\r\n\r\n          <div className=\"main_container_stalls\">\r\n            <Link className=\"backbtn green\" to=\"/farmers/stallplaces\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n             { t(\"back\")}\r\n            </Link>\r\n            {console.log(weekId)}\r\n            <h2 className=\"market-name\" style={{ textAlign: 'center', marginTop: '20px' }}>{t(Id)} {t(\"only_on\")} {t(weekdays[arr[Id] - 1])}</h2>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  {t(\"enter_booking_date\")}\r\n                </InputLabel>\r\n                {/* <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"booking-date\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  id=\"booking-date\"\r\n                  autoFocus\r\n                  value={date}\r\n                  onChange={handlechange1}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  inputProps={{\r\n                    min: todayFormatted,\r\n                    // disable all days except Wednesdays\r\n                    disabledDates: disabledDates\r\n                  }}\r\n\r\n                /> */}\r\n                {console.log(date)}\r\n\r\n                {/* <DatePicker\r\n                  selected={date}\r\n                  onChange={handlechange1}\r\n                  minDate={new Date()} // Disable past dates\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  isClearable\r\n                  placeholderText=\"Select a date\"\r\n                  disabledDates={disabledDates}\r\n                /> */}\r\n\r\n\r\n                <DatePicker\r\n                  fullWidth\r\n                  className=\"textfield\"\r\n                  renderInput={(props) => <TextField {...props} size=\"big\" helperText={null} />}\r\n                  value={date}\r\n                  onChange={(newValue) => {\r\n                    console.log(newValue.$d);\r\n                    const myDate = newValue.$d;\r\n                    const yyyy = myDate.getFullYear();\r\n                    const mm = String(myDate.getMonth() + 1).padStart(2, \"0\");\r\n                    const dd = String(myDate.getDate()).padStart(2, \"0\");\r\n\r\n                    const formattedDate = `${yyyy}-${mm}-${dd}`;\r\n                    console.log(formattedDate);\r\n                    const d = new Date(newValue.toISOString().slice(0, 10));\r\n\r\n                    setdate(formattedDate);\r\n\r\n                    FarmerService.getBookedStallsTemp().then((response) => {\r\n                      console.log(date);\r\n                      const res =\r\n                        response.data &&\r\n                        response.data.filter((e) => e.location === `${Id}` && e.bookedAt === formattedDate);\r\n                      setAlreadyBooked(response.data);\r\n                      setAlreadyBookedLocation(res.length);\r\n                      setAvailable(totalStall - res.length);\r\n                    });\r\n\r\n                    handleOpen(true);\r\n                  }}\r\n                  defaultValue={new Date()}\r\n                  shouldDisableDate={disableDays}\r\n                  minDate={new Date()}\r\n                  maxDate={maxDate}\r\n\r\n                /> \r\n\r\n                {/* <DatePicker\r\n                \r\n                label=\"Year and Month\"\r\n                minDate={todayFormatted}\r\n                \r\n                value={value}\r\n                onChange={(newValue) => {\r\n                   setValue(newValue);\r\n                }}\r\n                renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n                /> */}\r\n\r\n\r\n                {message && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid style={{ margin: \"auto\", marginTop: '0rem' }} item xs={12} sm={6}>\r\n\r\n\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  {t(\"no_of_stalls_required\")}\r\n                </InputLabel>\r\n                <TextField\r\n                  // className=\"stall-booking-input\"\r\n                  // sx={{width: \"100%\", margin: \"auto\"}}\r\n                  inputlabelprops={{\r\n                    style: {fontSize: 14, fontFamily: \"monospace\"},\r\n                  }}\r\n                  name=\"number-of-stalls-req\"\r\n                  required\r\n                  placeholder=\"00\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  id=\"number-of-stalls-req\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  InputProps={{ inputProps: { min: 0, max: number } }}\r\n\r\n                // margin=\"normal\"\r\n\r\n                />\r\n                {error && \r\n                  <Typography variant = \"subtitle1\" color=\"error\">\r\n                    {error}\r\n                  </Typography>\r\n                }\r\n                {message2 && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message2}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n            </Grid>\r\n            \r\n            <Grid className=\"stall-position-grid\">\r\n              <InputLabel className=\"stall-booking-lable\">\r\n                {t(\"select_stall_position\")}\r\n              </InputLabel>\r\n              <Grid className=\"stalls-count-cantainer\">\r\n                <Grid>\r\n                  <div className=\"stalls-count-div\">\r\n                    <Typography className=\"count\">{t(\"total_stalls\")} :{totalStall}</Typography>\r\n                    <Typography className=\"count\">\r\n                      {t(\"available_stalls\")} :{available}\r\n                    </Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n\r\n                  {UpdatedData && Id ? (\r\n                    <div className=\"stall_wrapper\">\r\n                      {/* {lengthofUpdatedData  && (\r\n                        <div className=\"StallsContainer\">\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(0, 16)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {isMobile && <Stall\r\n                            data={UpdatedData.slice(0, 17)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(16, 17)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(17, 18)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(18, 34)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {isMobile && <Stall\r\n                            data={UpdatedData.slice(17, 35)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                        </div>\r\n                      )} */}\r\n                      \r\n                      {lengthofUpdatedData && (\r\n                        <div className=\"StallsContainer\">\r\n                          \r\n                          <Stall\r\n                            data={UpdatedData.slice(0, 24)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />\r\n                          <p  className ='firstPara'>\r\n                            Entry\r\n                            {RenderIcon()}\r\n                            </p>\r\n                          <p style={{marginLeft:'2850px'}}> <i class=\"arrow down\"></i></p>\r\n                          <p style={{marginLeft:'2850px'}}> <i class=\"arrow down\"></i></p>\r\n\r\n{/*               \r\n                         <hr style={{borderStyle: 'dotted'}}/>\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(24, 25)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(25, 26)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />} */}\r\n                          <p style={{    marginTop: '0',\r\n                          fontSize: '20px',\r\n                          fontWeight: 'bold',\r\n                          marginLeft: '20px',\r\n                          marginBottom: '1rem',\r\n                          width: 'max-content'}}>\r\n                          Exit\r\n                          {RenderIcon2()}\r\n                          </p>\r\n                          {/* <p><i class=\"arrow left\"></i><i class=\"arrow left\"></i><i class=\"arrow left\"></i><i class=\"arrow left\"></i></p> */}\r\n                          <Stall\r\n                            data={UpdatedData.slice(26, 50)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />\r\n                          \r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"select_market\">\r\n                        <h2>{t(\"please_select_market\")}</h2>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"stall-pricing-grid\">\r\n                <div className=\"stall-pricing-main-div\">\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#C0B236\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">100/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#AACE48\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">200/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#3AA54B\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">300/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#FF5B00\", \r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">500/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#A42A56\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">800/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#B3B3B3\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">{t(\"booked\")}</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#4705fcae\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">{t(\"Selected\")}</div>\r\n                  </div>\r\n                </div>\r\n                {/* {console.log(bookedStalls)} */}\r\n                <Divider className=\"divider\" />\r\n                <div className=\"stall-total-amount-holder\">\r\n                  <div className=\"total-amount\">{t(\"total_amount\")}</div>\r\n                  <div className=\"total-amount\">Rs.{bookedStalls.reduce(\r\n                    (total, item) => item.stallPrice + total,\r\n                    0\r\n                  )}/-</div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            {/* {console.log(selected)} */}\r\n\r\n            {numberOfSeats !== 0 && bookedStalls.length !== 0 ? (\r\n              <div className=\"modalbtn\">\r\n\r\n                <ConfirmModal t={t} status={status} setCashOnDelivery={setCashOnDelivery} confirmBooking={confirmBooking} selected={selected} />\r\n              </div>\r\n            ) : (\r\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    \r\n                    <Button\r\n                      style={{paddingLeft: '5rem', paddingRight: '5rem', fontSize:'15px', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                      onClick={() => {\r\n                        toast.warn(\"Please select stalls!\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 2500,\r\n                          hideProgressBar: false,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      {t(\"Pay\")}\r\n                    </Button>\r\n\r\n\r\n                    <Button\r\n                      style={{ width: \"60%%\", height: \"40px\", marginLeft:'10px', paddingLeft: '2rem',paddingTop:'2rem', paddingBottom:'2rem', fontSize:'15px', paddingRight: '2rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                      onClick={() => {\r\n                        toast.warn(\"Please select stalls!\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 2500,\r\n                          hideProgressBar: false,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      {t(\"pay_in_market\")}\r\n                    </Button>\r\n\r\n                  </div>\r\n\r\n\r\n            )\r\n            }\r\n\r\n\r\n          </div>\r\n            \r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n      <div className=\"pageBottom\" ></div>\r\n      {/* {mobile?<NavMenu\r\n        />:console.log(\"desktop\")} */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","// import React from \"react\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport '../../styles/Ticket.css'\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\n// import jsPDF from 'jspdf';\r\n// import html2canvas from 'html2canvas';\r\nimport generatePDF from './generatePDF';\r\n// import NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\nfunction Ticket({ bookingDetails }) {\r\n    const [called, setCalled] = useState(false)\r\n    const { REACT_APP_API_URL } = process.env;\r\n\r\n    useEffect(() => {\r\n        if (!called) {\r\n            sendMsg91SMS();\r\n        }\r\n\r\n    }, [called]);\r\n\r\n    const  sendMsg91SMS= async () => {\r\n        // console.log(\"booking \",bookingDetails)\r\n\r\n        const orderUrl = REACT_APP_API_URL + \"msg91\";\r\n        const { data } = await axios.post(orderUrl, { bookingDetails: bookingDetails }, { headers: authHeader() });\r\n        setCalled(true)\r\n        console.log(data)\r\n    }\r\n\r\n    const pdfRef = useRef();\r\n\r\n  const downloadPDF = async () => {\r\n    const content = pdfRef.current;\r\n\r\n    const pdfBlob = await generatePDF(content);\r\n\r\n    if (pdfBlob) {\r\n      const url = URL.createObjectURL(pdfBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'download.pdf';\r\n      link.click();\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  }\r\n\r\n\r\nconst { BookedStalls } = bookingDetails\r\nconst navigate = useNavigate()\r\nconst bookStr = BookedStalls?.toString();\r\nconst [mobile, setmobile] = useState(false)\r\n\r\nconst { width } = useWindowDimensions()\r\n\r\nuseEffect(() => {\r\n    if (width < 850) {\r\n        setmobile(true)\r\n    } else {\r\n        setmobile(false)\r\n    }\r\n}, [width])\r\nreturn (\r\n    <>\r\n        \r\n        {bookingDetails ? <div><div className=\"invoice-box\" ref={pdfRef}>\r\n            <img src=\"../images/logo.png\" alt=\"log\" width=\"128\" height=\"128\"  />\r\n            <h2 className=\"thanks\">Stall booking details</h2>\r\n            <br />\r\n            <div className=\"invoice_flex_box\">\r\n            \r\n            <div className=\"invoice_details\" >\r\n                \r\n                <div>Farmer Name : {bookingDetails.farmer}</div>\r\n                <br />\r\n                <div>Phone : {bookingDetails.phone}</div>\r\n                <br />\r\n                <div>No. of Stalls Booked :{bookingDetails.stallsBooked}</div>\r\n                <br />\r\n                <div>Stalls Booked : {bookStr}</div>\r\n                <br />\r\n                <div>Payment Id : {bookingDetails.paymentDetails}</div>\r\n                <br />\r\n                <div>Addess : {bookingDetails.address}</div>\r\n                <br />\r\n                <div>Total Amount : {bookingDetails.totalAmount}</div>\r\n                <br />\r\n            </div>\r\n            <div><img src=\"../images/stall.jpg\" alt=\"log\" width=\"128px\" height=\"128px\" /></div>\r\n            </div>\r\n            <h2 className=\"thanks\">Thank You for Booking Your Stall in Wingrow Market !</h2>\r\n            \r\n        </div>\r\n        <div className=\"bookings_buttons\" >\r\n                <button onClick={() => { navigate('/farmers/stallplaces') }} className=\"btns_bookings\">Continue Booking</button>\r\n                <button onClick={() => { navigate('../mybookings') }} className=\"btns_bookings\">Your Bookings</button>\r\n                <button onClick={downloadPDF}className=\"btns_bookings\">Download Ticket</button>\r\n            </div></div> : <Spinner />}\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default Ticket;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FarmerNavigation({t}) {\r\n  return (\r\n    <div>\r\n          <div className=\"farmerScreen\">\r\n              <Link className=\"links_farmersdata red\" to=\"./stallplaces\">\r\n                  {t('book_stall')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./mybookings\">\r\n                  {t(\"my_bookings\")}\r\n              </Link>\r\n              <Link className=\"links_farmersdata red\" to=\"./inward\">\r\n                  {t('fill_inward')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./outward\">\r\n                  {t('fill_outward')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata red\" to=\"./farmershome\">\r\n                  {t('data')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./subscription\">\r\n                  {t('subscription')}\r\n              </Link>\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmerNavigation\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserService from '../../services/user.service'\r\nimport AuthService from '../../services/auth.service'\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/subscription.css'\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n//import Razorpay from 'razorpay';\r\n\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport { CenterFocusStrong } from \"@mui/icons-material\";\r\nimport { secondsInDay } from \"date-fns\";\r\nimport dayjs from 'dayjs'\r\nimport NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\nconst Subscription = ({t}) => {\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n  const[valid,setValid] = useState(0)\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const user = AuthService.getCurrentUser()\r\n  const [sub, setSub] = useState([]);\r\n  const [open, setOpen] = useState();\r\n  const [price, setPrice] = useState(0);\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n  const [MyStalls, setMyStalls] = useState([]);\r\n  const [status, setStatus] = useState()\r\n  const [status1, setStatus1] = useState(false)\r\n  const [date, setDate] = useState(new Date());\r\n  const [validity, setValidity] = useState(\r\n    0\r\n  );\r\n  const API_URL = \"http://localhost:4000/\";\r\n  const [stalls, setStalls] = useState(0);\r\n  const [validTill, setValidTill] = useState();\r\n  const[age,setAge]= useState(0)\r\n  const [remStalls, setRemStalls] = useState(0);\r\n  const[first,setFirst] = useState(0)\r\n  const[second,setSecond] = useState(0)\r\n  const[third,setThird] = useState(0)\r\n  \r\n  function isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  useEffect(() => {\r\n\r\n    FarmerService.getBookedStalls().then(async (res) => {\r\n      const { data } = res;\r\n      console.log(\"the data is- \", data)\r\n      //check for date of the booked stall date greater than equal to subscribed\r\n      if(sub.length !== 0){\r\n        const currentDate = new Date(sub[sub.length-1].date)\r\n        //Date he subscribed\r\n        console.log(\"hello---  \",sub[sub.length-1].date)\r\n        //ignore\r\n      // setMyStalls(data.filter(e=> { \r\n      \r\n      // if(e.bookedBy === user.id && sub[sub.length-1].date <= e.bookedAt){return true} }))\r\n      \r\n\r\n      // console.log(\"the booked stalls are -- \", MyStalls)\r\n      // console.log(sub)\r\n      // var r = MyStalls.length\r\n     // console.log(stalls,r)\r\n      //stalls =  total stall remaning\r\n      if(stalls <= 0){\r\n        setRemStalls(0)\r\n        //subscribe again\r\n        const id = sub[sub.length-1]._id\r\n        if(status == \"active\"){\r\n          setStatus(\"expired\")\r\n          const s = \"expired\"\r\n        await axios.put(API_URL+\"changestatus\",{id,s})\r\n        .then((res)=>{\r\n          window.location.reload(false);\r\n\r\n          console.log(\"passed\")\r\n\r\n        })\r\n        .catch((error)=>{\r\n          console.log(\"failed\")\r\n        })\r\n      }\r\n        console.log(\"sub is-\",sub[sub.length-1]._id)\r\n        }else{\r\n        setRemStalls(stalls)\r\n      }\r\n  }})\r\n  }, [MyStalls, sub])\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n  useEffect(()=>{\r\n    setStalls(stalls)\r\n  },[stalls])\r\n  useEffect(() => {\r\n\r\n    const userId = user.id\r\n    console.log(\"inside sub useeffect\")\r\n    if (sub.length === 0 || isJson(sub[0])) {\r\n      UserService.getSub(userId).then((res) => {\r\n        const { data } = res\r\n        console.log(\"all the subscriptions :\", data)\r\n\r\n        console.log(\"helllooooooo \", data)\r\n        if (data.length !== 0) {\r\n          if (data[data.length - 1].status == \"active\") {\r\n            setSub(data)\r\n            setStatus(\"active\")\r\n          } else {\r\n            setStatus(\"expired\")\r\n          }\r\n          const currentDate = new Date(data[data.length - 1].date)\r\n\r\n          var year = currentDate.getFullYear();\r\n          var month = Number(currentDate.getMonth()) ;\r\n          var date = Number(currentDate.getDate());\r\n          // if (month == 0 || month == 2 || month == 4 || month == 6 || month == 7 || month == 9 ||\r\n          //   month == 11) {\r\n          //   if (Number(date) + 7 > 31) {\r\n          //     date = 1\r\n          //     month = month + 1\r\n          //   } else {\r\n          //     date = date + 7\r\n\r\n          //   }\r\n          // }\r\n          // else if (month == 1) {\r\n          //   if (Number(date) + 7 > 28) {\r\n          //     date = 1\r\n          //     month = month + 1\r\n          //   }\r\n          //   else {\r\n          //     date = date + 7\r\n          //   }\r\n          // } else {\r\n          //   if (date + 7 > 30) {\r\n          //     month = month + 1\r\n          //     date = 1\r\n          //   }\r\n          //   else {\r\n          //     date = date + 7\r\n          //   }\r\n          // }\r\n          var currentDate1 = new Date(year,month,date + 90)\r\n          \r\n          //const validDate = String(year) + \"-\" + String(month) + \"-\" + String(date)\r\n          const validDate = dayjs(currentDate1).format(\"YYYY-MM-DD\")\r\n          console.log(validDate)\r\n          setValidTill(validDate)\r\n          setFirst(data[data.length-1].first)\r\n          setSecond(data[data.length-1].second)\r\n          setThird(data[data.length-1].third)\r\n          setStalls(data[data.length - 1].stalls)\r\n        }\r\n      })\r\n    }\r\n    handleOpen(true);\r\n  }, [sub])\r\n  const confirmBookingCash = async (e) => {\r\n    const price = Number(first)*300 + Number(second)*500 + Number(third)*800\r\n    console.log(\"Im here\")\r\n    setStatus(\"active\")\r\n\r\n    const userId = user.id;\r\n\r\n    const orderId = \"123\"\r\n    const s = \"active\"\r\n    var x = Number (first) + Number(second) + Number(third)\r\n    setStalls(x)\r\n    await axios\r\n      .post(API_URL + \"sub\", { date, userId, valid, x, s, price,first,second,third })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          console.log(\"data--\", data)\r\n\r\n          navigate(\"/farmers/subscription\");\r\n        }\r\n        toast.success(\"stalls booked successfully!\", {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          //navigate(\"/farmers/subscription\");\r\n          window.location.reload(false)\r\n\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(\"Failed to book stalls!\", {\r\n          position: \"top-right\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setSub([])\r\n      });\r\n\r\n  }\r\n\r\n  const confirmBooking = async (e) => {\r\n    console.log(\"hellloooo\")\r\n    if (cashOnDelivery) {\r\n      confirmBookingCash();\r\n    }\r\n    else {\r\n      const price = Number(first)*300 + Number(second)*500 + Number(third)*800\r\n\r\n\r\n      try {\r\n        const orderUrl = API_URL + \"order\";\r\n        const { data } = await axios.post(\r\n          orderUrl,\r\n          { amount: price * 100 },\r\n          { headers: authHeader() }\r\n        );\r\n        initPayment(data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    //console.log(date)\r\n    //let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n\r\n          var orderId;\r\n\r\n          const verifyUrl = REACT_APP_API_URL + \"verify\";\r\n          const { data } = await axios.post(verifyUrl, response, {\r\n            headers: authHeader(),\r\n          });\r\n          orderId = data.orderId;\r\n\r\n\r\n\r\n          const userId = user.id\r\n          setStatus(\"active\")\r\n          const s = \"active\"\r\n          await axios\r\n            .post(API_URL + \"sub\", { date, userId, valid, stalls, s, price,first,second,third })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                console.log(data)\r\n                setSub(data)\r\n              }\r\n              toast.success(\"stalls booked successfully!\", {\r\n                position: \"top-center\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                //navigate(\"/farmers/subscription\");\r\n                window.location.reload(false)\r\n\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(\"Failed to book stalls!\", {\r\n                position: \"top-right\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n\r\n            });\r\n        } catch (error) {\r\n          //console.log(error);\r\n          setSub([])\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus(\"active\")\r\n\r\n    const userId = user.id;\r\n    const s = \"active\"\r\n    console.log(userId)\r\n    await axios.post(API_URL + \"sub\", { date, userId, valid, stalls, s, price,first,second,third })\r\n      .then((res) => {\r\n        console.log(\"the return data \", res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n  return (\r\n    <div className=\"sub\">\r\n      <Link className=\"backbtn green\" to=\"/farmers\" style={{ padding: '8px 20px 8px 20px'}}>\r\n        {t(\"back\")} </Link>\r\n      <div className=\"subscrp-heading\">\r\n     \r\n        <h1 className=\"header\">{t(\"Subscription Model\")}</h1>\r\n      </div>\r\n     \r\n      { (sub.length !== 0  && status == \"active\" ) ? \r\n      \r\n      \r\n      <div className=\"subscribe\">\r\n      \r\n\r\n          {/* <div className=\"validity\">\r\n        <h3>validity(days) - {sub[0].validity}</h3>\r\n        </div> */}\r\n          <div className=\"stallslefts downtext\">\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\">{t(\"Start data\")} :</p>\r\n              <p>{sub[sub.length-1].date}</p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> {t(\"valid till\")} :</p>\r\n              <p>{validTill} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> {t(\"Status\")} :</p>\r\n              <p>{sub[sub.length-1].status} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> {t(\"stalls\")} :</p>\r\n              <p>{sub[sub.length-1].stalls} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\">,  300's :</p>\r\n              <p>{sub[sub.length-1].first} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n            \r\n              <p className=\"startdate\">,  500's :</p>\r\n              <p>{sub[sub.length-1].second} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n            \r\n              <p className=\"startdate\">,  800's :</p>\r\n              <p>{sub[sub.length-1].third} </p>\r\n            </div>\r\n            {/* <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> 300's stalls :</p>\r\n              <p>{sub[sub.length-1].first} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> 500's stalls :</p>\r\n              <p>{sub[sub.length-1].second} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> 800's stalls :</p>\r\n              <p>{sub[sub.length-1].third} </p>\r\n            </div> */}\r\n          </div>\r\n          {/* <h3>stalls - {sub[0].stalls}</h3> */}\r\n\r\n      </div>\r\n        :\r\n\r\n        <div classname=\"box\">\r\n          <h2 style={{ textAlign: \"center\", paddingTop: 20 }}>{t(\"not Subscribed\")}</h2>\r\n          <form onSubmit={handleSubmit}>\r\n          <Grid className=\"input-div-holder\" container spacing={2} justifyContent=\"center\" alignItems=\"center\" sx={{ marginTop: '1rem' , marginLeft:{xs:\"1.7rem\"}}} >\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n              <InputLabel className=\"stall-booking-lable\" sx={{marginRight:{xs:\"6rem\", lg:\"0px\"}}}>\r\n                  {t(\"enter_booking_date\")}\r\n              </InputLabel>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                sx={{width:{xs: \"80%\", sm: \"100%\", md: \"65%\", lg: \"50%\", xl: \"100%\"}}}\r\n                name=\"booking-date\"\r\n                required\r\n                fullWidth\r\n                type=\"date\"\r\n                id=\"booking-date\"\r\n                autoFocus\r\n                value={date}\r\n                onChange={(e) => { setDate(e.target.value); console.log(\"clicking\"); }}\r\n                color=\"success\"\r\n              />\r\n            </Grid>\r\n            <Grid  item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n            <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  sx={{\r\n                     sm:top-40, marginRight:{xs:\"7rem\", lg:\"1rem\"}\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                >\r\n                  {t(\"type\")}\r\n                </InputLabel>\r\n\r\n            <Select\r\n                  sx={{fontSize: \"1.2rem\", width:{xs: \"80%\", sm: \"100%\", md: \"65%\", lg: \"50%\", xl: \"100%\"}}}\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={validity}\r\n                  label=\"Type\"\r\n                  name=\"type\"\r\n                  onChange={(e) => {\r\n                    \r\n                    setValidity(\"90\")\r\n                    setStalls(150)\r\n\r\n                  }}\r\n                  color=\"success\"\r\n                  className=\"mx-auto\"\r\n                >\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value=\"0\"\r\n                  >\r\n                    <em>Select</em>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value=\"90\"\r\n                  >\r\n                    150 {t(\"stalls\")}\r\n                  </MenuItem>\r\n                  {/* <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      Consumer\r\n                    </MenuItem> */}\r\n                </Select>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                  sx={{marginRight:{xs:\"7rem\", lg:\"1rem\"}}}\r\n                >\r\n                  {t(\"Price\")} (300)\r\n                </InputLabel>\r\n                <TextField\r\n                  // className=\"stall-booking-input\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"number-of-stalls-req\"\r\n                  required\r\n                  placeholder=\"00\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  id=\"number-of-stalls-req\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  value={first}\r\n                  onChange={(e) =>setFirst(e.target.value)}\r\n                  InputProps={{ inputProps: { min: 0, max: 150-Number(second)-Number(third) } }}\r\n                />\r\n            \r\n\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                  sx={{marginRight:{xs:\"7rem\", lg:\"1rem\"}}}\r\n                >\r\n                  {t(\"Price\")} (500)\r\n                </InputLabel>\r\n                <TextField\r\n                  // className=\"stall-booking-input\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"number-of-stalls-req\"\r\n                  required\r\n                  placeholder=\"00\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  id=\"number-of-stalls-req\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  value={second}\r\n                  onChange={(e) =>setSecond(e.target.value)}\r\n                  InputProps={{ inputProps: { min: 0, max: 150-Number(first)-Number(third)  } }}\r\n                />\r\n            \r\n\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                  sx={{marginRight:{xs:\"7rem\", lg:\"1rem\"}}}\r\n                >\r\n                  {t(\"Price\")} (800)\r\n                </InputLabel>\r\n                <TextField\r\n                  // className=\"stall-booking-input\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"number-of-stalls-req\"\r\n                  required\r\n                  placeholder=\"00\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  id=\"number-of-stalls-req\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  value={third}\r\n                  onChange={(e) =>setThird(e.target.value)}\r\n                  InputProps={{ inputProps: { min: 0, max: 150-Number(second)-Number(first)  } }}\r\n                />\r\n            \r\n\r\n            </Grid>\r\n          </Grid>\r\n         \r\n\r\n            {/* <button type=\"submit\">Proceed</button> */}\r\n            {validity &&\r\n              \r\n            date ? (\r\n              <div className=\"modalbtn\">\r\n                <ConfirmModal setCashOnDelivery={setCashOnDelivery} status={status1} confirmBooking={confirmBooking} t={t}/>\r\n              </div>\r\n            ) : (\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Grid item xs={6}>\r\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button\r\n                      style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                      {t(\"Pay\")}\r\n                    </Button>\r\n                    <Button style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        {t(\"pay_in_market\")}\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n          </form>\r\n        </div>\r\n\r\n      }\r\n      <div className=\"pageBottom\" ></div>\r\n      {/* {mobile?<NavMenu\r\n       />:console.log(\"desktop\")} */}\r\n  </div>\r\n);\r\n\r\n}\r\n  \r\n\r\n\r\nexport default Subscription","import React, { useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport AdvanceBookings from \"./AdvanceBookings\";\r\nimport FarmersHome from \"./FarmersHome\";\r\nimport FarmersMain from \"./FarmersMain\";\r\nimport InwardData from \"./InwardData\";\r\nimport MyBookings from \"./MyBookings\";\r\nimport OutwardData from \"./OutwardData\";\r\nimport StallsPlaces from \"./StallsPlaces\";\r\nimport Test from \"./Test\";\r\nimport Ticket from \"./Ticket\";\r\n\r\nimport FarmerNavigation from \"./FarmerNavigation\";\r\nimport Subscription from \"./Subscription\";\r\nimport TestTemp from \"./TestTemp\";\r\nconst Farmer = ({t}) => {\r\n  const [bookingDetails, setbookingDetails] = useState({\r\n    farmer: \"\",\r\n    phone: \"\",\r\n    paymentDetails: \"\",\r\n    BookedStalls: null,\r\n    stallsBooked: null,\r\n    totalAmount: null,\r\n  });\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<FarmersMain \r\n      />}>\r\n        <Route index element={<FarmerNavigation\r\n        t={t}\r\n        />} />\r\n        <Route\r\n          path=\"stallplaces/stalls/:Id\"\r\n          element={<Test setbookingDetails={setbookingDetails}\r\n            t={t}\r\n          />}\r\n        />\r\n        <Route path=\"/farmershome\" element={<FarmersHome\r\n          t={t}\r\n         />} />\r\n        <Route path=\"/inward\" element={<InwardData \r\n          t={t}\r\n        />} />\r\n        <Route \r\n        path=\"/stallplaces\" \r\n        element={<StallsPlaces \r\n          t={t}\r\n        />} \r\n        />\r\n        <Route\r\n          path=\"/advancebookings\"\r\n          element={<AdvanceBookings setbookingDetails={setbookingDetails}\r\n          />}\r\n        />\r\n        <Route path=\"/outward\" element={<OutwardData \r\n          t={t}\r\n        />} />\r\n        <Route\r\n          path=\"/ticket\"\r\n          element={<Ticket bookingDetails={bookingDetails } \r\n            t={t}\r\n          />}\r\n        />\r\n        <Route path=\"/mybookings\" element={<MyBookings \r\n          t={t}\r\n        />} />\r\n        <Route path =\"/subscription\" element ={ <Subscription\r\n          t={t} />} />\r\n\r\n        \r\n\r\n\r\n      </Route>\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Farmer;\r\n","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\n// const API_URL = \"https://wingrowmarket.onrender.com/\";\r\n//const API_URL = \"http://localhost:4000/\"\r\nconst API_URL = \"https://wingrowmarket.com:8443/\";\r\nconst { REACT_APP_API_URL } = process.env;\r\n const getPublicContent = () => {\r\n    return axios.get(REACT_APP_API_URL + 'all');\r\n  }\r\n  const getSubscribedData = () =>{\r\n    return axios.get(REACT_APP_API_URL +\"sub\")\r\n  }\r\n  const getSub = (userId) =>{\r\n    return axios.post(REACT_APP_API_URL + 'sub1',{userId})\r\n  }\r\n  // const postSub = () =>{\r\n  //   return axios.post(API_URL,'sub',{ headers: authHeader() });\r\n  // }\r\n\r\n  const postSub = (date , userId , stalls , validity ) => {\r\n    return axios.post(REACT_APP_API_URL + \"sub\", {\r\n        date,\r\n        userId,\r\n        stalls,\r\n        validity, \r\n        first,\r\n        second,\r\n        third\r\n      } , { headers: authHeader() });\r\n  }\r\n  const getInOutdata = () => {\r\n    return axios.get(REACT_APP_API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  // const addMarket = () =>{\r\n  //   return axios.post(REACT_APP_API_URL + \"add\")\r\n  // }\r\n  const getMarket = () =>{\r\n    return axios.get(REACT_APP_API_URL + \"getmarket\")\r\n  }\r\nconst getMarkets = () => {\r\n  return axios.get(REACT_APP_API_URL + \"getmarkets\")\r\n}\r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers,\r\n    getSub,\r\n    postSub,\r\n    getMarket,\r\n  getMarkets,\r\n  getSubscribedData\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n"],"names":["userCurr","AuthService","today","Date","console","log","getDate","replacement","todayFormatted","toISOString","slice","locations","location","_ref","setbookingDetails","_useState","setValue","useState","_useState2","_slicedToArray","setlocation","navigate","useNavigate","REACT_APP_API_URL","process","_useState3","_useState4","data","setdata","_useState5","_useState6","UpdatedData","setUpdatedData","_useState7","_useState8","numberOfSeats","setNumberOfSeats","_useState9","_useState10","bookedStalls","setBookedStalls","_useState11","dayjs","now","format","_useState12","value","setvalue","_useState13","_useState14","alreadyBooked","setAlreadyBooked","_useState15","_useState16","setOpen","_useState17","_useState18","date","setdate","_useState19","_useState20","totalStall","setTotalStalls","_useState21","_useState22","available","setAvailable","_useState23","_useState24","setLoading","_useState25","_useState26","alreadyBookedLocataion","setAlreadyBookedLocation","Id","useParams","lengthofUpdatedData","length","_useState27","_useState28","cashOnDelivery","setCashOnDelivery","useEffect","FarmerService","then","response","res","filter","e","concat","bookedAt","handleOpen","script","document","createElement","src","async","body","appendChild","removeChild","confirmBookingCash","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","price","responseData","stallsBooked","Url","wrap","_context","prev","next","reduce","total","item","stallPrice","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","abrupt","toString","bookedBy","id","isBooked","forEach","push","stallName","axios","headers","authHeader","farmer","firstname","lastname","phone","paymentDetails","BookedStalls","totalAmount","address","setTimeout","catch","error","stop","_x","apply","arguments","confirmBooking","_ref3","_callee2","orderUrl","_yield$axios$post","_data","_context2","amount","sent","initPayment","t0","_x2","bookedStats","options","key","KEY_ID","currency","order_id","description","handler","_handler","_callee3","verifyUrl","_yield$axios$post2","_data2","orderId","_context3","_x3","color","window","Razorpay","open","handleClick","ev","target","className","seatsToBook","parseInt","includes","newAvailable","seat","_id","_toConsumableArray","shift","_jsxs","children","_jsx","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Link","to","Grid","container","spacing","xs","sm","InputLabel","TextField","inputlabelprops","style","fontSize","fontFamily","name","required","fullWidth","type","autoFocus","onChange","event","replace","FormControl","sx","width","Select","label","map","i","MenuItem","placeholder","Typography","Stall","Box","height","backgroundColor","Divider","ConfirmModal","alignItems","justifyContent","display","Button","paddingLeft","paddingRight","margin","background","borderRadius","textAlign","marginTop","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","t","InwardData","setInwardData","OutwardData","setOutwardData","InwardDataGraph","setInwardDataGraph","OutwardDataGraph","setOutwardDataGraph","salesQuantity","setSalesRate","setPurchaseRate","mondaySalesQuantity","setMondaySalesQuantity","tuesdaySalesQuantity","setTuesdaySalesQuantity","wednesdaySalesQuantity","setWednesdaySalesQuantity","thursdaySalesQuantity","setThursdaySalesQuantity","fridaySalesQuantity","setFridaySalesQuantity","saturdaySalesQuantity","setSaturdaySalesQuantity","_useState29","_useState30","sundaySalesQuantity","setSundaySalesQuantity","_useState31","_useState32","mondayPurchaseQuantity","setMondayPurchaseQuantity","_useState33","_useState34","tuesdayPurchaseQuantity","setTuesdayPurchaseQuantity","_useState35","_useState36","wednesdayPurchaseQuantity","setWednesdayPurchaseQuantity","_useState37","_useState38","thursdayPurchaseQuantity","setThursdayPurchaseQuantity","_useState39","_useState40","fridayPurchaseQuantity","setFridayPurchaseQuantity","_useState41","_useState42","saturdayPurchaseQuantity","setSaturdayPurchaseQuantity","_useState43","_useState44","sundayPurchaseQuantity","setSundayPurchaseQuantity","_useState45","_useState46","mondaySalesRate","setMondaySalesRate","_useState47","_useState48","tuesdaySalesRate","setTuesdaySalesRate","_useState49","_useState50","wednesdaySalesRate","setWednesdaySalesRate","_useState51","_useState52","thursdaySalesRate","setThursdaySalesRate","_useState53","_useState54","fridaySalesRate","setFridaySalesRate","_useState55","_useState56","saturdaySalesRate","setSaturdaySalesRate","_useState57","_useState58","sundaySalesRate","setSundaySalesRate","_useState59","_useState60","mondayPurchaseRate","setMondayPurchaseRate","_useState61","_useState62","tuesdayPurchaseRate","setTuesdayPurchaseRate","_useState63","_useState64","wednesdayPurchaseRate","setWednesdayPurchaseRate","_useState65","_useState66","thursdayPurchaseRate","setThursdayPurchaseRate","_useState67","_useState68","fridayPurchaseRate","setFridayPurchaseRate","_useState69","_useState70","saturdayPurchaseRate","setSaturdayPurchaseRate","_useState71","_useState72","sundayPurchaseRate","setSundayPurchaseRate","_useState73","_useState74","_useState75","_useState76","totalPurchase","setTotalPurchase","_useState77","_useState78","totalRemainingSales","setTotalRemainingSales","_useState79","_useState80","chartRef","useRef","chartData","_useState81","_useState82","setmobile","useWindowDimensions","arr","weekdayNumber","getDay","_useState83","_useState84","selectedDate","setSelectedDate","_useState85","_useState86","searchClicked","setSearchClicked","cumulativeData","_loop","_step","market","_marketNames","_i","filteredInwardData","filteredOutwardData","commoditiesInMarket","Set","commodity","cumulativeDataForMarket","totalNetProfit","_iterator","_createForOfIteratorHelper","_loop2","filteredInwardDataForCommodity","totalPurchaseQuantity","sum","purchase_quantity","totalPurchaseRate","purchase_rate","filteredOutwardDataForCommodity","totalRemainingSalesCalc","total_sales","totalSalesRate","sales_rate","netProfit","s","n","done","err","f","year","getFullYear","month","getMonth","day","formattedDate","time","calculateSalesQuantity","y","temp","sales_quantity","calculateSalesRate","calculatePurchaseRate","calculatePurchaseQuality","chart","echarts","current","xAxis","axisLabel","show","interval","textStyle","yAxis","dataGroupId","animationDurationUpdate","series","itemStyle","groupId","universalTransition","enabled","divideShape","setOption","karveNagarData","Object","keys","kondhwaData","hadapsarData","kharadiData","magarpattaData","amanoraData","BramhasuncityData","WagholiData","undriData","greenCityData","bhavadiData","drilldownData","on","subData","find","graphic","left","top","text","onclick","dispose","_useState87","_useState88","setTotalPurchaseQuantity1","profitLossArray","inwardItem","matchingOutwardItem","outwardItem","purchaseQuantity","purchaseRate","profitLoss","existingProfit","profit","handlePAndL","purchaseTotal","remainingSalesTotal","calculateTotals","_Fragment","DatePicker","renderInput","props","_objectSpread","selected","dateFormat","placeholderText","onClick","variant","m","padding","index","Math","abs","ref","Spinner","postion","Outlet","createTheme","Data","setData","setcommodity","handleData","_e$target","prevState","_defineProperty","ThemeProvider","Container","component","maxWidth","CssBaseline","flexDirection","marginBottom","onSubmit","preventDefault","reload","labelId","Autocomplete","isOptionEqualToValue","option","disablePortal","params","InputProps","autoComplete","marginLeft","lg","transform","overflow","bgcolor","border","boxShadow","p","ConfirmDelete","Delete","_React$useState","React","_React$useState2","handleClose","Modal","onClose","class","user","MyStalls","setMyStalls","num","sortedData","sort","a","b","handleDelete","DeleteId","cancelledStall","cancelledAt","resp","filData","bookingExpired","cursor","stalls","setStalls","set","places","add","_step2","_iterator2","alt","useStyles","makeStyles","arrowIcon","Loading","status","setStatus","setSub","maxDate","setMaxDate","first","setFirst","second","setSecond","third","setThird","stall","setStall","setError","subId","setSubId","number","setNumber","message","message2","setMessage2","setSelected","weekId","setWeekId","weekdays","setIsMobile","mediaQuery","matchMedia","matches","listener","addListener","removeListener","UserService","min","Number","currentDate","currentDate1","dateNew","dateToday","validDate","String","firstF","secondF","thirdF","purpose","buyer_name","email","send_email","send_sms","allow_repeated_payments","webhook","redirect_url","href","idToRemove","newBookedStalls","pp","indexOf","splice","size","helperText","newValue","$d","myDate","yyyy","mm","padStart","dd","defaultValue","shouldDisableDate","d","minDate","inputProps","max","icons","RenderIcon","fontWeight","RenderIcon2","paddingTop","paddingBottom","bookingDetails","called","setCalled","sendMsg91SMS","pdfRef","downloadPDF","content","pdfBlob","url","link","generatePDF","URL","createObjectURL","download","click","revokeObjectURL","bookStr","valid","sub","status1","setDate","validity","setValidity","API_URL","validTill","setValidTill","setRemStalls","userId","str","JSON","parse","isJson","x","_ref4","_price","_callee4","_context4","_x4","handleSubmit","_ref5","_callee5","_context5","_x5","classname","md","xl","marginRight","Routes","Route","path","element","FarmersMain","FarmerNavigation","Test","FarmersHome","StallsPlaces","AdvanceBookings","Ticket","MyBookings","Subscription","getPublicContent","getStallsData","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","getSub","postSub","getMarket","getMarkets","getSubscribedData"],"sourceRoot":""}