{"version":3,"file":"static/js/416.a30fc1bb.chunk.js","mappings":"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","sources":["Routes/Profile.js","services/user.service.js"],"sourcesContent":["import React , {useState , useEffect , useRef} from \"react\";\r\nimport '../styles/Profile.css'\r\nimport UserService from \"../services/user.service\";\r\nimport Spinner from '../components/Spinner'\r\nimport AuthService from \"../services/auth.service\";\r\n// import NavMenu from \"../components/NavMenu\";\r\n// import useWindowDimensions from \"../components/useWindowDimensions\";\r\nconst Profile = ({t}) => {\r\n  const [user , setuser] = useState();\r\n  const [Loading, setLoading] = useState(false)\r\n  const [toggleImage, settoggleImage] = useState(false)\r\n  const [toggleAddress, settoggleAddress] = useState(false)\r\n  let addressText = useRef(\"\")\r\n  const [newPic, setNewPic] = useState(\r\n    {\r\n        photo: '',\r\n    }\r\n);\r\n\r\n\r\nuseEffect(() => {\r\n  UserService.getAllUsers().then(res=>{\r\n    const response = res?.data\r\n    setuser(response[0])\r\n  })\r\n}, [])\r\n\r\nconst handleSubmitAddress = (e) => {\r\n  e.preventDefault();\r\n  //setLoading(true);\r\n  \r\n  let address = addressText.current.value;\r\n  //console.log(\"hello\",address)\r\n  if(address && address.length!==0){\r\n    AuthService.addAddress(address).then(res=>{\r\n      setuser(res);\r\n      console.log(\"user \",res)\r\n      window.location.reload();\r\n      setLoading(false);\r\n\r\n    })\r\n     //console.log(\"hello inside submit\")\r\n  }\r\n  settoggleAddress(!toggleAddress)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  const formData = new FormData();\r\n  formData.append('photo', newPic.photo);\r\n  setLoading(true)\r\n  \r\n  if(formData){\r\n    AuthService.addimage(formData).then(res=>{\r\n      if(!res){\r\n        console.log(\"Image not set\")\r\n      }else{\r\n        setuser(res);\r\n      console.log(res);\r\n      \r\n      }\r\n      window.location.reload();\r\n      setLoading(false)\r\n      \r\n    })\r\n  }\r\n  settoggleImage(!toggleImage)\r\n}\r\n\r\nconst handlePhoto = (e) => {\r\n  setNewPic({...newPic, photo: e.target.files[0]});\r\n}\r\n\r\nconst handleAddresstoggle = () => {\r\n  settoggleAddress(!toggleAddress)\r\n}\r\n\r\nconst handleImagetoggle = () => {\r\n  settoggleImage(!toggleImage)\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!Loading && user ? \r\n      <div className=\"profile\">\r\n        <div className=\"profile_container\">\r\n        <div className=\"profile_image_wrapper\">\r\n            <img className=\"profile_img\" src={user.pic ? user.pic : \" \"} alt=\"profile\"/>\r\n        </div>\r\n        <div className=\"profile_details\">\r\n          <div>\r\n                {t(\"mobile_no\")} : {user.phone}\r\n          </div>\r\n          <div>\r\n          {t(\"name\")} : {user.firstname} {user.lastname}\r\n          </div>\r\n          {user.address && <div>\r\n            {t(\"address\")} : {user.address}\r\n          </div>}\r\n        </div>\r\n        <div className=\"profile_btn_grp\">\r\n        {\r\n        toggleImage ? \r\n        <form className=\"form_uploaddata\" onSubmit={handleSubmit} encType='multipart/form-data'>\r\n            <input \r\n                type=\"file\" \r\n                accept=\".png, .jpg, .jpeg\"\r\n                name=\"photo\"\r\n                style={{marginLeft:\"auto\"}}\r\n                onChange={handlePhoto}\r\n            />\r\n                    <input \r\n                type=\"submit\"\r\n                className=\"profile_btn_toggle\"\r\n            />\r\n            <button className=\"profile_btn_toggle\" onClick={()=>settoggleImage(!toggleImage)}>{t(\"cancel\")}</button>\r\n        </form>\r\n        :\r\n                  <button className=\"profile_btn_toggle\" onClick={handleImagetoggle}>{t(\"upload_profile\")}</button>\r\n        }\r\n       {\r\n       toggleAddress?\r\n       <form className=\"form_uploaddata\" onSubmit={handleSubmitAddress}>\r\n            <input \r\n                type=\"text\" \r\n                name=\"address\"\r\n                ref={addressText}\r\n                \r\n            />\r\n                    <input \r\n                type=\"submit\"\r\n                className=\"profile_btn_toggle\"\r\n            />\r\n            <button className=\"profile_btn_toggle\" onClick={()=>settoggleAddress(!toggleAddress)}>{t(\"cancel\")}</button>\r\n        </form>\r\n        :\r\n            <button className=\"profile_btn_toggle\" onClick={handleAddresstoggle}>{user.address?t(\"update_address\"):t(\"add_address\")}</button>\r\n        }\r\n        </div>\r\n        </div>\r\n        </div>:<Spinner/>}\r\n        <div className=\"pageBottom\" ></div>\r\n      {/* {mobile?<NavMenu\r\n       />:console.log(\"desktop\")} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\n// const API_URL = \"https://wingrowmarket.onrender.com/\";\r\n//const API_URL = \"http://localhost:4000/\"\r\nconst API_URL = \"https://wingrowmarket.com:8443/\";\r\nconst { REACT_APP_API_URL } = process.env;\r\n const getPublicContent = () => {\r\n    return axios.get(REACT_APP_API_URL + 'all');\r\n  }\r\n  const getSubscribedData = () =>{\r\n    return axios.get(REACT_APP_API_URL +\"sub\")\r\n  }\r\n  const getSub = (userId) =>{\r\n    return axios.post(REACT_APP_API_URL + 'sub1',{userId})\r\n  }\r\n  // const postSub = () =>{\r\n  //   return axios.post(API_URL,'sub',{ headers: authHeader() });\r\n  // }\r\n\r\n  const postSub = (date , userId , stalls , validity ) => {\r\n    return axios.post(REACT_APP_API_URL + \"sub\", {\r\n        date,\r\n        userId,\r\n        stalls,\r\n        validity, \r\n        first,\r\n        second,\r\n        third\r\n      } , { headers: authHeader() });\r\n  }\r\n  const getInOutdata = () => {\r\n    return axios.get(REACT_APP_API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  // const addMarket = () =>{\r\n  //   return axios.post(REACT_APP_API_URL + \"add\")\r\n  // }\r\n  const getMarket = () =>{\r\n    return axios.get(REACT_APP_API_URL + \"getmarket\")\r\n  }\r\nconst getMarkets = () => {\r\n  return axios.get(REACT_APP_API_URL + \"getmarkets\")\r\n}\r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers,\r\n    getSub,\r\n    postSub,\r\n    getMarket,\r\n  getMarkets,\r\n  getSubscribedData\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n"],"names":["_ref","t","_useState","useState","_useState2","_slicedToArray","user","setuser","_useState3","_useState4","Loading","setLoading","_useState5","_useState6","toggleImage","settoggleImage","_useState7","_useState8","toggleAddress","settoggleAddress","addressText","useRef","_useState9","photo","_useState10","newPic","setNewPic","useEffect","UserService","then","res","response","data","_jsxs","children","_jsx","className","src","pic","alt","phone","firstname","lastname","address","onSubmit","e","preventDefault","formData","FormData","append","AuthService","console","log","window","location","reload","encType","type","accept","name","style","marginLeft","onChange","_objectSpread","target","files","onClick","current","value","length","ref","Spinner","REACT_APP_API_URL","process","getPublicContent","axios","getStallsData","headers","authHeader","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","getSub","userId","postSub","date","stalls","validity","first","second","third","getMarket","getMarkets","getSubscribedData"],"sourceRoot":""}