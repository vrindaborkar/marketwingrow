{"version":3,"file":"static/js/590.7edf79b2.chunk.js","mappings":"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","sources":["Routes/Farmer/AdvanceBookings.js","Routes/Farmer/FarmersHome.js","Routes/Farmer/FarmersMain.js","Routes/Farmer/InwardData.js","components/ConfirmDelete.js","Routes/Farmer/MyBookings.js","Routes/Farmer/OutwardData.js","Routes/Farmer/StallsPlaces.js","Routes/Farmer/Test.js","Routes/Farmer/Ticket.js","Routes/Farmer/FarmerNavigation.js","Routes/Farmer/Subscription.js","Routes/Farmer/Farmer.js","components/Datepicker.js","components/useWindowDimensions.js","services/user.service.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Datepicker from \"../../components/Datepicker\";\r\nimport \"../../styles/AdvanceBookings.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport axios from \"axios\";\r\nimport Stall from \"./Stall\";\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport dayjs from \"dayjs\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport SelectSeatModal from \"../../components/SelectSeatModal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { Button} from \"@mui/material\";\r\n// import Spinner from '../../components/Spinner';\r\nconst userCurr = AuthService.getCurrentUser();\r\nvar today = new Date();\r\n// var tomorrow = today.add(1).day();\r\nconsole.log(today.getDate() + 1)\r\nconst replacement = today.getDate() + 1;\r\nconst todayFormatted = today.toISOString().slice(0, 10);\r\nconst locations = [\r\n  { location: \"Hadapsar\" },\r\n  { location: \"Karve Nagar\" },\r\n  { location: \"Kharadi\" },\r\n  { location: \"Wanawadi\" },\r\n  { location: \"Magarpatta\" },\r\n  { location: \"Amanora City\" },\r\n  { location: \"Bramhasun City\" },\r\n];\r\n\r\nconst AdvanceBookings = ({ setbookingDetails, setValue }) => {\r\n  const [location, setlocation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  const [data, setdata] = useState();\r\n  const [UpdatedData, setUpdatedData] = useState();\r\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\r\n  const [bookedStalls, setBookedStalls] = useState([]);\r\n  const [value, setvalue] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"));\r\n  const [alreadyBooked, setAlreadyBooked] = useState();\r\n  const [open, setOpen] = useState();\r\n  const [date, setdate] = useState(0);\r\n  const [totalStall, setTotalStalls] = useState(0);\r\n  const [available, setAvailable] = useState(0);\r\n  const [Loading, setLoading] = useState();\r\n  const [alreadyBookedLocataion, setAlreadyBookedLocation] = useState(0);\r\n  const { Id } = useParams();\r\n  const currentDate = 0\r\n  const lengthofUpdatedData = UpdatedData?.length;\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n\r\n  //function to input number of stalls\r\n  const handleChange = (e) => {\r\n    if (e.target.value <= -1) {\r\n      setNumberOfSeats(0);\r\n      setvalue(0);\r\n    }\r\n    else if (e.target.value <= available) {\r\n      setNumberOfSeats(e.target.value);\r\n      setvalue(e.target.value);\r\n    } else {\r\n      setNumberOfSeats(available);\r\n      setvalue(available);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    FarmerService.getMyStalls().then((response) => {\r\n      setLoading(false);\r\n      setdata(response.data);\r\n    });\r\n\r\n    FarmerService.getBookedStalls().then((response) => {\r\n      console.log(date)\r\n      const res = response.data && response.data.filter((e) => e.location === `${Id}` && e.bookedAt === date);\r\n      setAlreadyBooked(response.data);\r\n      setAlreadyBookedLocation(res.length);\r\n\r\n      console.log(\"already booked\", alreadyBooked);\r\n\r\n    });\r\n    handleOpen(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const confirmBookingCash = async (e) => {\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n    console.log(bookedStalls.length);\r\n    console.log(\"price\", price)\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(\"Failed to book stalls!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    let bookedStats = bookedStalls.toString();\r\n    const responseData = {\r\n      location: Id,\r\n      bookedStalls: bookedStalls,\r\n      bookedBy: userCurr.id,\r\n      bookedAt: dayjs(Date.now()).format(\"YYYY-MM-DD\"),\r\n      isBooked: true,\r\n    };\r\n\r\n    const stallsBooked = [];\r\n    bookedStalls.forEach((e) => {\r\n      stallsBooked.push(e.stallName);\r\n    });\r\n\r\n    // const price = bookedStalls.reduce(\r\n    //   (total, item) => item.stallPrice + total,\r\n    //   0\r\n    // );\r\n    const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n    const orderId = \"123\"\r\n    axios\r\n      .post(Url, responseData, { headers: authHeader() })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          setbookingDetails({\r\n            farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n            phone: userCurr.phone,\r\n            paymentDetails: orderId,\r\n            BookedStalls: stallsBooked,\r\n            stallsBooked: bookedStalls.length,\r\n            totalAmount: price,\r\n            address: bookedStalls[0].address\r\n          });\r\n        }\r\n        toast.success(\"stalls booked successfully!\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"../ticket\");\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(\"Failed to book stalls!\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setBookedStalls([]);\r\n        setNumberOfSeats(0);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const res = data && data.filter((e) => e.location === `${location}`);\r\n    console.log(res)\r\n    setUpdatedData(res);\r\n  }, [location, data, value]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (UpdatedData) {\r\n      setTotalStalls(UpdatedData.length)\r\n      console.log(totalStall)\r\n      setAvailable(totalStall - alreadyBookedLocataion)\r\n    }\r\n  }, [UpdatedData, totalStall]);\r\n\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const confirmBooking = async (e) => {\r\n    if (cashOnDelivery) {\r\n      confirmBookingCash();\r\n    }\r\n    else{\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(\"Failed to book stalls!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      // const orderUrl = \"https://wingrowagritech.herokuapp.com/order\";\r\n      const orderUrl = REACT_APP_API_URL+\"order\";\r\n      const { data } = await axios.post(\r\n        orderUrl,\r\n        { amount: price * 100 },\r\n        { headers: authHeader() }\r\n      );\r\n      initPayment(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      bookedStalls: bookedStats,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n          const verifyUrl = REACT_APP_API_URL+\"verify\";\r\n          const { data } = await axios.post(verifyUrl, response, {\r\n            headers: authHeader(),\r\n          });\r\n          const orderId = data.orderId;\r\n          console.log('tot')\r\n          const responseData = {\r\n            location: location,\r\n            bookedStalls: bookedStalls,\r\n            bookedBy: userCurr.id,\r\n            bookedAt: dayjs(value).format(\"YYYY-MM-DD\"),\r\n            isBooked: true,\r\n          };\r\n          const stallsBooked = [];\r\n          bookedStalls.forEach((e) => {\r\n            console.log(e.stallName)\r\n            stallsBooked.push(e.stallName);\r\n          });\r\n\r\n          const price = bookedStalls.reduce(\r\n            (total, item) => item.stallPrice + total,\r\n            0\r\n          );\r\n          const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n\r\n          axios\r\n            .post(Url, responseData, { headers: authHeader() })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                setbookingDetails({\r\n                  farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n                  phone: userCurr.phone,\r\n                  paymentDetails: orderId,\r\n                  BookedStalls: stallsBooked,\r\n                  stallsBooked: bookedStalls.length,\r\n                  totalAmount: price,\r\n                });\r\n              }\r\n              toast.success(\"stalls booked successfully!\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                navigate(\"../ticket\");\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(\"Failed to book stalls!\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setBookedStalls([]);\r\n              setNumberOfSeats(0);\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n          setBookedStalls([]);\r\n          setNumberOfSeats(0);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n\r\n  //function to input date from user \r\n  const handlechange1 = (event) => {\r\n    if (dayjs(event.target.value).format(\"YYYY-MM-DD\") <= todayFormatted) {\r\n      toast.warn(\"Please select a date after today\\'s date\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      setdate(todayFormatted.replace(/.{0,2}$/, '') + replacement);\r\n    }\r\n    else {\r\n      setdate(dayjs(event.target.value).format(\"YYYY-MM-DD\"));\r\n\r\n    }\r\n  };\r\n\r\n  const handleClick = (ev) => {\r\n\r\n\r\n    console.log(\"already \", alreadyBooked)\r\n\r\n    console.log(\"booked \", bookedStalls);\r\n    console.log(\"number of seats \", numberOfSeats);\r\n    console.log(ev.target)\r\n    if (numberOfSeats && ev.target.className !== \"booked\") {\r\n      const seatsToBook = parseInt(numberOfSeats, 20);\r\n      if (bookedStalls.length <= seatsToBook) {\r\n\r\n        if (bookedStalls.includes(ev.target.id)) {\r\n\r\n          //if already selected then remove it\r\n          const newAvailable = bookedStalls.filter(\r\n            (seat) => seat !== ev.target.id\r\n          );\r\n          setBookedStalls(newAvailable);\r\n          setAvailable(available + 1);\r\n        } else if (bookedStalls.length < numberOfSeats) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          console.log(\"here booked\");\r\n          setAvailable(available - 1);\r\n          //console.log(userCurr)\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n        } else if (bookedStalls.length === seatsToBook) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          bookedStalls.shift();\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n        }\r\n      }\r\n    }\r\n    //console.log(bookedStalls.map(function(v,i){return v.stallPrice}));\r\n\r\n  };\r\n\r\n  const alertStyles = {\r\n    backgroundColor: '#f2dede',\r\n    border: '1px solid #ebccd1',\r\n    color: '#a94442',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    marginBottom: '15px'\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"Test\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n\r\n      <Link to=\"../\" className=\"advancebookinglinkback\">\r\n        Go Back to stalls!\r\n      </Link>\r\n      <div className=\"main_container_stalls\">\r\n        <Grid className=\"input-div-holder\" container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel className=\"stall-booking-lable\">\r\n              Enter Booking Date\r\n            </InputLabel>\r\n            <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 14, fontFamily: \"monospace\" },\r\n              }}\r\n              name=\"booking-date\"\r\n              required\r\n              fullWidth\r\n              type=\"date\"\r\n              id=\"booking-date\"\r\n              autoFocus\r\n              value={date}\r\n              onChange={handlechange1}\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n            />\r\n            {console.log(date)}\r\n          </Grid>\r\n          <Grid className=\"select-market-grid\" item xs={12} sm={6}>\r\n            <FormControl className=\"formcontrol\" sx={{ width: \"100%\", fontSize: 14 }}>\r\n              <InputLabel color=\"success\" className=\"stall-booking-lable\">\r\n                Market\r\n              </InputLabel>\r\n              <Select\r\n                className=\"textfield\"\r\n                id=\"demo-simple-select-autowidth\"\r\n                value={location}\r\n                color=\"success\"\r\n                onChange={(e) => {\r\n                  setlocation(e.target.value);\r\n                }}\r\n                label=\"address\"\r\n                name=\"address\"\r\n                required\r\n              >\r\n                {locations.map((e, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={e.location}>\r\n                      {e.location}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel className=\"stall-booking-lable\">\r\n              Number Of Stall Required\r\n            </InputLabel>\r\n            <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 14, fontFamily: \"monospace\" },\r\n              }}\r\n              name=\"number-of-stalls-req\"\r\n              required\r\n              placeholder=\"00\"\r\n              fullWidth\r\n              type=\"number\"\r\n              id=\"number-of-stalls-req\"\r\n              autoFocus\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <div className=\"secondary_container_stalls\">\r\n          {UpdatedData && location !== \"\" ? (\r\n            <Grid className=\"stalls-count-cantainer\">\r\n\r\n              <div className=\"stall_wrapper\">\r\n\r\n                <div className=\"StallsContainer\">\r\n                  <Grid>\r\n                    <div className=\"stalls-count-div\">\r\n                      <Typography className=\"count\">Total Stalls :{totalStall}</Typography>\r\n                      <Typography className=\"count\">\r\n                        Available Stalls :{available}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                  {lengthofUpdatedData === 34 && (\r\n                    <div className=\"StallsContainer\">\r\n                      {console.log(bookedStalls)}\r\n                      <Stall\r\n                        data={UpdatedData.slice(0, 16)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(16, 17)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(17, 18)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(18, 34)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {lengthofUpdatedData === 50 && (\r\n                    <div className=\"StallsContainer\">\r\n                      <Stall\r\n                        data={UpdatedData.slice(0, 24)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(24, 25)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(25, 26)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                      <Stall\r\n                        data={UpdatedData.slice(26, 50)}\r\n                        handleClick={handleClick}\r\n                        bookedStalls={bookedStalls}\r\n                        alreadyBooked={alreadyBooked}\r\n                        date={date}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          ) : (\r\n            <div className=\"select_market\">\r\n              <h2>Please select the market</h2>\r\n            </div>\r\n          )}\r\n          <Grid className=\"stall-pricing-grid\">\r\n            <div className=\"stall-pricing-main-div\">\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#AACE48\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">100/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#3AA54B\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">300/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#A42A56\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">500/-</div>\r\n              </div>\r\n              <div className=\"price-holder\">\r\n                <Box\r\n                  sx={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    backgroundColor: \"#B3B3B3\",\r\n                  }}\r\n                  className=\"stall-color\"\r\n                />\r\n                <div className=\"stall-price\">Booked</div>\r\n              </div>\r\n            </div>\r\n            <Divider className=\"divider\" />\r\n            <div className=\"stall-total-amount-holder\">\r\n              <div className=\"total-amount\">Total Amount</div>\r\n              <div className=\"total-amount\">Rs.{bookedStalls.reduce(\r\n                (total, item) => item.stallPrice + total,\r\n                0\r\n              )}/-</div>\r\n            </div>\r\n          </Grid>\r\n          {numberOfSeats !== 0 && bookedStalls.length !== 0 ? (\r\n            <div className=\"modalbtn\">\r\n              <ConfirmModal setCashOnDelivery={setCashOnDelivery} confirmBooking={confirmBooking} />\r\n            </div>\r\n          ) : (\r\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <Button\r\n                    style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    PAY\r\n                  </Button>\r\n                  <Button style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    PAY ON DELIVERY\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceBookings;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../../styles/Farmer.css\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport * as echarts from 'echarts';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\n\r\n\r\n\r\nconst FarmersHome = ({t}) => {\r\n  const [InwardData, setInwardData] = useState([]);\r\n  const [OutwardData, setOutwardData] = useState([]);\r\n  const [InwardDataGraph, setInwardDataGraph] = useState([]);\r\n  const [OutwardDataGraph, setOutwardDataGraph] = useState([]);\r\n  const [salesQuantity, setSalesQuantity] = useState(0);\r\n  const [salesRate, setSalesRate] = useState(0);\r\n  const [purchaseQuantity, setPurchaseQuantity] = useState(0);\r\n  const [purchaseRate, setPurchaseRate] = useState(0);\r\n  const today = new Date();\r\n  const [mondaySalesQuantity, setMondaySalesQuantity] = useState(0);\r\n  const [tuesdaySalesQuantity, setTuesdaySalesQuantity] = useState(0);\r\n  const [wednesdaySalesQuantity, setWednesdaySalesQuantity] = useState(0);\r\n  const [thursdaySalesQuantity, setThursdaySalesQuantity] = useState(0);\r\n  const [fridaySalesQuantity, setFridaySalesQuantity] = useState(0);\r\n  const [saturdaySalesQuantity, setSaturdaySalesQuantity] = useState(0);\r\n  const [sundaySalesQuantity, setSundaySalesQuantity] = useState(0);\r\n  const [mondayPurchaseQuantity, setMondayPurchaseQuantity] = useState(0);\r\n  const [tuesdayPurchaseQuantity, setTuesdayPurchaseQuantity] = useState(0);\r\n  const [wednesdayPurchaseQuantity, setWednesdayPurchaseQuantity] = useState(0);\r\n  const [thursdayPurchaseQuantity, setThursdayPurchaseQuantity] = useState(0);\r\n  const [fridayPurchaseQuantity, setFridayPurchaseQuantity] = useState(0);\r\n  const [saturdayPurchaseQuantity, setSaturdayPurchaseQuantity] = useState(0);\r\n  const [sundayPurchaseQuantity, setSundayPurchaseQuantity] = useState(0);\r\n  const [mondaySalesRate, setMondaySalesRate] = useState(0);\r\n  const [tuesdaySalesRate, setTuesdaySalesRate] = useState(0);\r\n  const [wednesdaySalesRate, setWednesdaySalesRate] = useState(0);\r\n  const [thursdaySalesRate, setThursdaySalesRate] = useState(0);\r\n  const [fridaySalesRate, setFridaySalesRate] = useState(0);\r\n  const [saturdaySalesRate, setSaturdaySalesRate] = useState(0);\r\n  const [sundaySalesRate, setSundaySalesRate] = useState(0);\r\n  const [mondayPurchaseRate, setMondayPurchaseRate] = useState(0);\r\n  const [tuesdayPurchaseRate, setTuesdayPurchaseRate] = useState(0);\r\n  const [wednesdayPurchaseRate, setWednesdayPurchaseRate] = useState(0);\r\n  const [thursdayPurchaseRate, setThursdayPurchaseRate] = useState(0);\r\n  const [fridayPurchaseRate, setFridayPurchaseRate] = useState(0);\r\n  const [saturdayPurchaseRate, setSaturdayPurchaseRate] = useState(0);\r\n  const [sundayPurchaseRate, setSundayPurchaseRate] = useState(0);\r\n  const [location, setlocation] = useState(\"\");\r\n  const [pl, setpl] = useState(0);\r\n  const chartRef = useRef(null);\r\n\r\n  const chartData = [mondaySalesQuantity * mondaySalesRate - mondayPurchaseQuantity * mondayPurchaseRate,\r\n  tuesdaySalesQuantity * tuesdaySalesRate - tuesdayPurchaseQuantity * tuesdayPurchaseRate,\r\n  (wednesdaySalesQuantity * wednesdaySalesRate) - (wednesdayPurchaseQuantity * wednesdayPurchaseRate),\r\n  (thursdaySalesQuantity * thursdaySalesRate) - (thursdayPurchaseQuantity * thursdayPurchaseRate),\r\n  fridaySalesQuantity * fridaySalesRate - fridayPurchaseQuantity * fridayPurchaseRate,\r\n  (saturdaySalesQuantity * saturdaySalesRate) - (saturdayPurchaseQuantity * saturdayPurchaseRate),\r\n  (sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate)];\r\n\r\n  console.log(chartData[3])\r\n\r\n  const arr = { \"Hadapsar\": 3, 'Kharadi': 4, 'Karve Nagar': 4, 'Bramhasun City': 5, 'Wanawadi': 6, 'Magarpatta': 0, 'Amanora City': 0 }\r\n\r\n\r\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n  const weekdayNumber = today.getDay();\r\n\r\n  const data = {\r\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n    datasets: [\r\n      {\r\n        label: 'Data',\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        data: [mondaySalesQuantity * mondaySalesRate - mondayPurchaseQuantity * mondayPurchaseRate,\r\n        tuesdaySalesQuantity * tuesdaySalesRate - tuesdayPurchaseQuantity * tuesdayPurchaseRate,\r\n        (wednesdaySalesQuantity * wednesdaySalesRate) - (wednesdayPurchaseQuantity * wednesdayPurchaseRate),\r\n        (thursdaySalesQuantity * thursdaySalesRate) - (thursdayPurchaseQuantity * thursdayPurchaseRate),\r\n        fridaySalesQuantity * fridaySalesRate - fridayPurchaseQuantity * fridayPurchaseRate,\r\n        (saturdaySalesQuantity * saturdaySalesRate) - (saturdayPurchaseQuantity * saturdayPurchaseRate),\r\n        (sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate)]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const locations = [\r\n    { location: t(\"Hadapsar\") },\r\n    { location: t(\"Karve Nagar\") },\r\n    { location: t(\"Kharadi\") },\r\n    { location: t(\"Wanawadi\") },\r\n    { location: t(\"Magarpatta\") },\r\n    { location: t(\"Amanora City\") },\r\n    { location: t(\"Bramhasun City\") },\r\n  ];\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const cumulativeData = {};\r\n\r\n\r\n  const marketNames = ['Hadapsar', 'Kharadi', 'Karve Nagar', 'Bramhasun City', 'Wanawadi', 'Magarpatta', 'Amanora City'];\r\n\r\n\r\n\r\n  // Loop through each market and calculate cumulative data\r\n  for (const market of marketNames) {\r\n    const filteredInwardData = InwardDataGraph.filter(data => data.market === market);\r\n    const filteredOutwardData = OutwardDataGraph.filter(data => data.market === market);\r\n\r\n    const commoditiesInMarket = [...new Set(filteredInwardData.map(data => data.commodity))];\r\n\r\n    const cumulativeDataForMarket = {};\r\n\r\n    let totalNetProfit = 0; // initialize total net profit to 0\r\n\r\n    for (const commodity of commoditiesInMarket) {\r\n      const filteredInwardDataForCommodity = filteredInwardData.filter(data => data.commodity === commodity);\r\n      const totalPurchaseQuantity = filteredInwardDataForCommodity.reduce((sum, data) => sum + data.purchase_quantity, 0);\r\n      const totalPurchaseRate = filteredInwardDataForCommodity.reduce((sum, data) => sum + data.purchase_rate, 0);\r\n\r\n      const filteredOutwardDataForCommodity = filteredOutwardData.filter(data => data.commodity === commodity);\r\n      const totalSalesQuantity = filteredOutwardDataForCommodity.reduce((sum, data) => sum + data.sales_quantity, 0);\r\n      const totalSalesRate = filteredOutwardDataForCommodity.reduce((sum, data) => sum + data.sales_rate, 0);\r\n\r\n      const netProfit = (totalSalesQuantity * totalSalesRate) - (totalPurchaseQuantity * totalPurchaseRate);\r\n\r\n      cumulativeDataForMarket[commodity] = {\r\n        commodity,\r\n        totalPurchaseQuantity,\r\n        totalPurchaseRate,\r\n        totalSalesQuantity,\r\n        totalSalesRate,\r\n        netProfit\r\n      };\r\n\r\n      totalNetProfit += netProfit; // add net profit of current commodity to total net profit\r\n    }\r\n\r\n    cumulativeData[market] = cumulativeDataForMarket;\r\n    cumulativeData[market].totalNetProfit = totalNetProfit; // add total net profit to cumulative data for current market\r\n  }\r\n\r\n\r\n  const options = {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Only run the effect if both location and selectedDate are truthy values\r\n    if (location && selectedDate && searchClicked) {\r\n      console.log(\"here\")\r\n      const date = new Date(selectedDate);\r\n      const year = date.getFullYear();\r\n      const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n      const day = ('0' + date.getDate()).slice(-2);\r\n      const formattedDate = `${year}-${month}-${day}`;\r\n\r\n      console.log(formattedDate); // outputs something like \"2023-04-17\"\r\n\r\n      FarmerService.getInward().then((response) => {\r\n\r\n\r\n        const res = response.data && response.data.filter((e) => e.market === location && e.time.slice(0, 10) === formattedDate);\r\n        console.log(res);\r\n        setInwardData(res); // Move the setInwardData method inside the then method\r\n      });\r\n\r\n      FarmerService.getOutward().then((response) => {\r\n        const res = response.data && response.data.filter((e) => e.market === location && e.time.slice(0, 10) === formattedDate);\r\n        console.log(res);\r\n        setOutwardData(res); // Move the setOutwardData method inside the then method\r\n      });\r\n      setSearchClicked(false)\r\n    }\r\n  }, [location, selectedDate, searchClicked]);\r\n\r\n  const handleSearchClick = () => {\r\n    if (location === \"\") {\r\n\r\n      toast.warn('Please Select Market!', {\r\n        position: 'top-right',\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    }\r\n    else setSearchClicked(true); // Set searchClicked to true when the search button is clicked\r\n  };\r\n\r\n  useEffect(() => {\r\n    FarmerService.getInward().then((res) => {\r\n      setInwardDataGraph(res.data);\r\n    });\r\n\r\n    FarmerService.getOutward().then((res) => {\r\n      setOutwardDataGraph(res.data);\r\n      // console.log(res.data)\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  function calculateSalesQuantity(i, y) {\r\n    let temp = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.sales_quantity;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function handleDateChange(date) {\r\n    const selectedDate = new Date(date);\r\n    const day = selectedDate.getDate();\r\n    const month = selectedDate.getMonth() + 1;\r\n    const year = selectedDate.getFullYear();\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    console.log(formattedDate); // outputs \"12/4/2023\" for April 12th, 2023\r\n\r\n    setSelectedDate(selectedDate);\r\n  }\r\n\r\n\r\n  function calculateSalesRate(i, y) {\r\n    let temp = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.sales_rate;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function calculatePurchaseRate(i, y) {\r\n    let temp = 0;\r\n    if (InwardDataGraph) {\r\n      InwardData.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.purchase_rate;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n  function calculatePurchaseQuality(i, y) {\r\n    let temp = 0;\r\n    if (InwardDataGraph) {\r\n      InwardDataGraph.forEach((e) => {\r\n        if (arr[e.market] === i) {\r\n          temp += e.purchase_quantity;\r\n        }\r\n      });\r\n      y(temp);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculateSalesQuantity(0, setSundaySalesQuantity)\r\n      }\r\n      else if (i === 1) {\r\n        calculateSalesQuantity(1, setMondaySalesQuantity)\r\n      }\r\n      else if (i === 2) {\r\n        calculateSalesQuantity(2, setTuesdaySalesQuantity);\r\n      }\r\n      else if (i === 3) {\r\n        calculateSalesQuantity(3, setWednesdaySalesQuantity)\r\n      }\r\n      else if (i === 4) {\r\n        calculateSalesQuantity(4, setThursdaySalesQuantity)\r\n      }\r\n      else if (i === 5) {\r\n        calculateSalesQuantity(5, setFridaySalesQuantity)\r\n      }\r\n      else if (i === 6) {\r\n        calculateSalesQuantity(6, setSaturdaySalesQuantity)\r\n      }\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculateSalesRate(0, setSundaySalesRate)\r\n      }\r\n      else if (i === 1) {\r\n        calculateSalesRate(1, setMondaySalesRate)\r\n      }\r\n      else if (i === 2) {\r\n        calculateSalesRate(2, setTuesdaySalesRate);\r\n      }\r\n      else if (i === 3) {\r\n        calculateSalesRate(3, setWednesdaySalesRate)\r\n      }\r\n      else if (i === 4) {\r\n        calculateSalesRate(4, setThursdaySalesRate)\r\n      }\r\n      else if (i === 5) {\r\n        calculateSalesRate(5, setFridaySalesRate)\r\n      }\r\n      else if (i === 6) {\r\n        calculateSalesRate(6, setSaturdaySalesRate)\r\n      }\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculatePurchaseRate(0, setSundayPurchaseRate)\r\n      }\r\n      else if (i === 1) {\r\n        calculatePurchaseRate(1, setMondayPurchaseRate)\r\n      }\r\n      else if (i === 2) {\r\n        calculatePurchaseRate(2, setTuesdayPurchaseRate);\r\n      }\r\n      else if (i === 3) {\r\n        calculatePurchaseRate(3, setWednesdayPurchaseRate)\r\n      }\r\n      else if (i === 4) {\r\n        calculatePurchaseRate(4, setThursdayPurchaseRate)\r\n      }\r\n      else if (i === 5) {\r\n        calculatePurchaseRate(5, setFridayPurchaseRate)\r\n      }\r\n      else if (i === 6) {\r\n        calculatePurchaseRate(6, setSaturdayPurchaseRate)\r\n      }\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i === 0) {\r\n        calculatePurchaseQuality(0, setSundayPurchaseQuantity)\r\n      }\r\n      else if (i === 1) {\r\n        calculatePurchaseQuality(1, setMondayPurchaseQuantity)\r\n      }\r\n      else if (i === 2) {\r\n        calculatePurchaseQuality(2, setTuesdayPurchaseQuantity);\r\n      }\r\n      else if (i === 3) {\r\n        calculatePurchaseQuality(3, setWednesdayPurchaseQuantity)\r\n      }\r\n      else if (i === 4) {\r\n        calculatePurchaseQuality(4, setThursdayPurchaseQuantity)\r\n      }\r\n      else if (i === 5) {\r\n        calculatePurchaseQuality(5, setFridayPurchaseQuantity)\r\n      }\r\n      else if (i === 6) {\r\n        calculatePurchaseQuality(6, setSaturdayPurchaseQuantity)\r\n      }\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n\r\n  useEffect(() => {\r\n    let totalSalesQuantity = 0;\r\n    if (OutwardDataGraph) {\r\n\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          totalSalesQuantity += e.sales_quantity;\r\n        }\r\n      });\r\n      setSalesQuantity(totalSalesQuantity);\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n  useEffect(() => {\r\n    let totalSalesRate = 0;\r\n    if (OutwardDataGraph) {\r\n      OutwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          totalSalesRate += e.sales_rate;\r\n        }\r\n      });\r\n      setSalesRate(totalSalesRate);\r\n    }\r\n  }, [OutwardDataGraph]);\r\n\r\n\r\n  useEffect(() => {\r\n    let totalPurchaseQuantity = 0;\r\n    if (InwardDataGraph) {\r\n      InwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          totalPurchaseQuantity += e.purchase_quantity;\r\n        }\r\n      });\r\n      setPurchaseQuantity(totalPurchaseQuantity);\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n  const handleLocation = (e) => {\r\n    if (!selectedDate) {\r\n      toast.warn('Please Select Date!', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    }\r\n    else setlocation(e.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let totalPurchaseRate = 0;\r\n    if (InwardDataGraph) {\r\n      InwardDataGraph.forEach((e) => {\r\n        if (weekdayNumber === arr[e.market]) {\r\n          console.log(e.market)\r\n          totalPurchaseRate += e.purchase_rate;\r\n        }\r\n      });\r\n      setPurchaseRate(totalPurchaseRate);\r\n    }\r\n  }, [InwardDataGraph]);\r\n\r\n  function handlePAndL() {\r\n    const profitLossArray = []; // Create an empty array to store profit/loss values\r\n    InwardData.forEach((inwardItem) => {\r\n      const matchingOutwardItem = OutwardData.find(\r\n        (outwardItem) => outwardItem.commodity === inwardItem.commodity\r\n      );\r\n\r\n      if (matchingOutwardItem) {\r\n        const purchaseQuantity = inwardItem.purchase_quantity;\r\n        const purchaseRate = inwardItem.purchase_rate;\r\n        const salesQuantity = matchingOutwardItem.sales_quantity;\r\n        const salesRate = matchingOutwardItem.sales_rate;\r\n\r\n        const profitLoss =\r\n          salesQuantity * salesRate - purchaseQuantity * purchaseRate;\r\n        profitLossArray.push(profitLoss); // Add profit/loss value to the array\r\n      }\r\n    });\r\n    return profitLossArray; // Return the array of profit/loss values\r\n  }\r\n  console.log(chartRef);\r\n\r\n  useEffect(() => {\r\n    // Initialize the ECharts instance\r\n    const chart = echarts.init(chartRef.current);\r\nconsole.log(cumulativeData['Hadapsar']['totalNetProfit'])\r\n    // Define the chart options\r\n    const options = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: [t('monday'), t('tuesday'), t('wednesday'), t('thursday'), t('friday'), t('saturday'), t('sunday')]\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      dataGroupId: '',\r\n      animationDurationUpdate: 500,\r\n      series: [{\r\n       \r\n        type: 'bar',\r\n         id: 'sales',\r\n        data: [\r\n          {\r\n            value: 0,\r\n            groupId: t('monday')\r\n          },\r\n          {\r\n            value: chartData[1],\r\n            groupId: t('tuesday')\r\n          },\r\n          {\r\n            value: cumulativeData['Hadapsar']['totalNetProfit'],\r\n            groupId: t('wednesday')\r\n          },\r\n          {\r\n            value: cumulativeData['Karve Nagar']['totalNetProfit'] + cumulativeData['Kharadi']['totalNetProfit'],\r\n            groupId: t('thursday')\r\n          },\r\n          {\r\n            value: cumulativeData['Bramhasun City']['totalNetProfit'],\r\n            groupId: t('friday')\r\n          },\r\n          {\r\n            value: cumulativeData['Wanawadi']['totalNetProfit'],\r\n            groupId: t('saturday')\r\n          },\r\n          {\r\n            value: cumulativeData['Amanora City']['totalNetProfit'] + cumulativeData['Magarpatta']['totalNetProfit'],\r\n            groupId: t('sunday')\r\n          }\r\n        ],\r\n        universalTransition: {\r\n          enabled: true,\r\n          divideShape: 'clone'\r\n        }\r\n      }]\r\n    };\r\n\r\n    // Set the chart options and render the chart\r\n    chart.setOption(options);\r\n   \r\n    console.log('Cumulative Data for all Markets:', cumulativeData);\r\n\r\n\r\n    \r\n    // Loop through each market\r\n    for (const market in cumulativeData) {\r\n      console.log(`Market: ${market}`);\r\n      // Loop through each commodity in the current market\r\n      for (const commodity in cumulativeData[market]) {\r\n        const netProfit = cumulativeData[market][commodity].netProfit;\r\n        console.log(`Commodity: ${commodity}, Net Profit: ${netProfit}`);\r\n      }\r\n    }\r\n\r\n\r\n    const karveNagarData = Object.keys(cumulativeData['Karve Nagar'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Karve Nagar'][commodity]['netProfit']])\r\n    const kharadiData = Object.keys(cumulativeData['Kharadi'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Kharadi'][commodity]['netProfit']])\r\n    const magarpattaData = Object.keys(cumulativeData['Magarpatta'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Magarpatta'][commodity]['netProfit']])\r\n    const amanoraData = Object.keys(cumulativeData['Amanora City'])\r\n                            .filter(commodity => commodity !== 'totalNetProfit') \r\n                            .map(commodity => [commodity, cumulativeData['Amanora City'][commodity]['netProfit']])\r\n\r\n\r\n    const drilldownData = [\r\n      {\r\n        dataGroupId: t('wednesday'),\r\n        data: Object.keys(cumulativeData['Hadapsar'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Hadapsar'][commodity]['netProfit']])\r\n      },\r\n      {\r\n        dataGroupId: t('thursday'),\r\n        data: [\r\n          ...karveNagarData,\r\n          ...kharadiData\r\n        ]\r\n      },\r\n      {\r\n        dataGroupId: t('friday'),\r\n        data: Object.keys(cumulativeData['Bramhasun City'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Bramhasun City'][commodity]['netProfit']])\r\n      },\r\n      {\r\n        dataGroupId: t('saturday'),\r\n        data: Object.keys(cumulativeData['Wanawadi'])\r\n          .filter(commodity => commodity !== 'totalNetProfit') \r\n          .map(commodity => [commodity, cumulativeData['Wanawadi'][commodity]['netProfit']])\r\n      },\r\n      {\r\n        dataGroupId: t('sunday'),\r\n        data: [\r\n          ...magarpattaData,\r\n          ...amanoraData\r\n        ]\r\n      }\r\n    ];\r\n\r\n    chart.on('click', function (event) {\r\n      if (event.data) {\r\n        var subData = drilldownData.find(function (data) {\r\n          return data.dataGroupId === event.data.groupId;\r\n        });\r\n        if (!subData) {\r\n          return;\r\n        }\r\n        chart.setOption({\r\n          xAxis: {\r\n            data: subData.data.map(function (item) {\r\n              return item[0];\r\n            })\r\n          },\r\n          series: {\r\n            type: 'bar',\r\n            id: 'sales',\r\n            dataGroupId: subData.dataGroupId,\r\n            data: subData.data.map(function (item) {\r\n              return item[1];\r\n            }),\r\n            universalTransition: {\r\n              enabled: true,\r\n              divideShape: 'clone'\r\n            }\r\n          },\r\n          graphic: [\r\n            {\r\n              type: 'text',\r\n              left: 50,\r\n              top: 20,\r\n              style: {\r\n                text: 'Back',\r\n                fontSize: 18\r\n              },\r\n              onclick: function () {\r\n                chart.setOption(options);\r\n              }\r\n            }\r\n          ]\r\n        });\r\n     }\r\n    });\r\n  \r\n\r\n    // Dispose the chart instance when the component is unmounted\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [chartData, InwardDataGraph]);\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <div className=\"inOutData\">\r\n\r\n      </div>\r\n\r\n      <div className=\"farmers_page\">\r\n        <div className=\"backbtndiv\">\r\n          <Link className=\"backbtn green backbtndiv\" to=\"/farmers\" >\r\n            {t(\"back\")}\r\n          </Link>\r\n        </div>\r\n\r\n        {InwardData && OutwardData && (\r\n          <div className=\"farmers\">\r\n            <div className=\"farmers_data\">\r\n              <Grid className=\"input-div-holder-new\" container spacing={3}>\r\n\r\n                <Grid item xs={12} sm={6} className=\"date-input-farmer-home\">\r\n                  <InputLabel className=\"farmerDataLabel\">\r\n                    {t(\"enter_booking_date\")}\r\n                  </InputLabel>\r\n                  <DatePicker\r\n                    renderInput={(props) => <TextField {...props} />}\r\n                    selected={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    placeholderText=\"Select a date\"\r\n                    value={selectedDate}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid className=\"select-market-grid\" item xs={12} sm={6}>\r\n                  <InputLabel className=\"farmerDataLabel\">\r\n                    {t(\"select_market\")}\r\n                  </InputLabel>\r\n                  <FormControl className=\"formcontrol\" sx={{ width: \"100%\", fontSize: 14 }}>\r\n                    <InputLabel color=\"success\" className=\"stall-booking-lable\">\r\n                      {t(\"market_label\")}\r\n                    </InputLabel>\r\n                    {console.log(searchClicked)}\r\n                    <Select\r\n                      className=\"textfield\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={location}\r\n                      color=\"success\"\r\n                      onChange={\r\n                        handleLocation}\r\n                      label=\"address\"\r\n                      name=\"address\"\r\n                      required\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {e.location}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n\r\n                <div className=\"searchButton\">\r\n                  <Button\r\n                    onClick={handleSearchClick}\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    sx={{ m: 2 }}\r\n                  >\r\n                    {t(\"search\")}\r\n                  </Button>\r\n                </div>\r\n\r\n\r\n              </Grid>\r\n\r\n              {InwardData.length !== 0 && (\r\n                <div className=\"inwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"inward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {/* <div className=\"farmerdata_items\">\r\n                      <p>Purchase Rate : {purchaseRate}</p>\r\n                    </div>\r\n                    <div className=\"farmerdata_items\">\r\n                      <p>Purchase Quantity : {purchaseQuantity}</p>\r\n                    </div> */}\r\n                    {InwardData.map((e, i) => {\r\n                      return (\r\n                        <div key={i} className=\"farmerdata_items\">\r\n                          <p>{t(\"commodity\")} {e.commodity}</p>\r\n                          <p>{t(\"market\")} {e.market}</p>\r\n                          <p>{t(\"purchase_rate\")} {e.purchase_rate}</p>\r\n                          <p>{t(\"purchase_quantity\")} {e.purchase_quantity}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n              )}\r\n\r\n              {InwardData.length === 0 && (\r\n                <div className=\"inwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"inward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {t(\"no_inward_data_available\")}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {OutwardData.length !== 0 && (\r\n                <div className=\"outwardData\">\r\n                  {console.log(salesQuantity)}\r\n                  <h3 style={{ padding: \"1rem 0\" }}>Outward Data</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    {OutwardData.map((e, i) => {\r\n                      return (\r\n                        <div key={i} className=\"farmerdata_items\">\r\n                          <p>{t(\"commodity\")} {e.commodity}</p>\r\n                          <p>{t(\"market\")} {e.market}</p>\r\n                          <p>{t(\"sales_rate\")} {e.sales_rate}</p>\r\n                          <p>{t(\"sales_quantity\")} {e.sales_quantity}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {OutwardData.length === 0 && (\r\n                <div className=\"outwardData\">\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"outward_data\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                  {t(\"no_outward_data_available\")}\r\n                  </div>\r\n                </div>\r\n\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {InwardData.length !== 0 && OutwardData.length !== 0 ? (\r\n                <div style={{ display: 'Grid', alignItems: 'Center', justifyContent: 'center', marginTop: '2rem' }}>\r\n                  <h3 style={{ padding: \"1rem 0\" }}>{t(\"profit_loss_label\")}</h3>\r\n                  <div className=\"farmersdata_container\">\r\n                    <div className=\"farmerdata_items\">\r\n                      {handlePAndL().map((profitLoss, index) => (\r\n                        <h3 key={index}>\r\n                          {profitLoss < 0\r\n                            ? `${t(\"Loss for\")} ${InwardData[index].commodity}: ${Math.abs(\r\n                              profitLoss\r\n                            )}`\r\n                            : `${t(\"Profit for\")} ${InwardData[index].commodity}: ${profitLoss}`}\r\n                        </h3>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                console.log(\"no\")\r\n              )}\r\n            </div>\r\n\r\n\r\n\r\n            <h1>{t(\"market_details\")}</h1>\r\n\r\n            <div className=\"second-row\">\r\n              <div className=\"inwardData\">\r\n                <h3 style={{ padding: \"0 0\" }}>{t(\"market_days\")}</h3>\r\n                <div className=\"farmersdata_container\">\r\n                  <div className=\"farmerdata_items\">\r\n                    <p>{t(\"monday\")}    : None</p>\r\n                    <p>{t(\"tuesday\")}   : None</p>\r\n                    <p>{t(\"wednesday\")} : {t(\"hadapsar_location\")}</p>\r\n                    <p>{t(\"thursday\")}  : {t(\"kharadi_iT_park_location\")}, {t(\"karvenagar_location\")}</p>\r\n                    <p>{t(\"friday\")}    : {t(\"Bramhasun City\")}</p>\r\n                    <p>{t(\"saturday\")}  : {t(\"Wanawadi\")}</p>\r\n                    <p>{t(\"sunday\")}    : {t(\"magarpatta_location\")}, {t(\"Amanora City\")}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Bar className=\"bar\"\r\n                data={data}\r\n                options={options}\r\n              >\r\n                {console.log((sundaySalesQuantity * sundaySalesRate) - (sundayPurchaseQuantity * sundayPurchaseRate))}\r\n              </Bar>\r\n\r\n              <div ref={chartRef} style={{ width: '100%', height: '400px' }}>\r\n                {/* The chart container */}\r\n              \r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        )}\r\n        {!InwardData && !OutwardData && <Spinner />}\r\n\r\n\r\n\r\n      </div>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default FarmersHome;\r\n","import React from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport FarmerNav from \"./FarmerNav\";\r\n\r\nconst FarmersMain = () => {\r\n  return (\r\n    <div style={{ postion: \"relative\" }}>\r\n      \r\n      <Outlet />\r\n      {/* <FarmerNav /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmersMain;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"../../styles/Farmer.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport dayjs from \"dayjs\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst theme = createTheme();\r\nexport default function InwardData({t}) {\r\n  const locations = [\r\n    { location: t(\"hadapsar_location\") },\r\n    { location: t(\"karvenagar_location\") },\r\n    { location: t(\"kharadi_iT_park_location\") },\r\n    { location: t(\"wanwadi_location\") },\r\n    { location: t(\"magarpatta_location\") },\r\n    { location: t(\"amanora_city_location\") },\r\n    { location: t(\"bramhasun_city_location\") },\r\n  ];\r\n\r\n  const options = [\r\n    //leaves\r\n    { label: t(\"Amaranthus\") },\r\n    { label: t(\"Beet Root\") },\r\n    { label: t(\"Chukka- sorrel Leaves\") },\r\n    { label: t(\"Colocasia Leaves\") },\r\n    { label: t(\"Curry Leaves\") },\r\n    { label: t(\"Dill\") },\r\n    { label: t(\"Fenugreek Leaves\") },\r\n    { label: t(\"Green Amaranth\") },\r\n    { label: t(\"Spinach\") },\r\n    { label: t(\"Spring Onion\") },\r\n    { label: t(\"Sufflower\") },\r\n    // Wild-Antic\r\n    { label: t(\"Chilli\") },\r\n    { label: t(\" Colocasia Roots\") },\r\n    { label: t(\"Cucumber Madras\") },\r\n    { label: t(\"Kohlrabi\") },\r\n    { label: t(\"Onion White-Pandhara Kanda\") },\r\n    { label: t(\"Pointed Gourd\") },\r\n    { label: t(\"Pumpkin\") },\r\n    { label: t(\"Raw Jackfruit\") },\r\n    { label: t(\"Raw Papaya\") },\r\n    { label: t(\"Sambhar Kanda\") },\r\n    { label: t(\"Snake Gourd\") },\r\n    { label: t(\"Spiny Gourd\") },\r\n    { label: t(\"Sweet Potato\") },\r\n    { label: t(\"Yam\") },\r\n    // Exotic\r\n    { label: t(\"Asparagus\") },\r\n    { label: t(\"Avocado\") },\r\n    { label: t(\"Baby Corn\") },\r\n    { label: t(\"Baby Potato\") },\r\n    { label: t(\"Basil\") },\r\n    { label: t(\"Broccoli\") },\r\n    { label: t(\"Celery\") },\r\n    { label: t(\"Cherry Tomato\") },\r\n    { label: t(\"chinese Cabbage\") },\r\n    { label: t(\"Coccinia\") },\r\n    { label: t(\"Green Zucchini\") },\r\n    { label: t(\"Iceberg Lettuce\") },\r\n    { label: t(\"Parsley\") },\r\n    { label: t(\"Red Cabbage\") },\r\n    { label: t(\"Red Capsicum\") },\r\n    { label: t(\"Romaine Lettuce\") },\r\n    { label: t(\"Yellow Capsicum\") },\r\n    { label: t(\"Yellow Zucchini\") },\r\n    { label: t(\"Mushroom\") },\r\n    { label: t(\"Sweet Corn\") },\r\n    { label: t(\"Sweet Corn Grains\") },\r\n    // Special stall\r\n    { label: t(\"Cabbage\") },\r\n    { label: t(\"Potato (Agra)\") },\r\n    { label: t(\"Potato (Indore)\") },\r\n    { label: t(\"Potato (Talegav)\") },\r\n    // Fruit Vegetables\r\n    { label: t(\"Beans Double\") },\r\n    { label: t(\"Bitter Gourd\") },\r\n    { label: t(\"Brinjal Big\") },\r\n    { label: t(\"Brinjal Green\") },\r\n    { label: t(\"Brinjal Long Green\") },\r\n    { label: t(\"Brinjal Purple\") },\r\n    { label: t(\"Carrot\") },\r\n    { label: t(\"Cauliflower\") },\r\n    { label: t(\"Chavali Beans\") },\r\n    { label: t(\"Chickpeas - Chana sprouts\") },\r\n    { label: t(\"chilli - Bhavgagari Mirchi\") },\r\n    { label: t(\"Chilli Green\") },\r\n    { label: t(\"chilli Simple\") },\r\n    { label: t(\"Cluster Beans\") },\r\n    { label: t(\"Coconut\") },\r\n    { label: t(\"Colocasia Roots\") },\r\n    { label: t(\"Coriander\") },\r\n    { label: t(\"Cucumber\") },\r\n    { label: t(\"Cucumder Madras\") },\r\n    { label: t(\"Cucumber Madras- Sambar Kakadi\") },\r\n    { label: t(\"Cucumber Polyhouse- English Kakadi\") },\r\n    { label: t(\"Drum Sticks\") },\r\n    { label: t(\"Field Beans\") },\r\n    { label: t(\"Fresh Peeled Green Peas\") },\r\n    { label: t(\"Garlic\") },\r\n    { label: t(\"Ginger\") },\r\n    { label: t(\"Green Capsicum\") },\r\n    { label: t(\"Green Mango\") },\r\n    { label: t(\"Green Peas\") },\r\n    { label: t(\"Groundnut Pods\") },\r\n    { label: t(\"Tamarind\") },\r\n    { label: t(\"Lady Finger\") },\r\n    { label: t(\"Lemon Grass\") },\r\n    { label: t(\"Mint\") },\r\n    { label: t(\"Onion\") },\r\n    { label: t(\"Onion Sambhar\") },\r\n    { label: t(\"Lima Beans\") },\r\n    { label: t(\"Peeled Garlic\") },\r\n    { label: t(\"Potato\") },\r\n    { label: t(\"Radish\") },\r\n    { label: t(\"Ridgegourd\") },\r\n    { label: t(\"Sponge Gourd\") },\r\n    { label: t(\"Tomato\") },\r\n    { label: t(\"Wal\") },\r\n    { label: t(\"Wal Broad\") },\r\n    { label: t(\"Wal surati\") },\r\n    { label: t(\"Water Chestnuts\") },\r\n    // Fruit Export\r\n    { label: t(\"Apple Fuji\") },\r\n    { label: t(\"Apple Green\") },\r\n    { label: t(\"Apple Kinnaur\") },\r\n    { label: t(\"Apple Red Delicious\") },\r\n    { label: t(\"Apple Shimla Big\") },\r\n    { label: t(\"Kiwi\") },\r\n    { label: t(\"Litchi\") },\r\n    { label: t(\"Strawberry\") },\r\n    // Fruit Summer\r\n    { label: t(\"Grapes Black\") },\r\n    { label: t(\"Grapes Green\") },\r\n    { label: t(\"Jambhul\") },\r\n    { label: t(\"Mango Badami (For Juice)\") },\r\n    { label: t(\"Mango Devgad Hapus\") },\r\n    { label: t(\"Mango Keshar\") },\r\n    { label: t(\"Mango Lalbag\") },\r\n    { label: t(\"Mango Payri\") },\r\n    { label: t(\"Mango Ratnagiri Hapus\") },\r\n    { label: t(\"Mango Totapuri\") },\r\n    { label: t(\"Muskmelon\") },\r\n    { label: t(\"Watermelon Kiran\") },\r\n    { label: t(\"Watermelon Regular\") },\r\n    // Fruit\r\n    { label: t(\"Amla\") },\r\n    { label: t(\"Apple Gourd\") },\r\n    { label: t(\"Ashgourd\") },\r\n    { label: t(\"Banana\") },\r\n    { label: t(\"Custard-apple\") },\r\n    { label: t(\"Elaichi Banana\") },\r\n    { label: t(\"Figs\") },\r\n    { label: t(\"Guava\") },\r\n    { label: t(\"Jackfruit Peeled\") },\r\n    { label: t(\"Jujube - Ber\") },\r\n    { label: t(\"Orange Small\") },\r\n    { label: t(\"Orange Kinnow\") },\r\n    { label: t(\"Papaya\") },\r\n    { label: t(\"Pear Imported\") },\r\n    { label: t(\"Pomogranate\") },\r\n    { label: t(\"Raw Banana\") },\r\n    { label: t(\"Sapodilla\") },\r\n    { label: t(\"Sugarcane\") },\r\n    { label: t(\"Sweet Lime\") },\r\n    { label: t(\"Tender\") },\r\n\r\n\r\n\r\n\r\n  ];\r\n  \r\n  const [Data, setData] = useState({\r\n    purchase_quantity: undefined,\r\n    purchase_rate: undefined,\r\n    market: \"\",\r\n  });\r\n  const [commodity, setcommodity] = useState(\"\");\r\n\r\n  const handleData = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      Data.purchase_quantity &&\r\n      Data.purchase_rate &&\r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postInward(\r\n        commodity,\r\n        Data.purchase_quantity,\r\n        Data.purchase_rate,\r\n        Data.market,\r\n        time\r\n      ).then(\r\n        () => {\r\n          toast.success(t(\"inward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",     \r\n          });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 2000);\r\n        },\r\n        (error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            market: \"\",\r\n            purchase_rate: 0,\r\n            purchase_quantity: 0,\r\n          });\r\n          setcommodity(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"data_container\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <Container className=\"main\" component=\"main\" maxWidth=\"sm\" sx={{width: '100%'}}>\r\n          <CssBaseline />\r\n          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n            {t(\"back\")}\r\n          </Link>\r\n          <Box\r\n            className=\"box2\"\r\n            sx={{\r\n              // marginTop: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"20px 0px 10px 0px\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"h4\" fontFamily= 'Arturo' sx={{marginBottom:'1.5rem'}}>\r\n              {t(\"farmer_inward_data\")} !!\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ padding: 0, marginTop: '-2.5rem', width: '100%'}}>\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\", height: \"70px\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"select_market\")}\r\n                    </Typography>\r\n                    <Select\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield select-market\"\r\n                      labelId=\"demo-simple-select-autowidth-label\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={Data.market}\r\n                      onChange={handleData}\r\n                      // label=\"market\"\r\n                      name=\"market\"\r\n                      required\r\n                      color=\"success\"\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {e.location}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"select_one_commodity\")}\r\n                    </Typography>\r\n                    <Autocomplete\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield\"\r\n                      isOptionEqualToValue={(option, value) =>\r\n                        option.value === value.value\r\n                      }\r\n                      disablePortal\r\n                      id=\"combo-box-demo\"\r\n                      onChange={(event, value) => setcommodity(value?.label)}\r\n                      options={options}\r\n                      sx={{ width: \"100%\" }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          color=\"success\"\r\n                          className=\"textfield\"\r\n                          name=\"commodity\"\r\n                          style={{ height: '100%' }} \r\n                          {...params}\r\n                        // label=\"Commodities\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"80%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" style={{ marginTop: \"1rem\" }} fontFamily= 'Arturo'>\r\n                      {t(\"purchase_quantity\")} \"kg\"<sup>*</sup>\r\n\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"purchase_quantity\"\r\n                      value={Data.purchase_quantity}\r\n                      onChange={handleData}\r\n                      // label=\"Purchase Quantity\"\r\n                      type=\"number\"\r\n                      id=\"purchase quantity\"\r\n                      autoComplete=\"new-purchase quantity\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\" fontFamily= 'Arturo'>\r\n                      {t(\"purchase_rate\")} (Rs/kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"purchase_rate\"\r\n                      value={Data.purchase_rate}\r\n                      onChange={handleData}\r\n                      // label=\"Purchase Rate\"\r\n                      type=\"number\"\r\n                      id=\"purchase rate\"\r\n                      autoComplete=\"new-purchase rate\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid>\r\n                <Button\r\n                  className=\"btn\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1, marginLeft:{xs:\"115px\", lg:\"180px\"}, marginTop:\"1rem\"}}\r\n                  fontFamily= 'Arturo'\r\n                >\r\n                  {t(\"add\")}\r\n                </Button>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"70%\",\r\n  height:\"80%\",\r\n  overflow:\"auto\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function ConfirmDelete({Delete , id, t}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div style={{textAlign:\"center\",backgroundColor:\"white\",marginTop:\"10px\"}}>\r\n      <Button onClick={handleOpen}>Cancel Booking</Button>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n         <Box sx={style}>\r\n          <button className=\"closebtn\" onClick={handleClose} style={{ marginLeft: '-250px', marginTop: '-15px' }}>\r\n            &times;\r\n          </button>\r\n          <div className='terms_and_conditions'>\r\n            <h1>{t(\"Terms_of_service\")}</h1>\r\n            <br/>\r\n            <h2>{t(\"wingrow_farmers_market\")}</h2>\r\n            <h3 class=\"city\">{t(\"role_of_wingrow_agritech\")}</h3>\r\n            <p><li>{t(\"role_para_1\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_2\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_3\")}</li>\r\n            <br/>\r\n            <li>{t(\"role_para_4\")}</li>\r\n            <br/>\r\n            </p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"personal_information\")}</h3>\r\n            <br/>\r\n            <p>{t(\"personal_info_para_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"account_and_registration_obligations\")}</h3>\r\n            <br/>\r\n            <p>{t(\"acc_and_registration_obligations_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"LICENSE_&_SITE_ACCESS\")}</h3>\r\n            <br/>\r\n            <p>{t(\"LICENSE_&_SITE_ACCESS_PARA\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"pricing\")} </h3>\r\n            <br/>\r\n            <p>{t(\"pricing_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"return_and_refunds\")}</h3>\r\n            <br/>\r\n            <p>{t(\"return_and_refunds_para\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"cancellation_of_booking\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"cancellation_booking_para_1\")}</li>\r\n            <br/>\r\n              <li>{t(\"cancellation_booking_para_2\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"PAYMENT_FOR_BOOKING_AND_ANY_ADDITIONAL_CHARGES\")}</h3>\r\n            <br/>\r\n            <h4>{t(\"FULL_PAYMENT\")}</h4>\r\n            <br/>\r\n            <p>{t(\"Full_payment_para\")}</p>\r\n            <br/>\r\n            <h4>{t(\"CANCELLATION_CHARGES\")}</h4>\r\n            <br/>\r\n            <p></p>\r\n            <br/>\r\n            <p>\r\n              <table style={{width:\"100%\"}}>\r\n                <tr>\r\n                  <th>{t(\"cancellation_charges_head_1\")}</th>\r\n                  <th>{t(\"cancellation_charges_head_2\")}</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{t(\"cancellation_data_1\")}</td>\r\n                  <td>{t(\"cancellation_data_2\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_3\")}</td>\r\n                    <td>{t(\"cancellation_data_4\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_5\")}</td>\r\n                    <td>{t(\"cancellation_data_6\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_6\")}</td>\r\n                    <td>{t(\"cancellation_data_7\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{t(\"cancellation_data_9\")}</td>\r\n                    <td>{t(\"cancellation_data_10\")}</td>\r\n                </tr>\r\n              </table>\r\n              </p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"YOU_AGREE_AND_CONFIRM\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"confirm_para_1\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_2\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_3\")}</li>\r\n            <br/>\r\n              <li>{t(\"confirm_para_4\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"not_use_for_these\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"not_use_for_these_1\")}</li>\r\n              <li>{t(\"not_use_for_these_2\")}</li>\r\n              <li>{t(\"not_use_for_these_3\")}</li>\r\n              <li>{t(\"not_use_for_these_4\")}</li>\r\n              <li>{t(\"not_use_for_these_5\")}</li>\r\n              <li>{t(\"not_use_for_these_6\")}</li>\r\n              <li>{t(\"not_use_for_these_7\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"modification_of_t_and_c\")}</h3>\r\n            <br/>\r\n            <p>{t(\"modification_t_and_c_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"COPYRIGHT_&_TRADEMARK\")}</h3>\r\n            <br/>\r\n            <p>{t(\"copyright_and_trademark_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"OBJECTIONABLE_MATERIAL\")}</h3>\r\n            <br/>\r\n            <p>{t(\"objectionable_material_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"INDEMNITY\")} </h3>\r\n            <br/>\r\n            <p>{t(\"indemnity_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"TERMINATION\")}</h3>\r\n            <br/>\r\n            <p>{t(\"termination_1\")}</p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"RESCHEDULING_OF_TICKET\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"rescheduling_ticket_1\")}</li>\r\n              <li>{t(\"rescheduling_ticket_2\")}</li>\r\n              <li>{t(\"rescheduling_ticket_3\")}</li>\r\n              <li>{t(\"rescheduling_ticket_4\")}</li>\r\n              <li>{t(\"rescheduling_ticket_5\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"responsibilities\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"responsibilities_1\")}</li>\r\n              <li>{t(\"responsibilities_2\")}</li>\r\n              <li>{t(\"responsibilities_3\")}</li>\r\n              <li>{t(\"responsibilities_4\")}</li>\r\n              <li>{t(\"responsibilities_5\")}</li></p>\r\n            <br/>\r\n            <h3 class=\"city\">{t(\"MISCELLANEOUS\")}</h3>\r\n            <br/>\r\n            <p><li>{t(\"MISCELLANEOUS_1\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_2\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_3\")}</li>\r\n              <li>{t(\"MISCELLANEOUS_4\")}</li></p>\r\n            <br/>\r\n            <Button id={id} onClick={(e)=>{Delete(e); handleClose()}}>Confirm Delete?</Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React , {useState , useEffect} from 'react'\r\nimport AuthService from '../../services/auth.service'\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/MyBookings.css'\r\nimport Spinner from '../../components/Spinner';\r\nimport dayjs from 'dayjs'\r\nimport ConfirmDelete from '../../components/ConfirmDelete';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MyBookings = ({t}) => {\r\n    const user = AuthService.getCurrentUser()\r\n    const [MyStalls, setMyStalls] = useState();\r\n    var num = 0;\r\n    const { REACT_APP_API_URL } = process.env;\r\n\r\n    useEffect(() => {\r\n        FarmerService.getBookedStalls().then((res) => {\r\n            const { data } = res;\r\n            const filteredData = data.filter(e => e.bookedBy === user.id);\r\n            const sortedData = filteredData.sort((a, b) => new Date(b.bookedAt) - new Date(a.bookedAt));\r\n            setMyStalls(sortedData);\r\n        })\r\n    }, [user])\r\n\r\n\r\n    \r\n\r\n    const handleDelete = (e) => {\r\n       const DeleteId = e.target.id;\r\n       const cancelledStall = MyStalls.filter(e => e._id === DeleteId)\r\n       const [data] = cancelledStall;\r\n       data.cancelledAt = dayjs(Date.now()).format(\"YYYY-MM-DD\");\r\n        data.bookedBy = user.id\r\n        data.firstname = user.firstname\r\n        data.lastname = user.lastname\r\n        data.phone = user.phone\r\n        console.log(\"data - \",data)\r\n        axios.post(REACT_APP_API_URL+\"cancelledstalls\" , data , {headers:authHeader()})\r\n        axios.delete(REACT_APP_API_URL+\"bookedstalls\" , { headers: authHeader()  , data:{id: DeleteId}})\r\n        .then(res =>  {\r\n            if(res)\r\n            {\r\n                const resp = res.data;\r\n                const filData = MyStalls.filter(e => e._id !== resp._id)\r\n                // axios.post(\"https://wingrowmarket.onrender.com/cancelledstalls\" , data , {headers:authHeader()})\r\n                setMyStalls(filData);\r\n                toast.success('Cancelled successfully!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    });\r\n            }\r\n            else{\r\n                toast.warn('Failed to cancel booking!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    });\r\n            }\r\n       })\r\n    }\r\n\r\n  return (\r\n    <>\r\n    \r\n    {MyStalls?<div className='bookings_container'>\r\n              {num = MyStalls.length}\r\n              {console.log(num)}\r\n    <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        />\r\n        \r\n        <div className='booking_content'>\r\n            <div className='booking_cards'> \r\n                      <div className='backbtndiv'>\r\n                          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginLeft: '-1100px' }}>\r\n                              {t(\"back\")}\r\n                          </Link>\r\n                          <h1 className='booking_header'>{t(\"stall_bookings\")}</h1>\r\n                          <p className='booking_para'>{t(\"list_of_booked_stalls\")}</p>\r\n                      </div>  \r\n               \r\n            </div>\r\n\r\n            <div className='card_booking'>\r\n                {\r\n                          \r\n                    MyStalls.map((e,i)=>{\r\n                        const bookingExpired = e.bookedAt < dayjs(Date.now()).format(\"YYYY-MM-DD\") ? true : false;\r\n                        return(\r\n                            <div key={i} className='cards_section'>\r\n                                <div className='card'>\r\n                                    <div className='card_content'>\r\n                                        {bookingExpired && <h2 style={{color:\"red\",textAlign:\"center\"}}>Booking Expired</h2>}\r\n                                        <br/>\r\n                                        <h2 className='card_header'><span>Stall No : {num--}</span>\r\n                                        </h2>\r\n                                        <p className='card_para'>{e.location}</p>\r\n                                        <p className='card_para'>{e.address}</p>\r\n                                        <p className='card_para'>{e.stallName}</p>\r\n                                        <p className='card_para'>{e.bookedAt}</p>\r\n                                        <span>\r\n                                                {bookingExpired?\r\n                                                <div style={{cursor:\"not-allowed\",padding:\"4px\",backgroundColor:\"gray\",border:\"none\",marginTop:\"10px\",textAlign:\"center\"}}>Booking Expired</div>\r\n                                                :\r\n                                                <span><ConfirmDelete t={t} Delete={handleDelete} id={e._id}/></span>\r\n                                        }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    </div>:<Spinner/>}\r\n \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyBookings","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"../../styles/Farmer.css\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport dayjs from \"dayjs\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function OutwardData({t}) {\r\n\r\n  const locations = [\r\n    { location: t(\"hadapsar_location\") },\r\n    { location: t(\"karvenagar_location\") },\r\n    { location: t(\"kharadi_iT_park_location\") },\r\n    { location: t(\"wanwadi_location\") },\r\n    { location: t(\"magarpatta_location\") },\r\n    { location: t(\"amanora_city_location\") },\r\n    { location: t(\"bramhasun_city_location\") },\r\n  ];\r\n\r\n  const options = [\r\n    // Leaves\r\n    { label: t(\"Amaranthus\") },\r\n    { label: t(\"Beet Root\") },\r\n    { label: t(\"Chukka- sorrel Leaves\") },\r\n    { label: t(\"Colocasia Leaves\") },\r\n    { label: t(\"Curry Leaves\") },\r\n    { label: t(\"Dill\") },\r\n    { label: t(\"Fenugreek Leaves\") },\r\n    { label: t(\"Green Amaranth\") },\r\n    { label: t(\"Spinach\") },\r\n    { label: t(\"Spring Onion\") },\r\n    { label: t(\"Sufflower\") },\r\n    // Wild-Antic\r\n    { label: t(\"Chilli\") },\r\n    { label: t(\" Colocasia Roots\") },\r\n    { label: t(\"Cucumber Madras\") },\r\n    { label: t(\"Kohlrabi\") },\r\n    { label: t(\"Onion White-Pandhara Kanda\") },\r\n    { label: t(\"Pointed Gourd\") },\r\n    { label: t(\"Pumpkin\") },\r\n    { label: t(\"Raw Jackfruit\") },\r\n    { label: t(\"Raw Papaya\") },\r\n    { label: t(\"Sambhar Kanda\") },\r\n    { label: t(\"Snake Gourd\") },\r\n    { label: t(\"Spiny Gourd\") },\r\n    { label: t(\"Sweet Potato\") },\r\n    { label: t(\"Yam\") },\r\n    // Exotic\r\n    { label: t(\"Asparagus\") },\r\n    { label: t(\"Avocado\") },\r\n    { label: t(\"Baby Corn\") },\r\n    { label: t(\"Baby Potato\") },\r\n    { label: t(\"Basil\") },\r\n    { label: t(\"Broccoli\") },\r\n    { label: t(\"Celery\") },\r\n    { label: t(\"Cherry Tomato\") },\r\n    { label: t(\"chinese Cabbage\") },\r\n    { label: t(\"Coccinia\") },\r\n    { label: t(\"Green Zucchini\") },\r\n    { label: t(\"Iceberg Lettuce\") },\r\n    { label: t(\"Parsley\") },\r\n    { label: t(\"Red Cabbage\") },\r\n    { label: t(\"Red Capsicum\") },\r\n    { label: t(\"Romaine Lettuce\") },\r\n    { label: t(\"Yellow Capsicum\") },\r\n    { label: t(\"Yellow Zucchini\") },\r\n    { label: t(\"Mushroom\") },\r\n    { label: t(\"Sweet Corn\") },\r\n    { label: t(\"Sweet Corn Grains\") },\r\n    // Special stall\r\n    { label: t(\"Cabbage\") },\r\n    { label: t(\"Potato (Agra)\") },\r\n    { label: t(\"Potato (Indore)\") },\r\n    { label: t(\"Potato (Talegav)\") },\r\n    // Fruit Vegetables\r\n    { label: t(\"Beans Double\") },\r\n    { label: t(\"Bitter Gourd\") },\r\n    { label: t(\"Brinjal Big\") },\r\n    { label: t(\"Brinjal Green\") },\r\n    { label: t(\"Brinjal Long Green\") },\r\n    { label: t(\"Brinjal Purple\") },\r\n    { label: t(\"Carrot\") },\r\n    { label: t(\"Cauliflower\") },\r\n    { label: t(\"Chavali Beans\") },\r\n    { label: t(\"Chickpeas - Chana sprouts\") },\r\n    { label: t(\"chilli - Bhavgagari Mirchi\") },\r\n    { label: t(\"Chilli Green\") },\r\n    { label: t(\"chilli Simple\") },\r\n    { label: t(\"Cluster Beans\") },\r\n    { label: t(\"Coconut\") },\r\n    { label: t(\"Colocasia Roots\") },\r\n    { label: t(\"Coriander\") },\r\n    { label: t(\"Cucumber\") },\r\n    { label: t(\"Cucumder Madras\") },\r\n    { label: t(\"Cucumber Madras- Sambar Kakadi\") },\r\n    { label: t(\"Cucumber Polyhouse- English Kakadi\") },\r\n    { label: t(\"Drum Sticks\") },\r\n    { label: t(\"Field Beans\") },\r\n    { label: t(\"Fresh Peeled Green Peas\") },\r\n    { label: t(\"Garlic\") },\r\n    { label: t(\"Ginger\") },\r\n    { label: t(\"Green Capsicum\") },\r\n    { label: t(\"Green Mango\") },\r\n    { label: t(\"Green Peas\") },\r\n    { label: t(\"Groundnut Pods\") },\r\n    { label: t(\"Tamarind\") },\r\n    { label: t(\"Lady Finger\") },\r\n    { label: t(\"Lemon Grass\") },\r\n    { label: t(\"Mint\") },\r\n    { label: t(\"Onion\") },\r\n    { label: t(\"Onion Sambhar\") },\r\n    { label: t(\"Lima Beans\") },\r\n    { label: t(\"Peeled Garlic\") },\r\n    { label: t(\"Potato\") },\r\n    { label: t(\"Radish\") },\r\n    { label: t(\"Ridgegourd\") },\r\n    { label: t(\"Sponge Gourd\") },\r\n    { label: t(\"Tomato\") },\r\n    { label: t(\"Wal\") },\r\n    { label: t(\"Wal Broad\") },\r\n    { label: t(\"Wal surati\") },\r\n    { label: t(\"Water Chestnuts\") },\r\n    // Fruit Export\r\n    { label: t(\"Apple Fuji\") },\r\n    { label: t(\"Apple Green\") },\r\n    { label: t(\"Apple Kinnaur\") },\r\n    { label: t(\"Apple Red Delicious\") },\r\n    { label: t(\"Apple Shimla Big\") },\r\n    { label: t(\"Kiwi\") },\r\n    { label: t(\"Litchi\") },\r\n    { label: t(\"Strawberry\") },\r\n    // Fruit Summer\r\n    { label: t(\"Grapes Black\") },\r\n    { label: t(\"Grapes Green\") },\r\n    { label: t(\"Jambhul\") },\r\n    { label: t(\"Mango Badami (For Juice)\") },\r\n    { label: t(\"Mango Devgad Hapus\") },\r\n    { label: t(\"Mango Keshar\") },\r\n    { label: t(\"Mango Lalbag\") },\r\n    { label: t(\"Mango Payri\") },\r\n    { label: t(\"Mango Ratnagiri Hapus\") },\r\n    { label: t(\"Mango Totapuri\") },\r\n    { label: t(\"Muskmelon\") },\r\n    { label: t(\"Watermelon Kiran\") },\r\n    { label: t(\"Watermelon Regular\") },\r\n    // Fruit\r\n    { label: t(\"Amla\") },\r\n    { label: t(\"Apple Gourd\") },\r\n    { label: t(\"Ashgourd\") },\r\n    { label: t(\"Banana\") },\r\n    { label: t(\"Custard-apple\") },\r\n    { label: t(\"Elaichi Banana\") },\r\n    { label: t(\"Figs\") },\r\n    { label: t(\"Guava\") },\r\n    { label: t(\"Jackfruit Peeled\") },\r\n    { label: t(\"Jujube - Ber\") },\r\n    { label: t(\"Orange Small\") },\r\n    { label: t(\"Orange Kinnow\") },\r\n    { label: t(\"Papaya\") },\r\n    { label: t(\"Pear Imported\") },\r\n    { label: t(\"Pomogranate\") },\r\n    { label: t(\"Raw Banana\") },\r\n    { label: t(\"Sapodilla\") },\r\n    { label: t(\"Sugarcane\") },\r\n    { label: t(\"Sweet Lime\") },\r\n    { label: t(\"Tender\") },\r\n\r\n  ];\r\n\r\n\r\n  const [Data, setData] = useState({\r\n    sales_quantity: undefined,\r\n    sales_rate: undefined,\r\n    market: \"\",\r\n  });\r\n\r\n  const [commodity, setcommodity] = useState(\"\");\r\n\r\n  const handleData = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const time = dayjs(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n    if (\r\n      commodity &&\r\n      Data.sales_quantity &&\r\n      Data.sales_rate &&\r\n      Data.market &&\r\n      time\r\n    ) {\r\n      FarmerService.postOutward(\r\n        commodity,\r\n        Data.sales_quantity,\r\n        Data.sales_rate,\r\n        Data.market,\r\n        time\r\n      ).then(\r\n        () => {\r\n          toast.success(t(\"outward_data_added_successfully\"), {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 2000);\r\n        },\r\n        (error) => {\r\n          toast.warn(t(\"failed_to_add_data\"), {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            market: \"\",\r\n            sales_rate: 0,\r\n            sales_quantity: 0,\r\n          });\r\n          setcommodity(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(t(\"invalid_data\"), {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data_container\">\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <Container className=\"main\" component=\"main\" maxWidth=\"sm\">\r\n          <CssBaseline />\r\n          <Link className=\"backbtn green\" to=\"/farmers\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n            {t(\"back\")}\r\n          </Link>\r\n          <Box\r\n            className=\"box2\"\r\n            sx={{\r\n              // marginTop: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"20px 0px 10px 0px\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n\r\n\r\n            <Typography component=\"h1\" variant=\"h4\" className=\"outward-heading\" sx={{marginBottom:'1.5rem'}}>\r\n                {t(\"farmer_outward_data\")}!!\r\n\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ padding: 0, marginTop:'-2.5rem', width:'100%'}}>\r\n              <Grid container spacing={0} >\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\", height: \"70px\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"select_market\")}\r\n                    </Typography>\r\n                    <Select\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield select-market\"\r\n                      labelId=\"demo-simple-select-autowidth-label\"\r\n                      id=\"demo-simple-select-autowidth\"\r\n                      value={Data.market}\r\n                      onChange={handleData}\r\n                      // label=\"market\"\r\n                      name=\"market\"\r\n                      required\r\n                      color=\"success\"\r\n                    >\r\n                      {locations.map((e, i) => {\r\n                        return (\r\n                          <MenuItem key={i} value={e.location}>\r\n                            {e.location}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"select_one_commodity\")}\r\n                    </Typography>\r\n                    <Autocomplete\r\n                      style={{\r\n                        height: '40px', // set your desired height\r\n                      }}\r\n                      className=\"textfield\"\r\n                      isOptionEqualToValue={(option, value) =>\r\n                        option.value === value.value\r\n                      }\r\n                      disablePortal\r\n                      id=\"combo-box-demo\"\r\n                      onChange={(event, value) => setcommodity(value?.label)}\r\n                      options={options}\r\n                      sx={{ width: \"100%\" }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n\r\n                          color=\"success\"\r\n                          className=\"textfield\"\r\n                          name=\"commodity\"\r\n                          style={{ height: '100%' }}\r\n                          {...params}\r\n                        // label=\"commodities\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\"}}>\r\n                    <Typography className=\"stall-booking-lable\" style={{ marginTop: \"1rem\" }}>\r\n                      {t(\"sales_quantity\")} (kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"sales_quantity\"\r\n                      value={Data.sales_quantity}\r\n                      onChange={handleData}\r\n                      // label=\"Sales Quantity\"\r\n                      type=\"number\"\r\n                      id=\"sales quantity\"\r\n                      autoComplete=\"new-sales quantity\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"select_market\">\r\n                  <FormControl sx={{ width: \"60%\" }}>\r\n                    <Typography className=\"stall-booking-lable\">\r\n                      {t(\"sales_rate\")} (Rs/kg)<sup>*</sup>\r\n                    </Typography>\r\n                    <TextField\r\n                      InputProps={{\r\n                        style: {\r\n                          height: '40px', // set your desired height\r\n                        },\r\n                      }}\r\n                      className=\"textfield\"\r\n                      required\r\n                      fullWidth\r\n                      color=\"success\"\r\n                      name=\"sales_rate\"\r\n                      value={Data.sales_rate}\r\n                      onChange={handleData}\r\n                      // label=\"Sales Rate\"\r\n                      type=\"number\"\r\n                      id=\"sales rate\"\r\n                      autoComplete=\"new-sales rate\"\r\n                    \r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid>\r\n                <Button\r\n                  className=\"btn\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ m: 1 , marginLeft:{xs:\"115px\", lg:\"180px\"}, marginTop:'1rem'}}\r\n                >\r\n                  {t(\"add\")}\r\n                </Button>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/Farmer.css'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst StallsPlaces = ({t}) => {\r\n  const [stalls, setStalls] = useState()\r\n  const set = new Set();\r\n  const places = [];\r\n  const navigate = useNavigate()\r\n\r\n\r\n  if (stalls) {\r\n    for (let item of stalls) {\r\n      set.add(item.location)\r\n    }\r\n  }\r\n\r\n  for (let key of set) places.push(key)\r\n\r\n  useEffect(() => {\r\n    FarmerService.getMyStalls()\r\n      .then(res => { setStalls(res.data); console.log(res.data) })\r\n\r\n  }, [])\r\n\r\n  const handleClick = (ev) => {\r\n    const Id = ev.target.id\r\n    navigate(`stalls/${Id}`)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {stalls && <div className='places_market_container'>\r\n        <div className='backbtnflex'>\r\n          <Link style={{ marginTop: '10px' }} className=\"backbtn green flex\" to=\"/farmers\" >\r\n            {t(\"back\")}\r\n          </Link>\r\n          <h2 className='main_header_places'>{t(\"select_market_from_below\")}</h2>\r\n        </div>\r\n\r\n        <div className='places_wrapper'>\r\n          {\r\n            places && places.map((e, i) => {\r\n              return (\r\n                <div onClick={handleClick} key={e} id={e} className={`places_market_component${i % 4}`}>\r\n                  <img id={e} alt='logo' className='image_1' src=\"../images/4.webp\" />\r\n                  <div id={e}>\r\n                  {console.log(e)}\r\n                    <span id={e} className='places_headers'>{t(\"markets_in\")} <br />{t(e)}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n\r\n          }\r\n        </div>\r\n      </div>}\r\n      {!stalls && <Spinner />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StallsPlaces","import \"../../styles/Test.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Stall from \"./Stall\";\r\nimport UserService from '../../services/user.service'\r\n\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport dayjs from \"dayjs\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport SelectSeatModal from \"../../components/SelectSeatModal\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n// Added\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { InputLabel } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { format } from 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst userCurr = AuthService.getCurrentUser();\r\n\r\nfunction Test({ setbookingDetails, setValue, t }) {\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n  const [data, setdata] = useState();\r\n  const[MyStalls,setMyStalls] = useState([]);\r\n  const [UpdatedData, setUpdatedData] = useState();\r\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\r\n  const [bookedStalls, setBookedStalls] = useState([]);\r\n  const [Loading, setLoading] = useState();\r\n  const { Id } = useParams();\r\n  const [value, setvalue] = useState(0);\r\n  const[status,setStatus] = useState(false)\r\n  const [alreadyBooked, setAlreadyBooked] = useState();\r\n  const [alreadyBookedLocataion, setAlreadyBookedLocation] = useState(0);\r\n  const [open, setOpen] = useState();\r\n  const [sub,setSub] = useState([]);\r\n  const[maxDate,setMaxDate] = useState();\r\n  const[stall,setStall] = useState(8);\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n  const [totalStall, setTotalStalls] = useState(0);\r\n  const [available, setAvailable] = useState(0);\r\n  const today = new Date();\r\n  const[subId,setSubId] = useState()\r\n  const todayFormatted = today.toISOString().slice(0, 10);\r\n  const [date, setdate] = useState(null);\r\n  const [number,setNumber] = useState(10)\r\n  const [message, setMessage] = useState('');\r\n  const [message2, setMessage2] = useState('');\r\n  const [message3, setMessage3] = useState('Please select stalls');\r\n  const [selected, setSelected] = useState([]);\r\n  const [weekId, setWeekId] = useState(0)\r\n  const arr = { 'Hadapsar': 3, 'Kharadi': 4, 'Karve Nagar': 2, 'Bramhasun City': 5, 'Wagholi': 5, 'Wanawadi': 6, 'Magarpatta': 7, 'Amanora City': 7 }\r\n  const weekdays = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\r\n  const API_URL = \"https://wingrowmarket.com:8443/\";\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(max-width: 767px)');\r\n    setIsMobile(mediaQuery.matches);\r\n    setWeekId(arr[Id])\r\n    // if(date.getDay() !== weekId){\r\n    //   setMessage(\"CHANGE DATE\")\r\n    // }\r\n    // console.log(\"weeks number\",arr[Id])\r\n    const listener = () => setIsMobile(mediaQuery.matches);\r\n    mediaQuery.addListener(listener);\r\n\r\n    return () => {\r\n      mediaQuery.removeListener(listener)\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  function disableDays(d) {\r\n    const today = new Date();\r\n    const selectedDate = new Date(d);\r\n\r\n    // Disable all days except the current day and the days that have the same day of the week as the selected date\r\n    return !(selectedDate.getDay() === weekId );\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(\"hello inside prebook\")\r\n  //   FarmerService.getBookedStalls().then(async(res)=>{\r\n  //       const {data} = res;\r\n  //       console.log(\"the data is- \",data)\r\n  //       //check for date of the booked stall date greater than equal to subscribed\r\n  //       if(sub.length !== 0){\r\n  //         const currentDate = new Date(sub[sub.length-1].date)\r\n  //         console.log(\"hello---  \",sub[sub.length-1].date)\r\n  //       setMyStalls(data.filter(e=> { \r\n        \r\n  //     if(e.bookedBy === userCurr.id && sub[sub.length-1].date <= e.bookedAt){\r\n  //       return true\r\n  //     } }))\r\n  //       console.log(\"the booked stalls are -- \", MyStalls)\r\n  //       console.log(sub)\r\n  //       var r = MyStalls.length\r\n  //       console.log(stall,r)\r\n  //       if(stall <=r ){\r\n  //         //subscribe again\r\n  //         const id = sub[sub.length-1]._id\r\n  //         if(status == \"active\"){\r\n  //           setStatus(false)\r\n  //           setStalls(0)\r\n  //           const s = \"expired\"\r\n            \r\n  //         await axios.put(API_URL+\"changestatus\",{id,s})\r\n  //         .then((res)=>{\r\n  //           window.location.reload(false);\r\n  \r\n  //           console.log(\"passed\")\r\n  \r\n  //         })\r\n  //         .catch((error)=>{\r\n  //           console.log(\"failed\")\r\n  //         })\r\n  //       }\r\n  //         console.log(\"sub is-\",sub[sub.length-1]._id)\r\n          \r\n          \r\n  //       }else{\r\n\r\n  //         setStalls(stall-r)\r\n  //         console.log(\"stall\",stall)\r\n  //       }\r\n  //   }\r\n  //   })\r\n  // }, [MyStalls,sub,stall])\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n\r\n    FarmerService.getMyStalls().then((response) => {\r\n      setLoading(false);\r\n      setdata(response.data);\r\n    });\r\n    if (date !== null) {\r\n      FarmerService.getBookedStalls().then((response) => {\r\n\r\n        const res = response.data && response.data.filter((e) => e.location === `${Id}` && e.bookedAt === date);\r\n        setAlreadyBooked(response.data);\r\n        setAlreadyBookedLocation(res.length);\r\n        console.log('alreadyBooked:', res)\r\n      });\r\n\r\n      handleOpen(true);\r\n    }\r\n    UserService.getSub(userCurr.id).then((res)=>{\r\n      const {data} = res\r\n      console.log(\"all the subscriptions :\",data)\r\n      \r\n      console.log(\"helllooooooo \",data)\r\n      if(data.length !== 0){\r\n      if(data[data.length-1].status == \"active\"){\r\n        setSub(data)\r\n        setStatus(true)\r\n        setSubId(data[data.length-1]._id)\r\n        setStall(data[data.length-1].stalls)\r\n        console.log(\"Number of :\",stalls)\r\n        const n  = Math.min(Number(data[data.length-1].stalls),3)\r\n        console.log(n)\r\n        setNumber(n)\r\n      }else{\r\n        setNumber(1000)\r\n        setStatus(false)\r\n      }\r\n      const currentDate = new Date(data[data.length-1].date)\r\n      \r\n      var year= currentDate.getFullYear();\r\n      var month = Number(currentDate.getMonth()) +1;\r\n      var date = Number(currentDate.getDate());\r\n      if(month == 0 || month == 2 ||month == 4 ||month == 6 ||month == 7 ||month == 9 || \r\n        month == 11 ){\r\n          if(Number(date) + 7 > 31){\r\n            date = Number(date) + 7 -31\r\n            month = month + 1\r\n          }else{\r\n            date = date + 7\r\n            \r\n          }\r\n        }\r\n      else if(month == 1){\r\n        if(Number(date) + 7 > 28 ){\r\n          date = Number(date) + 7 -28\r\n          month = month + 1\r\n        }\r\n        else{\r\n          date = date + 7\r\n        }\r\n      }else{\r\n        if(date + 7 > 30){\r\n          month = month + 1\r\n          date = Number(date) + 7 -30\r\n        }\r\n        else{\r\n          date = date + 7\r\n        }\r\n      }\r\n      const dateNew = new Date(year,month-1,date)\r\n      console.log(today,dateNew)\r\n      setMaxDate(dateNew)\r\n      if(today > dateNew){\r\n        setStatus(false)\r\n        setNumber(1000)\r\n      }\r\n      const validDate = String(year) +\"-\" + String(month) + \"-\" + String(date)\r\n      console.log(\"\",validDate)\r\n      console.log('status :', status)\r\n      \r\n    }\r\n    })\r\n  }, [date, Id]);\r\n\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const res = data && data.filter((e) => e.location === `${Id}`);\r\n    setUpdatedData(res);\r\n  }, [Id, data]);\r\n\r\n  useEffect(() => {\r\n    if (UpdatedData) {\r\n      setTotalStalls(UpdatedData.length)\r\n      setAvailable(totalStall - alreadyBookedLocataion)\r\n    }\r\n  }, [UpdatedData]);\r\n\r\n\r\n  const confirmBookingCash = async (e) => {\r\n    const price = bookedStalls.reduce(\r\n      (total, item) => item.stallPrice + total,\r\n      0\r\n    );\r\n    //console.log(bookedStalls.length);\r\n    //console.log(\"price\", price)\r\n    if (bookedStalls.length === 0) {\r\n      toast.warn(t(\"failed_to_book_stalls\"), {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n    let bookedStats = bookedStalls.toString();\r\n    const responseData = {\r\n      location: Id,\r\n      bookedStalls: bookedStalls,\r\n      bookedBy: userCurr.id,\r\n      bookedAt: date,\r\n      isBooked: true,\r\n    };\r\n\r\n    const stallsBooked = [];\r\n    bookedStalls.forEach((e) => {\r\n      stallsBooked.push(e.stallName);\r\n    });\r\n\r\n    // const price = bookedStalls.reduce(\r\n    //   (total, item) => item.stallPrice + total,\r\n    //   0\r\n    // );\r\n    const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n    const orderId = \"123\"\r\n    axios\r\n      .post(Url, responseData, { headers: authHeader() })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          setbookingDetails({\r\n            farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n            phone: userCurr.phone,\r\n            paymentDetails: orderId,\r\n            BookedStalls: stallsBooked,\r\n            stallsBooked: bookedStalls.length,\r\n            totalAmount: price,\r\n            address: bookedStalls[0].address\r\n          });\r\n        }\r\n        toast.success(t(\"stalls_booked_successfully\"), {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"../ticket\");\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(t(\"failed_to_book_stalls\"), {\r\n          position: \"top-right\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setBookedStalls([]);\r\n        setNumberOfSeats(0);\r\n      });\r\n\r\n  }\r\n\r\n  const confirmBooking = async (e) => {\r\n    \r\n    //IF STATUS = TRUE , THEN DECREASE THE AVAILABLE STALLS , BY UPDATING\r\n    if(status === true){\r\n      \r\n    var s = stall - bookedStalls.length\r\n    console.log(\"new stall number\",s)\r\n    setStall(s)\r\n    \r\n    await axios.put(REACT_APP_API_URL+\"changeStalls\",{subId,s})\r\n    .then((res)=>{\r\n      \r\n      const {data} = res\r\n      console.log(\"passed\")\r\n\r\n    })\r\n    .catch((error)=>{\r\n      console.log(\"failed\")\r\n    })\r\n\r\n\r\n    if(stall === 0){\r\n      \r\n      const s = \"expired\"\r\n      await axios.put(REACT_APP_API_URL+\"changestatus\",{id,s})\r\n        .then((res)=>{\r\n          window.location.reload(false);\r\n\r\n          console.log(\"passed\")\r\n\r\n        })\r\n        .catch((error)=>{\r\n          console.log(\"failed\")\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n    if (bookedStalls.length !== 0) {\r\n      if (cashOnDelivery) {\r\n        confirmBookingCash();\r\n      }\r\n      else {\r\n        const price = bookedStalls.reduce(\r\n          (total, item) => item.stallPrice + total,\r\n          0\r\n        );\r\n\r\n        //console.log(bookedStalls.length);\r\n        //console.log(\"price\", price)\r\n        if (bookedStalls.length === 0) {\r\n          toast.warn(t(\"failed_to_book_stalls\"), {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          return;\r\n        }\r\n        try {\r\n          const orderUrl = REACT_APP_API_URL+\"order\";\r\n          const { data } = await axios.post(\r\n            orderUrl,\r\n            { amount: price * 100 },\r\n            { headers: authHeader() }\r\n          );\r\n          initPayment(data.data);\r\n        } catch (error) {\r\n          //console.log(error);\r\n        }\r\n      }\r\n      console.length(bookedStalls.length)\r\n    }\r\n    else {\r\n      // console.log('in')\r\n      toast.warn(t(\"please_select_stalls\")+\"!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      bookedStalls: bookedStats,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n\r\n          var orderId;\r\n          if (!cashOnDelivery) {\r\n            const verifyUrl = REACT_APP_API_URL+\"verify\";\r\n            const { data } = await axios.post(verifyUrl, response, {\r\n              headers: authHeader(),\r\n            });\r\n            orderId = data.orderId;\r\n          } else {\r\n            orderId = \"123\"\r\n          }\r\n\r\n          //console.log(date)\r\n          const responseData = {\r\n            location: Id,\r\n            bookedStalls: bookedStalls,\r\n            bookedBy: userCurr.id,\r\n            bookedAt: date,\r\n            isBooked: true,\r\n          };\r\n\r\n          const stallsBooked = [];\r\n          bookedStalls.forEach((e) => {\r\n            stallsBooked.push(e.stallName);\r\n          });\r\n\r\n          const price = bookedStalls.reduce(\r\n            (total, item) => item.stallPrice + total,\r\n            0\r\n          );\r\n          const Url = REACT_APP_API_URL+\"bookedstalls\";\r\n\r\n          axios\r\n            .post(Url, responseData, { headers: authHeader() })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                setbookingDetails({\r\n                  farmer: userCurr.firstname + \" \" + userCurr.lastname,\r\n                  phone: userCurr.phone,\r\n                  paymentDetails: orderId,\r\n                  BookedStalls: stallsBooked,\r\n                  stallsBooked: bookedStalls.length,\r\n                  totalAmount: price,\r\n                  address: bookedStalls[0].address\r\n                });\r\n              }\r\n              toast.success(t(\"stalls_booked_successfully\"), {\r\n                position: \"top-center\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                navigate(\"../ticket\");\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(t(\"failed_to_book_stalls\"), {\r\n                position: \"top-right\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setBookedStalls([]);\r\n              setNumberOfSeats(0);\r\n            });\r\n        } catch (error) {\r\n          //console.log(error);\r\n          setBookedStalls([]);\r\n          setNumberOfSeats(0);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n  const handleClick = (ev) => {\r\n    if (numberOfSeats && ev.target.className !== \"booked\") {\r\n      const seatsToBook = parseInt(numberOfSeats, 20);\r\n      if (bookedStalls.length <= seatsToBook) {\r\n        //Remove stall if already selected\r\n        if (selected.includes(ev.target.id)) {\r\n          console.log(\"no\" + \" \" + selected)\r\n          const idToRemove = ev.target.id;\r\n          const newBookedStalls = bookedStalls.filter((stall) => stall._id !== idToRemove);\r\n          setBookedStalls(newBookedStalls);\r\n          setAvailable(available + 1);\r\n          const index = selected.indexOf(ev.target.id);\r\n          console.log(index)\r\n          if (index >= 0) {\r\n            selected.splice(index, 1); // Remove the selected stall ID from the selected array\r\n          }\r\n          console.log(selected)\r\n          return\r\n        } //Select stall\r\n        else if (bookedStalls.length < numberOfSeats) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          setAvailable(available - 1);\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          console.log('here')\r\n        } //shift stall if number of stalls reached\r\n        else if (bookedStalls.length === seatsToBook) {\r\n          const item = UpdatedData.filter((e) => e._id === ev.target.id);\r\n          bookedStalls.shift();\r\n          selected.shift();\r\n          setBookedStalls([...bookedStalls, item[0]]);\r\n          console.log(\"shifted\" + \" \" + selected)\r\n        }\r\n        // Add the clicked stall ID to the selected array\r\n        setSelected([...selected, ev.target.id]);\r\n        console.log(selected)\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selected);\r\n  }, [selected]);\r\n\r\n\r\n  const lengthofUpdatedData = UpdatedData?.length;\r\n  //UpdatedData?.length\r\n  const handleChange = (e, newValue) => {\r\n    if (date !== 0) {\r\n      if (e.target.value <= -1) {\r\n        setNumberOfSeats(0);\r\n        setvalue(0);\r\n      }\r\n      else if (e.target.value <= available) {\r\n        setNumberOfSeats(e.target.value);\r\n        setvalue(e.target.value);\r\n      } else {\r\n        setNumberOfSeats(available);\r\n        setvalue(available);\r\n      }\r\n      setMessage2('');\r\n    }\r\n    else {\r\n      setMessage2(t(\"please_select_date\"));\r\n    }\r\n  };\r\n  const disabledDates = [new Date('2023-04-02')];\r\n\r\n  const handlechange1 = (event) => {\r\n    const temp = new Date(event.target.value);\r\n    const weekdayNumber = temp.getDay();\r\n\r\n    // console.log(weekdayNumber)\r\n    //  if(weekdayNumber === arr[Id]){\r\n    setdate(event.target.value);\r\n    setMessage('');\r\n\r\n    //   }\r\n    // else {\r\n    setMessage(`Markets in ${Id} only on ${weekdays[arr[Id] - 1]}, Please choose date accordingly`);\r\n    //}\r\n  };\r\n  const isDateDisabled = (date) => {\r\n    return disabledDates.includes(format(date, 'yyyy-MM-dd'));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {!Loading ? (\r\n        <div className=\"Test\">\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            theme=\"light\"\r\n          />\r\n\r\n\r\n          <div className=\"main_container_stalls\">\r\n            <Link className=\"backbtn green\" to=\"/farmers/stallplaces\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n             { t(\"back\")}\r\n            </Link>\r\n            {console.log(weekdays[arr[Id] - 1])}\r\n            <h2 className=\"market-name\" style={{ textAlign: 'center', marginTop: '20px' }}>{t(Id)} {t(\"only_on\")} {t(weekdays[arr[Id] - 1])}</h2>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  {t(\"enter_booking_date\")}\r\n                </InputLabel>\r\n                {/* <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"booking-date\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  id=\"booking-date\"\r\n                  autoFocus\r\n                  value={date}\r\n                  onChange={handlechange1}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  inputProps={{\r\n                    min: todayFormatted,\r\n                    // disable all days except Wednesdays\r\n                    disabledDates: disabledDates\r\n                  }}\r\n\r\n                /> */}\r\n                {console.log(date)}\r\n\r\n                {/* <DatePicker\r\n                  selected={date}\r\n                  onChange={handlechange1}\r\n                  minDate={new Date()} // Disable past dates\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  isClearable\r\n                  placeholderText=\"Select a date\"\r\n                  disabledDates={disabledDates}\r\n                /> */}\r\n\r\n\r\n                <DatePicker\r\n                  fullWidth\r\n                  className=\"textfield\"\r\n                  renderInput={(props) => <TextField {...props} size=\"big\" helperText={null} />}\r\n                  value={date}\r\n                  onChange={(newValue) => {\r\n                    console.log(newValue.$d);\r\n                    const myDate = newValue.$d;\r\n                    const yyyy = myDate.getFullYear();\r\n                    const mm = String(myDate.getMonth() + 1).padStart(2, \"0\");\r\n                    const dd = String(myDate.getDate()).padStart(2, \"0\");\r\n\r\n                    const formattedDate = `${yyyy}-${mm}-${dd}`;\r\n                    console.log(formattedDate);\r\n                    const d = new Date(newValue.toISOString().slice(0, 10));\r\n\r\n                    setdate(formattedDate);\r\n\r\n                    FarmerService.getBookedStallsTemp().then((response) => {\r\n                      console.log(date);\r\n                      const res =\r\n                        response.data &&\r\n                        response.data.filter((e) => e.location === `${Id}` && e.bookedAt === formattedDate);\r\n                      setAlreadyBooked(response.data);\r\n                      setAlreadyBookedLocation(res.length);\r\n                      setAvailable(totalStall - res.length);\r\n                      // console.log('alreadyBooked:', res)\r\n                    });\r\n\r\n                    handleOpen(true);\r\n                  }}\r\n                  defaultValue={new Date()}\r\n                  shouldDisableDate={disableDays}\r\n                  minDate={new Date()}\r\n                  maxDate={maxDate}\r\n\r\n                /> \r\n\r\n                {/* <DatePicker\r\n                \r\n                label=\"Year and Month\"\r\n                minDate={todayFormatted}\r\n                \r\n                value={value}\r\n                onChange={(newValue) => {\r\n                   setValue(newValue);\r\n                }}\r\n                renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n                /> */}\r\n\r\n\r\n                {message && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid style={{ margin: \"auto\", marginTop: '0rem' }} item xs={12} sm={6}>\r\n\r\n\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  {t(\"no_of_stalls_required\")}\r\n                </InputLabel>\r\n                <TextField\r\n                  // className=\"stall-booking-input\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  name=\"number-of-stalls-req\"\r\n                  required\r\n                  placeholder=\"00\"\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  id=\"number-of-stalls-req\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  InputProps={{ inputProps: { min: 0, max: number } }}\r\n\r\n                // margin=\"normal\"\r\n\r\n                />\r\n                {message2 && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message2}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n            </Grid>\r\n            \r\n            <Grid className=\"stall-position-grid\">\r\n              <InputLabel className=\"stall-booking-lable\">\r\n                {t(\"select_stall_position\")}\r\n              </InputLabel>\r\n              <Grid className=\"stalls-count-cantainer\">\r\n                <Grid>\r\n                  <div className=\"stalls-count-div\">\r\n                    <Typography className=\"count\">{t(\"total_stalls\")} :{totalStall}</Typography>\r\n                    <Typography className=\"count\">\r\n                      {t(\"available_stalls\")} :{available}\r\n                    </Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n\r\n                  {UpdatedData && Id ? (\r\n                    <div className=\"stall_wrapper\">\r\n                      {lengthofUpdatedData === 34 && (\r\n                        <div className=\"StallsContainer\">\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(0, 16)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {isMobile && <Stall\r\n                            data={UpdatedData.slice(0, 17)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(16, 17)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(17, 18)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(18, 34)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {isMobile && <Stall\r\n                            data={UpdatedData.slice(17, 35)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                        </div>\r\n                      )}\r\n                      {lengthofUpdatedData === 50 && (\r\n                        <div className=\"StallsContainer\">\r\n                          <Stall\r\n                            data={UpdatedData.slice(0, 24)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(24, 25)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          {!isMobile && <Stall\r\n                            data={UpdatedData.slice(25, 26)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />}\r\n                          <Stall\r\n                            data={UpdatedData.slice(26, 50)}\r\n                            handleClick={handleClick}\r\n                            bookedStalls={bookedStalls}\r\n                            alreadyBooked={alreadyBooked}\r\n                            date={date}\r\n                            t={t}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"select_market\">\r\n                        <h2>{t(\"please_select_market\")}</h2>\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"stall-pricing-grid\">\r\n                <div className=\"stall-pricing-main-div\">\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#AACE48\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">100/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#3AA54B\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">300/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#A42A56\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">500/-</div>\r\n                  </div>\r\n                  <div className=\"price-holder\">\r\n                    <Box\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20,\r\n                        backgroundColor: \"#B3B3B3\",\r\n                      }}\r\n                      className=\"stall-color\"\r\n                    />\r\n                    <div className=\"stall-price\">{t(\"booked\")}</div>\r\n                  </div>\r\n                </div>\r\n                {/* {console.log(bookedStalls)} */}\r\n                <Divider className=\"divider\" />\r\n                <div className=\"stall-total-amount-holder\">\r\n                  <div className=\"total-amount\">{t(\"total_amount\")}</div>\r\n                  <div className=\"total-amount\">Rs.{bookedStalls.reduce(\r\n                    (total, item) => item.stallPrice + total,\r\n                    0\r\n                  )}/-</div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            {/* {console.log(selected)} */}\r\n\r\n            {numberOfSeats !== 0 && bookedStalls.length !== 0 ? (\r\n              <div className=\"modalbtn\">\r\n\r\n                <ConfirmModal t={t} status={status} setCashOnDelivery={setCashOnDelivery} confirmBooking={confirmBooking} selected={selected} />\r\n              </div>\r\n            ) : (\r\n\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Grid item xs={6}>\r\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button\r\n                      style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                      onClick={() => {\r\n                        toast.warn(\"Please select stalls!\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 2500,\r\n                          hideProgressBar: false,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      {t(\"Pay\")}\r\n                    </Button>\r\n                    <Button\r\n                      style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                      onClick={() => {\r\n                        toast.warn(\"Please select stalls!\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 2500,\r\n                          hideProgressBar: false,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      {t(\"pay_in_market\")}\r\n                    </Button>\r\n\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n\r\n            )\r\n            }\r\n\r\n\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","// import React from \"react\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport '../../styles/Ticket.css'\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\n\r\nfunction Ticket ({bookingDetails}) {\r\n    const [called,setCalled] = useState(false)\r\n    const { REACT_APP_API_URL } = process.env;\r\n\r\n    useEffect(() => {\r\n        if(!called ){\r\n            twilioMsg(); \r\n        }\r\n        \r\n    },[called]);\r\n    \r\n    const twilioMsg = async() => {\r\n        console.log(\"booking \",bookingDetails)\r\n        \r\n        const orderUrl = REACT_APP_API_URL+\"twilio\"; \r\n        const {data} = await axios.post(orderUrl,{bookingDetails:bookingDetails},{headers:authHeader()});\r\n        setCalled(true)\r\n        console.log(data)\r\n    }\r\n    const {BookedStalls} = bookingDetails\r\n    const navigate = useNavigate()\r\n    const bookStr = BookedStalls?.toString();\r\n    return (\r\n        <>\r\n        {bookingDetails ? <div className=\"invoice-box\">\r\n            <h2 className=\"thanks\">Stall booking details</h2>\r\n            <br/>\r\n            <div className=\"invoice_details\">\r\n                <div>Farmer Name : {bookingDetails.farmer}</div>\r\n                <br/>\r\n                <div>Phone : {bookingDetails.phone}</div>\r\n                <br/>\r\n                <div>No. of Stalls Booked :{bookingDetails.stallsBooked}</div>\r\n                <br/>\r\n                <div>Stalls Booked : {bookStr}</div>\r\n                <br/>\r\n                <div>Payment Id : {bookingDetails.paymentDetails}</div>\r\n                <br/>\r\n                <div>Addess : {bookingDetails.address}</div>\r\n                <br/>\r\n                <div>Total Amount : {bookingDetails.totalAmount}</div>\r\n                <br/>\r\n            </div>\r\n            <h2 className=\"thanks\">Thank You !</h2>\r\n            <div className=\"bookings_buttons\">\r\n                <button onClick={()=>{navigate('/farmers/stallplaces')}} className=\"btns_bookings\">Continue Booking</button>\r\n                <button onClick={()=>{navigate('../mybookings')}} className=\"btns_bookings\">Check booked stalls</button>\r\n            </div>\r\n        </div> : <Spinner/>}\r\n        </> \r\n     );\r\n}\r\n\r\nexport default Ticket  ;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FarmerNavigation({t}) {\r\n  return (\r\n    <div>\r\n          <div className=\"farmerScreen\">\r\n              <Link className=\"links_farmersdata red\" to=\"./stallplaces\">\r\n                  {t('book_stall')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./mybookings\">\r\n                  {t(\"my_bookings\")}\r\n              </Link>\r\n              <Link className=\"links_farmersdata red\" to=\"./inward\">\r\n                  {t('fill_inward')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./outward\">\r\n                  {t('fill_outward')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata red\" to=\"./farmershome\">\r\n                  {t('data')}\r\n              </Link>\r\n              <Link className=\"links_farmersdata green\" to=\"./subscription\">\r\n                  {t('subscription')}\r\n              </Link>\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmerNavigation\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserService from '../../services/user.service'\r\nimport AuthService from '../../services/auth.service'\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FarmerService from '../../services/farmer.service'\r\nimport '../../styles/subscription.css'\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n//import Razorpay from 'razorpay';\r\n\r\nimport authHeader from \"../../services/auth.headers\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ConfirmModal from \"../../components/ConfirmModal\";\r\nimport { CenterFocusStrong } from \"@mui/icons-material\";\r\n\r\nconst Subscription = ({t}) => {\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const user = AuthService.getCurrentUser()\r\n  const [sub, setSub] = useState([]);\r\n  const [open, setOpen] = useState();\r\n  const [price, setPrice] = useState(0);\r\n  const [cashOnDelivery, setCashOnDelivery] = useState(false);\r\n  const [MyStalls, setMyStalls] = useState([]);\r\n  const [status, setStatus] = useState()\r\n  const [status1, setStatus1] = useState(false)\r\n  const [date, setDate] = useState(new Date());\r\n  const [validity, setValidity] = useState();\r\n  const API_URL = \"https://wingrowmarket.com:8443/\";\r\n  const [stalls, setStalls] = useState();\r\n  const [validTill, setValidTill] = useState();\r\n  const [remStalls, setRemStalls] = useState(0);\r\n  function isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  useEffect(() => {\r\n\r\n    FarmerService.getBookedStalls().then(async (res) => {\r\n      const { data } = res;\r\n      console.log(\"the data is- \", data)\r\n      //check for date of the booked stall date greater than equal to subscribed\r\n      if(sub.length !== 0){\r\n        const currentDate = new Date(sub[sub.length-1].date)\r\n        console.log(\"hello---  \",sub[sub.length-1].date)\r\n      setMyStalls(data.filter(e=> { \r\n      \r\n      if(e.bookedBy === user.id && sub[sub.length-1].date <= e.bookedAt){return true} }))\r\n      \r\n\r\n      console.log(\"the booked stalls are -- \", MyStalls)\r\n      console.log(sub)\r\n      var r = MyStalls.length\r\n      console.log(stalls,r)\r\n      if(stalls <=r ){\r\n        setRemStalls(0)\r\n        //subscribe again\r\n        const id = sub[sub.length-1]._id\r\n        if(status == \"active\"){\r\n          setStatus(\"expired\")\r\n          const s = \"expired\"\r\n        await axios.put(API_URL+\"changestatus\",{id,s})\r\n        .then((res)=>{\r\n          window.location.reload(false);\r\n\r\n          console.log(\"passed\")\r\n\r\n        })\r\n        .catch((error)=>{\r\n          console.log(\"failed\")\r\n        })\r\n      }\r\n        console.log(\"sub is-\",sub[sub.length-1]._id)\r\n        }else{\r\n        setRemStalls(stalls)\r\n      }\r\n  }})\r\n  }, [MyStalls, sub])\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n\r\n    const userId = user.id\r\n    console.log(\"inside sub useeffect\")\r\n    if (sub.length === 0 || isJson(sub[0])) {\r\n      UserService.getSub(userId).then((res) => {\r\n        const { data } = res\r\n        console.log(\"all the subscriptions :\", data)\r\n\r\n        console.log(\"helllooooooo \", data)\r\n        if (data.length !== 0) {\r\n          if (data[data.length - 1].status == \"active\") {\r\n            setSub(data)\r\n            setStatus(\"active\")\r\n          } else {\r\n            setStatus(\"expired\")\r\n          }\r\n          const currentDate = new Date(data[data.length - 1].date)\r\n\r\n          var year = currentDate.getFullYear();\r\n          var month = Number(currentDate.getMonth()) + 1;\r\n          var date = Number(currentDate.getDate());\r\n          if (month == 0 || month == 2 || month == 4 || month == 6 || month == 7 || month == 9 ||\r\n            month == 11) {\r\n            if (Number(date) + 7 > 31) {\r\n              date = 1\r\n              month = month + 1\r\n            } else {\r\n              date = date + 7\r\n\r\n            }\r\n          }\r\n          else if (month == 1) {\r\n            if (Number(date) + 7 > 28) {\r\n              date = 1\r\n              month = month + 1\r\n            }\r\n            else {\r\n              date = date + 7\r\n            }\r\n          } else {\r\n            if (date + 7 > 30) {\r\n              month = month + 1\r\n              date = 1\r\n            }\r\n            else {\r\n              date = date + 7\r\n            }\r\n          }\r\n\r\n          const validDate = String(year) + \"-\" + String(month) + \"-\" + String(date)\r\n          console.log(validDate)\r\n          setValidTill(validDate)\r\n          setStalls(data[data.length - 1].stalls)\r\n        }\r\n      })\r\n    }\r\n    handleOpen(true);\r\n  }, [sub])\r\n  const confirmBookingCash = async (e) => {\r\n    const price = 30 * 300 * 0.9;\r\n    console.log(\"Im here\")\r\n    setStatus(\"active\")\r\n\r\n    const userId = user.id;\r\n\r\n    const orderId = \"123\"\r\n    const s = \"active\"\r\n    await axios\r\n      .post(API_URL + \"sub\", { date, userId, validity, stalls, s, price })\r\n      .then((response) => {\r\n        const { data } = response;\r\n        if (data) {\r\n          console.log(\"data--\", data)\r\n\r\n          navigate(\"/farmers/subscription\");\r\n        }\r\n        toast.success(\"stalls booked successfully!\", {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setTimeout(() => {\r\n          //navigate(\"/farmers/subscription\");\r\n          window.location.reload(false)\r\n\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        toast.warn(\"Failed to book stalls!\", {\r\n          position: \"top-right\",\r\n          autoClose: 2500,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setSub([])\r\n      });\r\n\r\n  }\r\n\r\n  const confirmBooking = async (e) => {\r\n    console.log(\"hellloooo\")\r\n    if (cashOnDelivery) {\r\n      confirmBookingCash();\r\n    }\r\n    else {\r\n      const price = 300 * 30 * 0.9\r\n\r\n\r\n      try {\r\n        const orderUrl = API_URL + \"order\";\r\n        const { data } = await axios.post(\r\n          orderUrl,\r\n          { amount: price * 100 },\r\n          { headers: authHeader() }\r\n        );\r\n        initPayment(data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    //console.log(date)\r\n    //let bookedStats = bookedStalls.toString();\r\n    const options = {\r\n      key: process.env.KEY_ID,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      order_id: data.id,\r\n      description: \"Wingrow Market\",\r\n\r\n      handler: async (response) => {\r\n\r\n        try {\r\n\r\n          var orderId;\r\n\r\n          const verifyUrl = REACT_APP_API_URL + \"verify\";\r\n          const { data } = await axios.post(verifyUrl, response, {\r\n            headers: authHeader(),\r\n          });\r\n          orderId = data.orderId;\r\n\r\n\r\n\r\n          const userId = user.id\r\n          setStatus(\"active\")\r\n          const s = \"active\"\r\n          await axios\r\n            .post(API_URL + \"sub\", { date, userId, validity, stalls, s, price })\r\n            .then((response) => {\r\n              const { data } = response;\r\n              if (data) {\r\n                console.log(data)\r\n                setSub(data)\r\n              }\r\n              toast.success(\"stalls booked successfully!\", {\r\n                position: \"top-center\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              setTimeout(() => {\r\n                //navigate(\"/farmers/subscription\");\r\n                window.location.reload(false)\r\n\r\n              }, 1000);\r\n            })\r\n            .catch((error) => {\r\n              toast.warn(\"Failed to book stalls!\", {\r\n                position: \"top-right\",\r\n                autoClose: 2500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n\r\n            });\r\n        } catch (error) {\r\n          //console.log(error);\r\n          setSub([])\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus(\"active\")\r\n\r\n    const userId = user.id;\r\n    const s = \"active\"\r\n    console.log(userId)\r\n    await axios.post(API_URL + \"sub\", { date, userId, validity, stalls, s, price })\r\n      .then((res) => {\r\n        console.log(\"the return data \", res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"sub\">\r\n      <Link className=\"backbtn green\" to=\"/farmers\" style={{ padding: '8px 20px 8px 20px'}}>\r\n        Back </Link>\r\n      <div className=\"subscrp-heading\">\r\n     \r\n        <h1 className=\"header\">Subscription Model</h1>\r\n      </div>\r\n     \r\n      { (sub.length !== 0  && status == \"active\" ) ? \r\n      \r\n      \r\n      <div className=\"subscribe\">\r\n      \r\n\r\n          {/* <div className=\"validity\">\r\n        <h3>validity(days) - {sub[0].validity}</h3>\r\n        </div> */}\r\n          <div className=\"stallslefts downtext\">\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\">Start data :</p>\r\n              <p>{sub[sub.length-1].date}</p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> valid till :</p>\r\n              <p>{validTill} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> Status :</p>\r\n              <p>{sub[sub.length-1].status} </p>\r\n            </div>\r\n            <div className=\"inner_downtext\">\r\n              <p className=\"startdate\"> Stalls :</p>\r\n              <p>{sub[sub.length-1].stalls} </p>\r\n            </div>\r\n          </div>\r\n          {/* <h3>stalls - {sub[0].stalls}</h3> */}\r\n\r\n      </div>\r\n        :\r\n\r\n        <div classname=\"box\">\r\n          <h2 style={{ textAlign: \"center\", paddingTop: 20 }}>not Subscribed</h2>\r\n          <form onSubmit={handleSubmit}>\r\n          <Grid className=\"input-div-holder\" container spacing={2} justifyContent=\"center\" alignItems=\"center\" sx={{ marginTop: '1rem' , marginLeft:{xs:\"1.7rem\"}}} >\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n              <InputLabel className=\"stall-booking-lable\" sx={{marginRight:{xs:\"6rem\", lg:\"0px\"}}}>\r\n                Enter Booking Date\r\n              </InputLabel>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                sx={{width:{xs: \"80%\", sm: \"100%\", md: \"65%\", lg: \"50%\", xl: \"100%\"}}}\r\n                name=\"booking-date\"\r\n                required\r\n                fullWidth\r\n                type=\"date\"\r\n                id=\"booking-date\"\r\n                autoFocus\r\n                value={date}\r\n                onChange={(e) => { setDate(e.target.value); console.log(\"clicking\"); }}\r\n                color=\"success\"\r\n              />\r\n            </Grid>\r\n            <Grid  item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  sx={{\r\n                     sm:top-40, marginRight:{xs:\"7rem\", lg:\"1rem\"}\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                >\r\n                  Type\r\n                </InputLabel>\r\n                <Select\r\n                  sx={{fontSize: \"1.2rem\", width:{xs: \"80%\", sm: \"100%\", md: \"65%\", lg: \"50%\", xl: \"100%\"}}}\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={validity}\r\n                  label=\"Type\"\r\n                  name=\"type\"\r\n                  onChange={(e) => {\r\n\r\n                    setValidity(\"7\")\r\n                    setStalls(8)\r\n\r\n                  }}\r\n                  color=\"success\"\r\n                  className=\"mx-auto\"\r\n                >\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value=\"\"\r\n                  >\r\n                    <em>Select</em>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value={\"1\"}\r\n                  >\r\n                    1 week (8 Days)\r\n                  </MenuItem>\r\n                  {/* <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      Consumer\r\n                    </MenuItem> */}\r\n                </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <InputLabel\r\n                className=\"stall-booking-lable\"\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  id=\"demo-simple-select-helper-label\"\r\n                  sx={{marginRight:{xs:\"7rem\", lg:\"1rem\"}}}\r\n                >\r\n                  Price\r\n                </InputLabel>\r\n                <Select\r\n                  sx={{fontSize: \"1.2rem\", width:{xs: \"80%\", sm: \"100%\", md: \"65%\", lg: \"50%\", xl: \"100%\"}}}\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={price}\r\n                  label={\"Type\"}\r\n                  name=\"type\"\r\n                  onChange={(e) => {\r\n                    setPrice(e.target.value)\r\n                  }}\r\n                  color=\"success\"\r\n                  className=\"mx-auto\"\r\n                >\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value=\"\"\r\n                  >\r\n                    <em>Select</em>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value={\"1\"}\r\n                  >\r\n                    300\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value={\"1\"}\r\n                  >\r\n                    500\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                    value={\"1\"}\r\n                  >\r\n                    800\r\n                  </MenuItem>\r\n                  {/* <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      Consumer\r\n                    </MenuItem> */}\r\n                </Select>\r\n            </Grid>\r\n          </Grid>\r\n         \r\n\r\n            {/* <button type=\"submit\">Proceed</button> */}\r\n            {validity && date ? (\r\n              <div className=\"modalbtn\">\r\n                <ConfirmModal t={t} setCashOnDelivery={setCashOnDelivery} status={status1} confirmBooking={confirmBooking} />\r\n              </div>\r\n            ) : (\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Grid item xs={6}>\r\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button\r\n                      style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                      PAY\r\n                    </Button>\r\n                    <Button style={{ width: \"110px\", height: \"40px\", paddingLeft: '5rem', paddingRight: '5rem', margin: '1rem', color: 'white', background: \"linear-gradient(90deg, #07952b 41%, #0d6a02)\", borderRadius: \"20px\", textAlign: \"center\", marginTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                      PAY ON DELIVERY\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n          </form>\r\n        </div>\r\n\r\n      }\r\n\r\n  </div>\r\n);\r\n\r\n}\r\n  \r\n\r\n\r\nexport default Subscription","import React, { useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport AdvanceBookings from \"./AdvanceBookings\";\r\nimport FarmersHome from \"./FarmersHome\";\r\nimport FarmersMain from \"./FarmersMain\";\r\nimport InwardData from \"./InwardData\";\r\nimport MyBookings from \"./MyBookings\";\r\nimport OutwardData from \"./OutwardData\";\r\nimport StallsPlaces from \"./StallsPlaces\";\r\nimport Test from \"./Test\";\r\nimport Ticket from \"./Ticket\";\r\n\r\nimport FarmerNavigation from \"./FarmerNavigation\";\r\nimport Subscription from \"./Subscription\";\r\nimport TestTemp from \"./TestTemp\";\r\nconst Farmer = ({t}) => {\r\n  const [bookingDetails, setbookingDetails] = useState({\r\n    farmer: \"\",\r\n    phone: \"\",\r\n    paymentDetails: \"\",\r\n    BookedStalls: null,\r\n    stallsBooked: null,\r\n    totalAmount: null,\r\n  });\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<FarmersMain \r\n      />}>\r\n        <Route index element={<FarmerNavigation\r\n        t={t}\r\n        />} />\r\n        <Route\r\n          path=\"stallplaces/stalls/:Id\"\r\n          element={<Test setbookingDetails={setbookingDetails}\r\n            t={t}\r\n          />}\r\n        />\r\n        <Route path=\"/farmershome\" element={<FarmersHome\r\n          t={t}\r\n         />} />\r\n        <Route path=\"/inward\" element={<InwardData \r\n          t={t}\r\n        />} />\r\n        <Route \r\n        path=\"/stallplaces\" \r\n        element={<StallsPlaces \r\n          t={t}\r\n        />} \r\n        />\r\n        <Route\r\n          path=\"/advancebookings\"\r\n          element={<AdvanceBookings setbookingDetails={setbookingDetails}\r\n          />}\r\n        />\r\n        <Route path=\"/outward\" element={<OutwardData \r\n          t={t}\r\n        />} />\r\n        <Route\r\n          path=\"/ticket\"\r\n          element={<Ticket bookingDetails={bookingDetails } \r\n            t={t}\r\n          />}\r\n        />\r\n        <Route path=\"/mybookings\" element={<MyBookings \r\n          t={t}\r\n        />} />\r\n        <Route path =\"/subscription\" element ={ <Subscription\r\n          t={t} />} />\r\n\r\n        \r\n\r\n\r\n      </Route>\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Farmer;\r\n","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function Datepicker({setValue , value}) {\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <Stack spacing={3}>\r\n        <DesktopDatePicker\r\n          label=\"Date\"\r\n          inputFormat=\"MM/DD/YYYY\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\n// const API_URL = \"https://wingrowmarket.onrender.com/\";\r\n//const API_URL = \"http://localhost:4000/\"\r\nconst API_URL = \"https://wingrowmarket.com:8443/\";\r\nconst { REACT_APP_API_URL } = process.env;\r\n const getPublicContent = () => {\r\n    return axios.get(REACT_APP_API_URL + 'all');\r\n  }\r\n  const getSub = (userId) =>{\r\n    return axios.post(REACT_APP_API_URL + 'sub1',{userId})\r\n  }\r\n  // const postSub = () =>{\r\n  //   return axios.post(API_URL,'sub',{ headers: authHeader() });\r\n  // }\r\n\r\n  const postSub = (date , userId , stalls , validity ) => {\r\n    return axios.post(REACT_APP_API_URL + \"sub\", {\r\n        date,\r\n        userId,\r\n        stalls,\r\n        validity, \r\n      } , { headers: authHeader() });\r\n  }\r\n  const getInOutdata = () => {\r\n    return axios.get(REACT_APP_API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  // const addMarket = () =>{\r\n  //   return axios.post(REACT_APP_API_URL + \"add\")\r\n  // }\r\n  const getMarket = () =>{\r\n    return axios.get(REACT_APP_API_URL + \"getmarket\")\r\n  }\r\nconst getMarkets = () => {\r\n  return axios.get(REACT_APP_API_URL + \"getmarkets\")\r\n}\r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers,\r\n    getSub,\r\n    postSub,\r\n    getMarket,\r\n  getMarkets,\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n"],"names":["userCurr","AuthService","today","Date","console","log","getDate","replacement","todayFormatted","toISOString","slice","locations","location","_ref","setbookingDetails","_useState","setValue","useState","_useState2","_slicedToArray","setlocation","navigate","useNavigate","REACT_APP_API_URL","process","_useState3","_useState4","data","setdata","_useState5","_useState6","UpdatedData","setUpdatedData","_useState7","_useState8","numberOfSeats","setNumberOfSeats","_useState9","_useState10","bookedStalls","setBookedStalls","_useState11","dayjs","now","format","_useState12","value","setvalue","_useState13","_useState14","alreadyBooked","setAlreadyBooked","_useState15","_useState16","setOpen","_useState17","_useState18","date","setdate","_useState19","_useState20","totalStall","setTotalStalls","_useState21","_useState22","available","setAvailable","_useState23","_useState24","setLoading","_useState25","_useState26","alreadyBookedLocataion","setAlreadyBookedLocation","Id","useParams","lengthofUpdatedData","length","_useState27","_useState28","cashOnDelivery","setCashOnDelivery","useEffect","FarmerService","then","response","res","filter","e","concat","bookedAt","handleOpen","script","document","createElement","src","async","body","appendChild","removeChild","confirmBookingCash","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","price","responseData","stallsBooked","Url","wrap","_context","prev","next","reduce","total","item","stallPrice","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","abrupt","toString","bookedBy","id","isBooked","forEach","push","stallName","axios","headers","authHeader","farmer","firstname","lastname","phone","paymentDetails","BookedStalls","totalAmount","address","setTimeout","catch","error","stop","_x","apply","arguments","confirmBooking","_ref3","_callee2","orderUrl","_yield$axios$post","_data","_context2","amount","sent","initPayment","t0","_x2","bookedStats","options","key","KEY_ID","currency","order_id","description","handler","_handler","_callee3","verifyUrl","_yield$axios$post2","_data2","orderId","_context3","_x3","color","window","Razorpay","open","handleClick","ev","target","className","seatsToBook","parseInt","includes","newAvailable","seat","_id","_toConsumableArray","shift","_jsxs","children","_jsx","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Link","to","Grid","container","spacing","xs","sm","InputLabel","TextField","inputlabelprops","style","fontSize","fontFamily","name","required","fullWidth","type","autoFocus","onChange","event","replace","FormControl","sx","width","Select","label","map","i","MenuItem","placeholder","Typography","Stall","Box","height","backgroundColor","Divider","ConfirmModal","alignItems","justifyContent","display","Button","paddingLeft","paddingRight","margin","background","borderRadius","textAlign","marginTop","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","t","InwardData","setInwardData","OutwardData","setOutwardData","InwardDataGraph","setInwardDataGraph","OutwardDataGraph","setOutwardDataGraph","salesQuantity","setSalesQuantity","setSalesRate","setPurchaseQuantity","setPurchaseRate","mondaySalesQuantity","setMondaySalesQuantity","tuesdaySalesQuantity","setTuesdaySalesQuantity","wednesdaySalesQuantity","setWednesdaySalesQuantity","thursdaySalesQuantity","setThursdaySalesQuantity","fridaySalesQuantity","setFridaySalesQuantity","saturdaySalesQuantity","setSaturdaySalesQuantity","_useState29","_useState30","sundaySalesQuantity","setSundaySalesQuantity","_useState31","_useState32","mondayPurchaseQuantity","setMondayPurchaseQuantity","_useState33","_useState34","tuesdayPurchaseQuantity","setTuesdayPurchaseQuantity","_useState35","_useState36","wednesdayPurchaseQuantity","setWednesdayPurchaseQuantity","_useState37","_useState38","thursdayPurchaseQuantity","setThursdayPurchaseQuantity","_useState39","_useState40","fridayPurchaseQuantity","setFridayPurchaseQuantity","_useState41","_useState42","saturdayPurchaseQuantity","setSaturdayPurchaseQuantity","_useState43","_useState44","sundayPurchaseQuantity","setSundayPurchaseQuantity","_useState45","_useState46","mondaySalesRate","setMondaySalesRate","_useState47","_useState48","tuesdaySalesRate","setTuesdaySalesRate","_useState49","_useState50","wednesdaySalesRate","setWednesdaySalesRate","_useState51","_useState52","thursdaySalesRate","setThursdaySalesRate","_useState53","_useState54","fridaySalesRate","setFridaySalesRate","_useState55","_useState56","saturdaySalesRate","setSaturdaySalesRate","_useState57","_useState58","sundaySalesRate","setSundaySalesRate","_useState59","_useState60","mondayPurchaseRate","setMondayPurchaseRate","_useState61","_useState62","tuesdayPurchaseRate","setTuesdayPurchaseRate","_useState63","_useState64","wednesdayPurchaseRate","setWednesdayPurchaseRate","_useState65","_useState66","thursdayPurchaseRate","setThursdayPurchaseRate","_useState67","_useState68","fridayPurchaseRate","setFridayPurchaseRate","_useState69","_useState70","saturdayPurchaseRate","setSaturdayPurchaseRate","_useState71","_useState72","sundayPurchaseRate","setSundayPurchaseRate","_useState73","_useState74","_useState75","_useState76","chartRef","useRef","chartData","arr","weekdayNumber","getDay","labels","datasets","borderColor","borderWidth","_useState77","_useState78","selectedDate","setSelectedDate","_useState79","_useState80","searchClicked","setSearchClicked","cumulativeData","_loop","_step","market","_marketNames","_i","filteredInwardData","filteredOutwardData","commoditiesInMarket","Set","commodity","cumulativeDataForMarket","totalNetProfit","_iterator","_createForOfIteratorHelper","_loop2","filteredInwardDataForCommodity","totalPurchaseQuantity","sum","purchase_quantity","totalPurchaseRate","purchase_rate","filteredOutwardDataForCommodity","totalSalesQuantity","sales_quantity","totalSalesRate","sales_rate","netProfit","s","n","done","err","f","year","getFullYear","month","getMonth","day","formattedDate","time","calculateSalesQuantity","y","temp","calculateSalesRate","calculatePurchaseRate","calculatePurchaseQuality","chart","echarts","current","xAxis","yAxis","dataGroupId","animationDurationUpdate","series","groupId","universalTransition","enabled","divideShape","setOption","karveNagarData","Object","keys","kharadiData","magarpattaData","amanoraData","drilldownData","on","subData","find","graphic","left","top","text","onclick","dispose","_Fragment","DatePicker","renderInput","props","_objectSpread","selected","dateFormat","placeholderText","onClick","variant","m","padding","profitLossArray","inwardItem","matchingOutwardItem","outwardItem","purchaseQuantity","purchaseRate","profitLoss","handlePAndL","index","Math","abs","Bar","ref","Spinner","postion","Outlet","createTheme","Data","setData","setcommodity","handleData","_e$target","prevState","_defineProperty","ThemeProvider","Container","component","maxWidth","CssBaseline","marginLeft","flexDirection","marginBottom","onSubmit","preventDefault","reload","labelId","Autocomplete","isOptionEqualToValue","option","disablePortal","params","InputProps","autoComplete","lg","transform","overflow","bgcolor","border","boxShadow","p","ConfirmDelete","Delete","_React$useState","React","_React$useState2","handleClose","Modal","onClose","class","user","MyStalls","setMyStalls","num","sortedData","sort","a","b","handleDelete","DeleteId","cancelledStall","cancelledAt","resp","filData","bookingExpired","cursor","stalls","setStalls","set","places","add","_step2","_iterator2","alt","Loading","status","setStatus","setSub","maxDate","setMaxDate","stall","setStall","subId","setSubId","number","setNumber","message","message2","setMessage2","setSelected","weekId","setWeekId","weekdays","isMobile","setIsMobile","mediaQuery","matchMedia","matches","listener","addListener","removeListener","UserService","min","Number","currentDate","dateNew","validDate","String","idToRemove","newBookedStalls","indexOf","splice","size","helperText","newValue","$d","myDate","yyyy","mm","padStart","dd","defaultValue","shouldDisableDate","d","minDate","inputProps","max","bookingDetails","called","setCalled","twilioMsg","bookStr","sub","setPrice","status1","setDate","validity","setValidity","API_URL","validTill","setValidTill","setRemStalls","r","userId","str","JSON","parse","isJson","_ref4","_callee4","_context4","_x4","handleSubmit","_ref5","_callee5","_context5","_x5","classname","paddingTop","md","xl","marginRight","Routes","Route","path","element","FarmersMain","FarmerNavigation","Test","FarmersHome","StallsPlaces","AdvanceBookings","Ticket","MyBookings","Subscription","Datepicker","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","DesktopDatePicker","inputFormat","getWindowDimensions","_window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","getPublicContent","getStallsData","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","getSub","postSub","getMarket","getMarkets"],"sourceRoot":""}