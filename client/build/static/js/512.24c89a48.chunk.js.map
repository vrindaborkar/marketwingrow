{"version":3,"file":"static/js/512.24c89a48.chunk.js","mappings":"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","sources":["Routes/Admin/AdminMain.js","Routes/Admin/Adminrev.js","Routes/Admin/AdminMarket.js","components/Card.js","components/FilterModal.js","Routes/Admin/AdminHome.js","Routes/Admin/AdminSub.js","Routes/Admin/CheckList.js","Routes/Admin/CheckListSoln.js","Routes/Admin/AdminrevTotal.js","Routes/Admin/FarmersListData.js","Routes/Admin/CustomersList.js","Routes/Admin/CancellationFeed.js","Routes/Admin/Admin.js","components/Datepicker.js","services/user.service.js"],"sourcesContent":["import React,{useState , useEffect} from 'react'\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Outlet } from 'react-router-dom'\r\n\r\nconst AdminMain = () => {\r\n  return (\r\n    <>\r\n        <Outlet/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminMain","import React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\nconst Adminrev = ({filterIn,filterOut,\r\n  handleChangeMarket,\r\n  fromDate,\r\n  setfromDate,\r\n  toDate,\r\n  settoDate,\r\n  value,\r\n  setValue,\r\n  handleSearch,\r\n  market,\r\n  farmersMarket,\r\n  open,\r\n  setOpen,\r\n  handleClose,\r\n  handleOpen,\r\n  handleSearchmarkets,\r\n  handleSearchDate,\r\n \r\n}) => {\r\n  console.log(\"in-->\",filterIn)\r\n  console.log(\"out--->\",filterOut)\r\n  const markets = { 'Hadapsar': 0, 'Kharadi': 1, 'Karve Nagar': 2, 'Bramhasun City': 3, 'wanawadi': 4, 'Magarpatta': 5, 'Amanora City': 6 }\r\n  //const markets = { 'Hadapsar': 0, 'Kharadi': 0, 'Karve Nagar': 0, 'Bramhasun City': 0, 'wanawadi': 0, 'Magarpatta': 0, 'Amanora City': 0 }\r\n\r\n  const marketIn = new Array(0,0,0,0,0,0,0)\r\n  const marketOut = new Array(0,0,0,0,0,0,0)\r\n  const netMarket = []\r\n  filterIn && filterIn.forEach((arr) =>{\r\n    const market = arr.market;\r\n    const purchase_quantity = arr.purchase_quantity\r\n    const purchase_rate = arr.purchase_rate\r\n    const idx = markets[market]\r\n    marketIn[idx] +=purchase_quantity*purchase_rate\r\n  })\r\n  filterOut && filterOut.forEach((arr) =>{\r\n    const market = arr.market;\r\n    const sales_quantity = arr.sales_quantity\r\n    const sales_rate = arr.sales_rate\r\n    const idx = markets[market]\r\n\r\n    marketOut[idx] += sales_quantity*sales_rate\r\n\r\n    //console.log(markets)\r\n  })\r\n  marketOut && marketOut.forEach((arr,idx)=>{\r\n    var ans = marketOut[idx] - marketIn[idx]; \r\n    netMarket.push(ans)\r\n\r\n  })\r\n  netMarket && netMarket.forEach((arr) =>{\r\n    console.log(\"netmarket :\",arr)\r\n  })\r\n  const data = {\r\n    labels: ['Hadapsar', 'Kharadi', 'Karve Nagar','Bramhasun City','wanawadi','Magarpatta','Amanora City'],\r\n    datasets: [\r\n      {\r\n        label: 'Data',\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        data: netMarket\r\n      ,\r\n    backgroundColor: [\r\n      'rgba(255, 99, 132, 0.3)',\r\n      'rgba(255, 159, 64, 0.3)',\r\n      'rgba(255, 205, 86, 0.3)',\r\n      'rgba(75, 192, 192, 0.3)',\r\n      'rgba(54, 162, 235, 0.3)',\r\n      'rgba(153, 102, 255, 0.3)',\r\n      'rgba(201, 203, 207, 0.3)'\r\n    ],\r\n    borderColor: [\r\n      'rgb(255, 99, 132)',\r\n      'rgb(255, 159, 64)',\r\n      'rgb(255, 205, 86)',\r\n      'rgb(75, 192, 192)',\r\n      'rgb(54, 162, 235)',\r\n      'rgb(153, 102, 255)',\r\n      'rgb(201, 203, 207)'\r\n    ],\r\n    borderWidth: 1,\r\n    // barThickness: 50,\r\n    responsive: true,\r\n  }]\r\n  };\r\n \r\n\r\n  const options = {\r\n\r\n  }\r\n  return (\r\n    <div className=\"adminrev-body\">\r\n              <div className='book-btn-section'>\r\n        <h1>Commodity data</h1>\r\n        </div>\r\n        <div class=\"chart-container\" >\r\n              <Bar\r\n                data={data}\r\n                options={options}\r\n                className=\"graphbar\"\r\n              >\r\n              </Bar>\r\n              </div>\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default Adminrev","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport axios from \"axios\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\nconst AdminMarket = () => {\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n    const [marketName,setMarketName] = useState(\"\")\r\n    const[direction,setDirection] = useState(\"\")\r\n  const [offers, setOffers] = useState(\"\")\r\n    const [tags, setTags] = React.useState([]);\r\n    const [date,setDate] = useState(new Date().toISOString().split('T')[0])\r\n    const [data,setData] = useState([])\r\n    var showData =[]\r\n    \r\n    useEffect(()=>{\r\n\r\n\r\n      async function getData(){\r\n        await axios.get(\"https://wingrowmarket.com:8443/\"+\"getMarket\")\r\n        .then((res)=>{\r\n         if(res){\r\n          const {data} = res\r\n          setData(data)\r\n          \r\n         }\r\n        })\r\n        .catch((err)=>{\r\n           console.log(err.message)\r\n         })\r\n      }\r\n\r\n\r\n      getData();\r\n\r\n    },[])\r\n    data  && data.forEach((d)=>{\r\n      showData.push(\r\n        <div className = \"box\">\r\n            <p>MarketName : {d.marketName}</p>\r\n            <p>Direction :{d.direction}</p>\r\n            {d.offers && d.offers.forEach(e => <p>{e}</p>)}\r\n         </div>\r\n      )\r\n    })\r\n    const handleDelete = (i) => {\r\n        const newTags = tags.slice(0);\r\n        newTags.splice(i, 1);\r\n        setTags(newTags);\r\n      };\r\n    \r\n    const handleAddition = (tag) => {\r\n        setTags([...tags, tag]);\r\n      };\r\n    const handleSubmit = async (e) =>{\r\n       e.preventDefault();\r\n       data.push({marketName:marketName,direction:direction,tags:tags,date:date})\r\n       await axios.post(\"https://wingrowmarket.com:8443/\"+\"addMarket\",{marketName,direction,tags,date})\r\n       .then((res)=>{\r\n        if(res){\r\n          console.log(\"success\")\r\n          setDirection(\"\")\r\n          setTags([])\r\n          setMarketName(\"\")\r\n\r\n        }\r\n       })\r\n       .catch((err)=>{\r\n        console.log(err);\r\n       })\r\n    }\r\n  return (\r\n    <div>\r\n    <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            \r\n\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  // autoComplete=\"given-name\"\r\n                  autoComplete=\"nope\"\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  name=\"marketName\"\r\n                  value={marketName}\r\n                  onChange={(e) => setMarketName(e.target.value)}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Market Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Direction\"\r\n                  name=\"Direction\"\r\n                  value={direction}\r\n                  onChange={(e) =>setDirection(e.target.value)}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield registerLabel\"\r\n                />\r\n              </Grid>\r\n        \r\n                <Grid item xs={12}>\r\n                  <ReactTags\r\n                    inputProps={{\r\n                      autoComplete: 'off'\r\n                    }}\r\n                    fullWidth\r\n                    tags={tags}\r\n                    \r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    placeholder=\"Add offers\"\r\n                    allowNew={true}\r\n                    autofocus={false}\r\n                    minQueryLength={1}\r\n                    className=\"textfield\"\r\n                    color=\"success\"\r\n                    classNames={{\r\n                      suggestions: 'tag-suggestions'\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n\r\n\r\n            \r\n            </Grid>\r\n            \r\n\r\n\r\n            <Button item xs={12}\r\n              type=\"submit\"\r\n              fullWidth\r\n\r\n              className=\"signup-btn\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              <span className=\"heading\">Add</span>\r\n            </Button>\r\n\r\n\r\n           \r\n          </form>\r\n          \r\n          {/* <div className='places_wrapper'>\r\n          {showData}\r\n        </div> */}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminMarket","import CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport '../styles/Admin.css'\r\nconst Card = ({header , value }) => {\r\n  return(\r\n    <div className='card_layout'>\r\n      <CardContent className='card-content'>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          <b className='total-number'>{value}</b>\r\n        </Typography>\r\n        <Typography className='tag' sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          {header}\r\n        </Typography>\r\n      </CardContent>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Card;","import * as React from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport '../styles/Admin.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Datepicker from '../components/Datepicker'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function FilterModal(\r\n  {\r\n    handleChangeMarket,\r\n    fromDate,\r\n    setfromDate,\r\n    toDate,\r\n    settoDate,\r\n    value,\r\n    setValue,\r\n    handleSearch,\r\n    farmersMarket,\r\n    market,\r\n    handleClose,\r\n    handleOpen,\r\n    open,\r\n    handleSearchmarkets,\r\n    handleSearchDate,\r\n    handleCloseModal = { handleCloseModal }\r\n  }\r\n) {\r\n\r\n  return (\r\n    <div>\r\n      <button className='filter_btn_admin' onClick={handleOpen}><img src=\"https://cdn-icons-png.flaticon.com/512/1159/1159641.png\" width={\"30px\"} /></button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <div className='box_filter'>\r\n          <button className=\"closebtn\" onClick={handleCloseModal}>\r\n            &times;\r\n          </button>\r\n          <h2 style={{ margin: \"1rem auto\", fontSize: \"30px\" }}>Filters</h2>\r\n          <div className='header_items_center'>\r\n            <div className='header_items_filter'>\r\n              <span className='date_picker_label'>Filter by date</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={setValue} value={value} />\r\n              </div>\r\n            </div>\r\n            <button className='filter_btn1' onClick={handleSearchDate}>Search</button>\r\n          </div>\r\n\r\n          <div className='header_items_center'>\r\n            <div className='header_items_filter'>\r\n              <span className='date_picker_label'>Filter between dates from</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={setfromDate} value={fromDate} />\r\n              </div>\r\n            </div>\r\n            <div className='header_items_filter'>\r\n              <span className='date_picker_label'>Filter between dates to</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={settoDate} value={toDate} />\r\n              </div>\r\n            </div>\r\n            <button className='filter_btn' onClick={handleSearch}>Search</button>\r\n          </div>\r\n\r\n          <div className='header_items'>\r\n            <div className='header_items_filter'>\r\n              <span className='filter-market'>Filter market wise :</span>\r\n              <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\r\n                <InputLabel id=\"demo-select-small\">Market</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-select-small\"\r\n                  id=\"demo-select-small\"\r\n                  value={market}\r\n                  label=\"Market\"\r\n                  onChange={handleChangeMarket}\r\n                >\r\n                  {\r\n                    farmersMarket.length !== 0 && farmersMarket.map((e, i) => {\r\n                      return (\r\n                        <MenuItem key={i} value={e}>{e}</MenuItem>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n              <button className='filter_btn' onClick={handleSearchmarkets}>Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import \"../../styles/Admin.css\";\r\nimport Card from \"../../components/Card\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport FilterModal from \"../../components/FilterModal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Divider, Grid } from \"@mui/material\";\r\nimport AdminMarket from \"./AdminMarket.js\";\r\n\r\nimport { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nconst AdminHome = ({\r\n  handleChangeMarket,\r\n  fromDate,\r\n  setfromDate,\r\n  toDate,\r\n  settoDate,\r\n  value,\r\n  setValue,\r\n  handleSearch,\r\n  market,\r\n  farmersMarket,\r\n  open,\r\n  setOpen,\r\n  handleClose,\r\n  handleOpen,\r\n  handleSearchmarkets,\r\n  handleSearchDate,\r\n  filteredInData,\r\n  filteredOutData,\r\n  purchaseQty,\r\n  purchaseAmount,\r\n  salesQty,\r\n  salesAmount,\r\n  noOfBookedStalls,\r\n  totalFarmers,\r\n  farmers,\r\n  Farmers,\r\n  Customer,\r\n}) => {\r\n  const FarmersObj = [];\r\n  const farmersData = new Map();\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  Farmers &&\r\n    Farmers.forEach((e) => {\r\n      if (farmersData.has(e.farmertype)) {\r\n        farmersData.set(e.farmertype, farmersData.get(e.farmertype) + 1);\r\n      } else {\r\n        farmersData.set(e.farmertype, 1);\r\n      }\r\n    });\r\n  //this is for how many farmers of each type\r\n  // no need to go through this\r\n  farmersData.forEach((value, key) => {\r\n    FarmersObj.push({ farmertype: key, count: value });\r\n  });\r\n  let maxmarkets = 10000;\r\n  let maxStalls = 10000;\r\n  let maxPurchaseQty = 100000;\r\n  let maxPurchaseAmount = 500000;\r\n  let maxSalesAmount = 500000;\r\n  let maxSalesQty = 2000000;\r\n  const colors = {\r\n    green: '#4CAF50',\r\n    red: '#DB190C',\r\n    purple: '#8624DB',\r\n    white: '#fff',\r\n    orange: '#FF9066'\r\n  }\r\n  const data1 = {\r\n    summary: [\r\n      {\r\n        title: 'Farmers Markets',\r\n        subtitle: 'Total Farmers Markets',\r\n        value: totalFarmers,\r\n        percent: (totalFarmers * 100) / maxmarkets\r\n\r\n      },\r\n      {\r\n        title: 'Stalls Booked',\r\n        subtitle: 'Stalls of farmers',\r\n        value: 478 + noOfBookedStalls,\r\n        percent: (noOfBookedStalls * 100) / maxStalls\r\n\r\n      }\r\n    ]\r\n  }\r\n  const data2 = {\r\n    summary: [\r\n      {\r\n        title: 'Purchased Quantity (Kgs)',\r\n        subtitle: 'Total Quantity Purched',\r\n        value: purchaseQty,\r\n        percent: (purchaseQty * 100) / maxPurchaseQty\r\n      },\r\n      {\r\n        title: 'Purchase (INR)',\r\n        subtitle: 'Total Purchase Amount',\r\n        value: purchaseAmount,\r\n        percent: (purchaseAmount * 100) / maxPurchaseAmount\r\n      },\r\n    ]\r\n  }\r\n  const data3 = {\r\n    summary: [\r\n      {\r\n        title: 'Sales Quantity (Kgs)',\r\n        subtitle: 'Total Sales Quantity',\r\n        value: salesQty,\r\n        percent: (salesQty*100)/maxSalesQty\r\n      },\r\n      {\r\n        title: 'Sales (INR)',\r\n        subtitle: 'Total Sales Amount',\r\n        value: salesAmount,\r\n        percent: (salesAmount * 100) / maxSalesAmount\r\n      }\r\n    ]\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"admin_main_component\" >\r\n        <FilterModal\r\n          style={{ width: \"10%\" }}\r\n          handleChangeMarket={handleChangeMarket}\r\n          fromDate={fromDate}\r\n          setfromDate={setfromDate}\r\n          toDate={toDate}\r\n          settoDate={settoDate}\r\n          value={value}\r\n          setValue={setValue}\r\n          handleSearch={handleSearch}\r\n          market={market}\r\n          farmersMarket={farmersMarket}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          handleClose={handleClose}\r\n          handleOpen={handleOpen}\r\n          handleSearchmarkets={handleSearchmarkets}\r\n          handleSearchDate={handleSearchDate}\r\n          handleCloseModal={handleCloseModal}\r\n\r\n        />\r\n        <div className='admin_links'>\r\n          <div className=\"two\">\r\n            <Link className=\"admin_links_details twoDetails\" style={{fontWeight:'bold'}} to=\"../adminrev\">\r\n              Graph for market vs market\r\n            </Link>\r\n            <Link className='admin_links_details twoDetails' style={{fontWeight:'bold'}} to=\"../adminrevtotal\">Graph for a year</Link>\r\n            <Link className='admin_links_details twoDetails' style={{fontWeight:'bold'}} to=\"../livemarkets\">Add Live Market Data</Link>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"farmers-stats-main farmers-stats-main1\">\r\n          <h2 className=\"overalldata_header stats\" style={{width\r\n          :'200px',fontWeight:'bold'}}>Farmers Statistics</h2>\r\n          <div className=\"farmers-stats-holder\">\r\n            {filteredInData && filteredOutData && (\r\n              <div className=\"total-stall-market\" style={{fontWeight:'bold'}}>\r\n                {/* <Card header={\"Total Market\"} value={totalFarmers.size} />\r\n                <Card header={\"Stalls Booked\"} value={noOfBookedStalls} /> */}\r\n                {\r\n                  data1.summary.map((item, index) => {\r\n                    return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                      {\r\n                        <>\r\n                          <span>{item.title} </span>\r\n\r\n\r\n                          <CircularProgressbarWithChildren\r\n                            className='circularbar'\r\n                            value={item.percent}\r\n                            strokeWidth={6}\r\n                            text={`${item.value}`}\r\n                            styles={buildStyles({\r\n                              pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                              trailColor: '#d3d3d3',\r\n                              strokeLinecap: 'round'\r\n                            })}\r\n                          >\r\n                            <br />\r\n                            {/* <div className=\"summary-box__chart__value\">\r\n                            {item.percent}%\r\n                        </div> */}\r\n                          </CircularProgressbarWithChildren>\r\n                        </>\r\n                      }\r\n                    </div>)\r\n                  })\r\n                }\r\n              </div>\r\n\r\n            )}\r\n            <div className=\"quantity\" style={{fontWeight:'bold'}}>\r\n              {/* <h2>Quantity</h2> */}\r\n              {filteredInData && filteredOutData && (\r\n                <div className=\"total-quantity\">\r\n\r\n                  {/* <Card header={\"Purchase:\"} value={purchaseQty} />\r\n                <Card header={\"Sales:\"} value={salesQty} /> */}\r\n                  {\r\n                    data2.summary.map((item, index) => {\r\n                      return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                        {\r\n                          <>\r\n                            <span>{item.title} </span>\r\n\r\n\r\n                            <CircularProgressbarWithChildren\r\n                              className='circularbar'\r\n                              value={item.percent}\r\n                              strokeWidth={6}\r\n                              text={`${item.value}`}\r\n                              styles={buildStyles({\r\n                                pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                                trailColor: '#d3d3d3',\r\n                                strokeLinecap: 'round'\r\n                              })}\r\n                            >\r\n                              <br />\r\n                              {/* <div className=\"summary-box__chart__value\">\r\n                            {item.percent}%\r\n                        </div> */}\r\n                            </CircularProgressbarWithChildren>\r\n                          </>\r\n                        }\r\n                      </div>)\r\n                    })\r\n                  }\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"amount\" style={{fontWeight:'bold'}}>\r\n              {/* <h2 >Amount</h2> */}\r\n              {filteredInData && filteredOutData && (\r\n                <div className=\"total-amount\">\r\n                  {/* <Card header={\"Purchase:\"} value={purchaseAmount} />\r\n                <Card header={\"Sales:\"} value={salesAmount} /> */}\r\n                  {\r\n                    data3.summary.map((item, index) => {\r\n                      return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                        {\r\n                          <>\r\n                            <span>{item.title} </span>\r\n\r\n\r\n                            <CircularProgressbarWithChildren\r\n                              className='circularbar'\r\n                              value={item.percent}\r\n                              strokeWidth={6}\r\n                              text={`${item.value}`}\r\n                              styles={buildStyles({\r\n                                pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                                trailColor: '#d3d3d3',\r\n                                strokeLinecap: 'round'\r\n                              })}\r\n                            >\r\n                              <br />\r\n                              {/* <div >\r\n                            {item.percent}%\r\n                        </div> */}\r\n                            </CircularProgressbarWithChildren>\r\n                          </>\r\n                        }\r\n                      </div>)\r\n                    })\r\n                  }\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"farmers-stats-main\" style={{textAlign:'center'}}>\r\n          <h2 className=\"overalldata_header farmers-type\" style={{width\r\n          :'200px',fontWeight:'bold'}}>Types of Farmers</h2>\r\n          {FarmersObj && (\r\n            <div className=\"cards_container\">\r\n              {FarmersObj.map((e, i) => {\r\n                return <Card key={i} header={e.farmertype} value={e.count} />;\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"total-customers\" style={{textAlign:'center'}}>\r\n          <h2 className=\"overalldata_header no-consumers\" style={{width\r\n          :'200px',fontWeight:'bold'}}>\r\n            Total No. Of Customers\r\n          </h2>\r\n          {Customer && <div className=\"customers_count\">{Customer.length}</div>}\r\n        </div>\r\n\r\n        <div className='admin-links'>\r\n\r\n\r\n        <div className=\"one\">\r\n            <Link className=\"admin_links_details admin_links_details_lists \" to=\"../listoffarmers\" style={{ width:'250px', fontWeight:'bold' }}>\r\n              Farmers List\r\n            </Link>\r\n            <Link className=\"admin_links_details admin_links_details_lists \" to=\"/admin/checklist\"style={{ width: '250px', fontWeight:'bold' }}>\r\n              CheckList\r\n            </Link>\r\n          {/* </div>\r\n          <div className=\"one\"> */}\r\n            <Link className='admin_links_details admin_links_details_lists' to=\"../listofCustomers\" style={{ width: '250px', fontWeight:'bold' }} >Customers List</Link>\r\n            <Link className='admin_links_details admin_links_details_lists' to=\"../cancelledstalls\" style={{ width: '250px', fontWeight:'bold' }}>Cancelled Stalls List</Link>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {!filteredInData && !filteredOutData && !Farmers && <Spinner />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminHome;","import React, { useEffect, useState } from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\n\r\nconst AdminSub = ({Farmers}) => {\r\n    const[subData,setSubData] = useState([]);\r\n    const { REACT_APP_API_URL } = process.env;\r\n    console.log(REACT_APP_API_URL)\r\n    useEffect(()=>{\r\n        async function  getData() {\r\n\r\n            await axios.get(REACT_APP_API_URL + \"subData\")\r\n                        .then((res)=>{\r\n                            console.log(\"hello\")\r\n                            const {data} = res\r\n                            console.log(data)\r\n                             setSubData(data)\r\n                        })\r\n                        .catch((err)=>{\r\n                            console.log(\"couldnt fetch data\")\r\n                        })\r\n        }\r\n\r\n        getData();\r\n    },[])\r\n  return  (\r\n    <>\r\n        {subData && <div className='cancellation_feed'>\r\n        <div className='cancellation_feed_container'>\r\n                  \r\n            <h2 className='cancellation_header'>Subscription Data</h2>\r\n                  \r\n            <div className='cancellation_body'>\r\n                {\r\n                    subData && subData.length !== 0 && subData.map((e,i)=>{\r\n                    const farmer =  Farmers && Farmers.filter( ele => ele._id === e.userId)\r\n                    console.log(farmer)\r\n\r\n                    return(\r\n                        farmer && farmer.length !== 0 && <div key={i} className='cancellation_card'>\r\n                            <h2 style={{textAlign:\"center\",padding:\"0.5rem\",textTransform:\"capitalize\"}}>{farmer[0].firstname+\" \"+ farmer[0].lastname}</h2>\r\n                            <div><b>Phone No : </b>{farmer[0].phone}</div>\r\n                            <div><b> Startdate: </b>{e.date}</div>\r\n                            <div><b> validity : </b>{e.validity}</div>\r\n                            <div><b> Stalls left :</b>{e.stalls}</div>\r\n                            <div><b> Status :</b>{e.status}</div>\r\n                            \r\n                            \r\n                        </div> \r\n                    )\r\n                    })\r\n                }\r\n\r\n                \r\n            </div>\r\n                 <Link style={{ marginTop: '10px', marginLeft:'125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                      Back\r\n                  </Link> \r\n        </div>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminSub","import \"../../styles/Test.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n// Added\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { InputLabel } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { format } from 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst userCurr = AuthService.getCurrentUser();\r\n\r\nfunction Test({ farmersMarket }) {\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  const [data, setdata] = useState();\r\n  const [Loading, setLoading] = useState();\r\n  const { Id } = useParams();\r\n  const today = new Date();\r\n  const todayFormatted = today.toISOString().slice(0, 10);\r\n  const [date, setdate] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [market, setMarket] = React.useState('');\r\n    const[watch,setWatch] = useState(false)\r\n  const arr = { 'Hadapsar': 3, 'Kharadi': 4, 'Karve Nagar': 2, 'Bramhasun City': 5, 'wanawadi': 6, 'Magarpatta': 0, 'Amanora City': 0 }\r\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n  const array ={'Tarkari' : 0,'Exotic' : 0,'Onion-Potato':0,'Masala':0,'Antic':0,'SHG':0,}\r\n    const arr1 = ['Tarkari','Exotic','Onion-Potato','Masala','Antic','SHG']\r\n    const array2 = {'Tarkari':18,'Exotic':1,'Onion-Potato':2,'Masala':1,'Antic':1,'SHG':4}\r\n    //const arr2 = [18,1,2,1,1,4]\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [array1,setarray1]  = useState({})\r\n  const [showItems,setShowItems]=useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    //fetching all the data\r\n\r\n\r\n    FarmerService.getBookedStalls().then((response) => {\r\n        setdata(response.data);\r\n        setLoading(false)\r\n      });\r\n  }, [date, Id]);\r\n\r\n  const items = []\r\n  items.push(\r\n    <tr>\r\n      <th className='head'>Stall name</th>\r\n      <th className='head'>Used</th>\r\n      <th className='head' >Left</th>\r\n    </tr>\r\n  )\r\n  arr1.forEach((e) => {\r\n    items.push(\r\n      // <div className =\"checklist\" key={e}>\r\n      <tr>\r\n        <th className='child'>{e}</th>\r\n        <th className='child'>{array1[e]}</th>\r\n        <th className='child' >{array2[e] - array1[e]}</th>\r\n      </tr>\r\n\r\n    )\r\n  })\r\n\r\n  const handleSearch = () =>{\r\n    setarray1(array)\r\n   //navigate(\"/admin/checklistsoln\",{state :{arr1:arr1,array1:array1,array2:array2}})\r\n    setWatch(true)\r\n    setShowItems(true)\r\n   // console.log(data)\r\n   // console.log(date)\r\n    // const newData = data && data.filter((d) =>{\r\n    //     const d1 = d.bookedAt\r\n    //     const d2 = date\r\n    //     return d1 == d2\r\n    // })\r\n    // console.log(newData)\r\n    // const newFinal = newData && newData.filter((d) =>{\r\n    //     const s1 = d.location\r\n    //     const s2 = market\r\n    //     return s1 == s2\r\n    // })\r\n    // console.log(newFinal)\r\n    // newFinal && newFinal.forEach((e) =>{\r\n    //     array[e.stallName] +=1\r\n    // })\r\n    \r\n    // console.log(array)\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      {!Loading ? (\r\n        <div className=\"Test\">\r\n          \r\n\r\n          <div className=\"main_container_stalls\">\r\n            <Link className=\"backbtn green\" to=\"/admin\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n              Back\r\n            </Link>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  Enter Booking Date\r\n                </InputLabel>\r\n                \r\n                {console.log(date)}\r\n\r\n                \r\n\r\n\r\n                <DatePicker\r\n                  fullWidth\r\n                  className=\"textfield\"\r\n                  renderInput={(props) => <TextField {...props} size=\"big\" helperText={null} />}\r\n                  value={date}\r\n                  onChange={(newValue) => {\r\n                    // console.log(newValue.$d);\r\n                    const myDate = newValue.$d;\r\n                    const yyyy = myDate.getFullYear();\r\n                    const mm = String(myDate.getMonth() + 1).padStart(2, \"0\");\r\n                    const dd = String(myDate.getDate()).padStart(2, \"0\");\r\n\r\n                    const formattedDate = `${yyyy}-${mm}-${dd}`;\r\n                    //console.log(formattedDate);\r\n                    const d = new Date(newValue.toISOString().slice(0, 10));\r\n                    setdate(formattedDate);\r\n                    setMarket('')\r\n                    \r\n                    // FarmerService.getBookedStallsTemp().then((response) => {\r\n                    //   console.log(date);\r\n                    //   const res =\r\n                    //     response.data &&\r\n                    //     response.data.filter((e) => e.location === `${Id}` && e.bookedAt === formattedDate);\r\n                    //   setAlreadyBooked(response.data);\r\n                    //   setAlreadyBookedLocation(res.length);\r\n                    //   setAvailable(totalStall - res.length);\r\n                    //   // console.log('alreadyBooked:', res)\r\n                    // });\r\n\r\n                    // handleOpen(true);\r\n                  }}\r\n                  defaultValue={new Date()}\r\n                /> \r\n\r\n                {/* <DatePicker\r\n                \r\n                label=\"Year and Month\"\r\n                minDate={todayFormatted}\r\n                \r\n                value={value}\r\n                onChange={(newValue) => {\r\n                   setValue(newValue);\r\n                }}\r\n                renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n                /> */}\r\n\r\n\r\n                {message && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid style={{ margin: \"auto\", marginTop: '1.8rem' }} item xs={12} sm={6}>\r\n\r\n\r\n              <FormControl sx={{ m: 1, minWidth: 150 }} size=\"large\">\r\n                <InputLabel id=\"demo-select-small\">Market</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-select-small\"\r\n                    id=\"demo-select-small\"\r\n                    value={market}\r\n                    label=\"Market\"\r\n                    onChange={(e)=>{\r\n                      setMarket(e.target.value)\r\n                      const newData = data && data.filter((d) =>{\r\n                      const d1 = d.bookedAt\r\n                      const d2 = date\r\n                      return d1 == d2\r\n                      })\r\n                      console.log(newData)\r\n                  const newFinal = newData && newData.filter((d) =>{\r\n                      const s1 = d.location\r\n                         const s2 = e.target.value\r\n                           return s1 == s2\r\n                           })\r\n                      console.log(newFinal)\r\n                  newFinal && newFinal.forEach((e) =>{\r\n                    array[e.stallName] +=1\r\n                      })\r\n    \r\n    console.log(array)\r\n    setarray1(array)\r\n    console.log(array1)\r\n                      \r\n                      }\r\n                    \r\n                    \r\n                    }\r\n                >\r\n                    {\r\n                    farmersMarket.length!==0 && farmersMarket.map((e , i)=>{\r\n                        return(\r\n                        <MenuItem key={i} value={e}>{e}</MenuItem>\r\n                        )\r\n                    })\r\n                    }\r\n                </Select>\r\n                </FormControl>\r\n                \r\n               \r\n              </Grid>\r\n                {/* /////////////////////////////////////////////////////////////////////////////////// */}\r\n            \r\n            <button className='filter_btn1' onClick ={handleSearch } >Search</button>\r\n              {/* <Link to=\"/checklistsoln\" state={}>Search </Link> */}\r\n              \r\n              \r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" alignItems=\"center\" flexDirection='column'>\r\n              {showItems ? <table id=\"table\">\r\n                {items}\r\n              </table> : console.log('no')}\r\n            </Grid>\r\n            \r\n            \r\n\r\n\r\n          </div>\r\n         \r\n        </div>\r\n\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n      \r\n      \r\n\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react'\r\nimport { Link, useNavigate,useLocation } from \"react-router-dom\";\r\nimport \"../../styles/Admin.css\";\r\n\r\nconst CheckListSoln = () => {\r\n    const navigate = useNavigate();\r\n    const {state} = useLocation();\r\n    const {arr1,array1,array2} = state\r\n    console.log(array1)\r\n    const items =[]\r\n    items.push(\r\n        <tr>\r\n                <th className='head'>Stall name</th> \r\n                <th className='head'>Used</th>\r\n                <th className='head' >Left</th>\r\n            </tr>\r\n    )\r\n    arr1.forEach((e)=>{\r\n        items.push(\r\n            // <div className =\"checklist\" key={e}>\r\n            <tr>\r\n                <th className='child'>{e}</th> \r\n                <th className='child'>{array1[e]}</th>\r\n                <th className='child' >{array2[e]-array1[e]}</th>\r\n            </tr>\r\n            \r\n        )\r\n    })\r\n  return (\r\n    <div className='test'>\r\n    <div className=\"main_container_stalls\">\r\n    <Link className=\"backbtn green\" to=\"/admin/checkList\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n              Back\r\n    </Link>\r\n        <div className =\"checkListSolnMain\">\r\n        <table id=\"table\">\r\n            {items}\r\n        </table>\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListSoln","import React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { YearPicker } from \"react-dropdown-date\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\nconst AdminrevTotal = ({Inward,Outward,}) => {\r\n  var filterIn=[]\r\n  var filterOut =[]\r\n  const revenue = [0,0,0,0,0,0,0,0,0,0,0,0]\r\nconst [date, setDate] = useState({ year: \"\"});\r\nconst submit =async () => {\r\n    console.log(date.year);\r\n      //console.log(revenue)\r\n  };\r\n  filterIn = Inward && Inward.filter((e)=>{\r\n    const [d] = e.time.split(\"T\");\r\n    const da = d.substring(0,4)\r\n    return da === date.year\r\n  })\r\n   filterOut = Outward && Outward.filter((e)=>{\r\n    const [d] = e.time.split(\"T\");\r\n    const da = d.substring(0,4)\r\n    return da === date.year\r\n  })\r\n  filterIn && filterIn.forEach((data) =>{\r\n    \r\n    const [d] = data.time.split(\"T\")\r\n    const purchase_quantity = data.purchase_quantity\r\n    const purchase_rate = data.purchase_rate\r\n\r\n    var da = Number(d.substring(5,7)) \r\n    da = da - 1\r\n    const purchase = purchase_quantity*purchase_rate\r\n    revenue[da] = purchase\r\n    console.log(da)\r\n  })\r\n  filterOut && filterOut.forEach((data) =>{\r\n    \r\n    const [d] = data.time.split(\"T\")\r\n    var da = Number(d.substring(5,7))\r\n    da = da - 1\r\n    const sales_quantity = data.sales_quantity\r\n    const sales_rate = data.sales_rate\r\n    const sale = sales_quantity*sales_rate\r\n    revenue[da] -= sale\r\n    console.log(da)\r\n  })\r\n  const data = {\r\n    labels: ['January', 'February', 'March','April','May','June','July','August','September','October','Novemeber','December'],\r\n    datasets: [\r\n      {\r\n        label: 'Data',\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        data: revenue\r\n      }\r\n    ]\r\n  };\r\n \r\n\r\n  const options = {\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"adminMain\">\r\n    <div className=\"year\">\r\n    <YearPicker\r\n        defaultValue={\"YYYY\"}\r\n        start={2015} // default is 1900\r\n        end={2025} // default is current year\r\n        reverse // default is ASCENDING\r\n        value={date.year} // mandatory\r\n        onChange={(year) => {\r\n          // mandatory\r\n          setDate((prev) => ({ ...prev, year }));\r\n        }}\r\n        id={\"year\"}\r\n        classes={`dropdown`}\r\n      />\r\n      <button type=\"button\" onClick={() => submit()}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n    <div\r\n              style={\r\n                {\r\n                  padding: '20px',\r\n                  width: '80%'\r\n                }\r\n              }\r\n\r\n            >\r\n            <h1>hello</h1>\r\n              <Bar\r\n                data={data}\r\n                options={options}\r\n              >\r\n\r\n              </Bar>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminrevTotal","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FarmersListData = ({Farmers}) => {\r\n  return (\r\n    <>\r\n          <div className='farmers_data_entries'>\r\n                <div className='farmers_entries'>\r\n                    <div className='farmers_entries_nav'>\r\n                   \r\n                    <span className='farmers_entries_nav_farmername'>\r\n                       Name\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmerstype'>\r\n                       Type\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersContact'>\r\n                        Contact\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                        Address\r\n                    </span>\r\n                    </div>\r\n\r\n                    <div className='farmers_entries_body'>\r\n                        {\r\n                        Farmers && Farmers.map((e,i)=>{\r\n                            return(\r\n                            <div key={i} className='farmers_entries_section'>\r\n                                <span className='farmers_entries_nav_farmername'>\r\n                                    {e.firstname} {e.lastname}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.farmertype}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmersContact'>\r\n                                {e.phone}\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                    {e.address}\r\n                    </span>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n                      <Link style={{ marginTop: '10px', marginLeft:'125px'}} className=\"backbtn green\" to=\"/admin\" >\r\n                          Back\r\n                      </Link>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FarmersListData","import React from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomersList = ({Customer}) => {\r\n  return (\r\n    <>\r\n          <div className='farmers_data_entries'>\r\n                <div className='farmers_entries'>\r\n                    <div className='farmers_entries_nav'>\r\n                    <span className='farmers_entries_nav_farmername'>\r\n                        Customers Name\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmerstype'>\r\n                        Phone No.\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                        Address\r\n                    </span>\r\n                    </div>\r\n\r\n                    <div className='farmers_entries_body'>\r\n                        {\r\n                        Customer && Customer.length!==0 && Customer.map((e,i)=>{\r\n                            return(\r\n                            <div key={i} className='farmers_entries_section'>\r\n                                <span className='farmers_entries_nav_farmername'>\r\n                                    {e.firstname} {e.lastname}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.phone}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.address}\r\n                                </span>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n                        {\r\n                            !Customer && <Spinner/>\r\n                        }\r\n                        {\r\n                            Customer && Customer.length === 0 && <div className='farmers_entries_section'>No data available</div>\r\n                        }\r\n                      <Link style={{ marginTop: '10px', marginLeft: '125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                          Back\r\n                      </Link>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomersList","import React from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\n const CancellationFeed = ({CancelledStalls , Farmers , handleRefundDelete}) =>  {\r\n  return (\r\n    <>\r\n        {CancelledStalls && <div className='cancellation_feed'>\r\n        <div className='cancellation_feed_container'>\r\n                  \r\n            <h2 className='cancellation_header'>Cancellation Data</h2>\r\n                  \r\n            <div className='cancellation_body'>\r\n                {\r\n                    CancelledStalls && CancelledStalls.length !== 0 && CancelledStalls.map((e,i)=>{\r\n                    const farmer =  Farmers && Farmers.filter( ele => ele._id === e.bookedBy)\r\n                    console.log(farmer)\r\n\r\n                    return(\r\n                        farmer.length !== 0 && <div key={i} className='cancellation_card'>\r\n                            <h2 style={{textAlign:\"center\",padding:\"0.5rem\",textTransform:\"capitalize\"}}>{farmer[0].firstname+\" \"+ farmer[0].lastname}</h2>\r\n                            <div><b>Phone No : </b>{farmer[0].phone}</div>\r\n                            <div><b>Stall Address : </b>{e.address}</div>\r\n                            <div><b>Cancellation Date : </b>{e.cancelledAt}</div>\r\n                            <div><b>Booked Date : </b>{e.bookedAt}</div>\r\n                            <div><b>Stall Name :</b>{e.stallName}</div>\r\n                            <div><b>Refund Status :</b>Not Refunded</div>\r\n                            <div className='refund_btn_wrapper'>\r\n                                <button className='refund_btn' id={e._id} onClick={handleRefundDelete}>Mark as Refunded</button>\r\n                            </div>\r\n                        </div> \r\n                    )\r\n                    })\r\n                }\r\n                {\r\n                    CancelledStalls && CancelledStalls.length === 0 && <h2 style={{margin:\"auto\"}}>No Cancellation Data!</h2>\r\n                }\r\n                {\r\n                    !CancelledStalls && <Spinner/>\r\n                }\r\n            </div>\r\n                 <Link style={{ marginTop: '10px', marginLeft:'125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                      Back\r\n                  </Link> \r\n        </div>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CancellationFeed","import React,{useState , useEffect,useRef} from 'react'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport AdminMain from './AdminMain';\r\nimport Adminrev from './Adminrev.js';\r\nimport AdminMarket from './AdminMarket.js'\r\nimport AdminHome from './AdminHome';\r\nimport AdminSub from './AdminSub';\r\nimport CheckList from './CheckList'\r\nimport CheckListSoln from './CheckListSoln';\r\nimport AdminrevTotal from './AdminrevTotal';\r\nimport FarmersListData from './FarmersListData';\r\nimport CustomersList from './CustomersList';\r\nimport CancellationFeed from './CancellationFeed';\r\nimport UserService from '../../services/user.service';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\nimport FarmerService from '../../services/farmer.service';\r\nimport dayjs from 'dayjs'\r\nconst Admin = () => {\r\n    const [Inward, setInward] = useState()\r\n    const { REACT_APP_API_URL } = process.env;\r\n\r\n    const [Outward, setOutward] = useState()\r\n    const [value, setValue] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"));\r\n    const [filteredInData, setfilteredInData] = useState()\r\n    const [filteredOutData, setfilteredOutData] = useState()\r\n    const [fromDate, setfromDate] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"))\r\n    const [toDate, settoDate] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"))\r\n    const [market, setMarket] = React.useState('');\r\n    const [CancelledStalls, setCancelledStalls] = useState()\r\n    const [stallsBooked, setStallsBooked] = useState([]);\r\n    const[all,setAll] = useState([])\r\n    const[stalls,setStalls] = useState([])\r\n   // var all=[]\r\n   const array=[2,2,3,4,5,7,8]\r\n   var total = 8\r\n   var start = 0\r\n   var date1 = new Date(\"04/15/2023\")\r\n   var today = new Date();\r\n   today = dayjs(today).format(\"MM/DD/YYYY\")\r\n   var date2 = new Date(today);\r\n   var Difference_In_Time = date2.getTime() - date1.getTime();\r\n   var Difference_In_Days = Math.floor(Difference_In_Time / (1000 * 3600 * 24));\r\n   var weeks= Math.floor(Difference_In_Days / 7)\r\n   var days = Difference_In_Days % 7\r\n   var finalTotal= start + weeks*total +array[days]\r\n   console.log(finalTotal)\r\n   console.log(Difference_In_Days,weeks,days)\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {setOpen(true); };\r\n    const handleClose = () => {setOpen(false);\r\n    };\r\n    const [Farmers, setFarmers] = useState()\r\n    const [Customer, setCustomer] = useState()\r\n    \r\n    const handleChangeMarket = (event) => {\r\n      setMarket(event.target.value);\r\n    };\r\n   \r\n    useEffect(() => {\r\n    \r\n      FarmerService.getBookedStalls().then(res => {\r\n        const data = res?.data;\r\n        setStallsBooked(data)\r\n        setAll(data)\r\n      })\r\n      // FarmerService.getMyStalls().then(res => {\r\n      //   const data = res?.data;\r\n      //   setStalls(data)\r\n      //   console.log(\"hello --\" ,data)\r\n      // })\r\n      \r\n      FarmerService.getInwardData().then(res => \r\n        {\r\n          setInward(res?.data);\r\n          setfilteredInData(res?.data)\r\n        })\r\n      FarmerService.getOutwardData().then(res => \r\n        {\r\n          setOutward(res?.data);\r\n          setfilteredOutData(res?.data)\r\n        })\r\n  \r\n      FarmerService.getcancelledStalls().then(res=>{\r\n        setCancelledStalls(res?.data)\r\n      })\r\n  \r\n        UserService.getFarmers().then(res=>{\r\n          setFarmers(res?.data)\r\n        })\r\n  \r\n        UserService.getUsers().then(res=>{\r\n          setCustomer(res?.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n      FarmerService.getMyStalls().then((res)=>{\r\n        if(res){\r\n          const {data} = res\r\n          console.log(\"hey\",data)\r\n          setStalls(data)\r\n        }\r\n      })\r\n    },[])\r\n\r\n    const totalFarmers = new Set();\r\n    const farmers = new Set();\r\n    const marketsData = new Set();\r\n    const farmersMarket = []\r\n    let purchaseQty = 0;\r\n    let purchaseAmount = 0;\r\n    let salesQty = 0;\r\n    let salesAmount = 0;\r\n    let noOfBookedStalls = stallsBooked?.length;\r\n  \r\n    Inward && Inward.forEach((e)=>{\r\n      marketsData.add(e.market)\r\n    });\r\n  \r\n    filteredInData && filteredInData.forEach(e => {\r\n      totalFarmers.add(e.market)\r\n      farmers.add(e.userId)\r\n  \r\n      purchaseQty += e.purchase_quantity\r\n      purchaseAmount += e.purchase_rate\r\n    });\r\n  \r\n    filteredOutData && filteredOutData.forEach(e => {\r\n      salesQty += e.sales_quantity\r\n      salesAmount += e.sales_rate\r\n    });\r\n    const finalStall = new Set()\r\n    stalls && stalls.forEach(e =>{\r\n        finalStall.add(e.location)\r\n    })\r\n    const finalStall1 = [...finalStall]\r\n    console.log(finalStall1)\r\n    const handleSearchmarkets = () => {\r\n      const marketresponse = Inward && Inward.filter(e => e.market === market);\r\n      setfilteredInData(marketresponse)\r\n      handleClose()\r\n    }\r\n  \r\n    const handleSearchDate = () => {\r\n      const inData = Inward && Inward.filter((e)=>{\r\n        const [date] = e.time.split(\"T\");\r\n        return date === dayjs(value).format(\"YYYY-MM-DD\")\r\n      })\r\n  \r\n      const outData = Outward && Outward.filter((e)=>{\r\n        const [date] = e.time.split(\"T\");\r\n        return date === dayjs(value).format(\"YYYY-MM-DD\")\r\n      })\r\n      console.log(all)\r\n      setStallsBooked(all)\r\n      console.log(\"before\",stallsBooked)\r\n      const stallsData = all && all.filter((e)=>{\r\n\r\n        return e.bookedAt === dayjs(value).format(\"YYYY-MM-DD\")\r\n      })\r\n      console.log(\"after\",stallsData)\r\n      setStallsBooked(stallsData)\r\n      setfilteredInData(inData)\r\n      setfilteredOutData(outData)\r\n      \r\n\r\n      handleClose()\r\n    }\r\n    \r\n  \r\n    const handleSearch = () => {\r\n      const filterIn =  Inward.filter((e)=>{\r\n        const [date] = e.time.split(\"T\");\r\n        return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n      })\r\n  \r\n      const filterOut = Outward && Outward.filter((e)=>{\r\n        const [date] = e.time.split(\"T\");\r\n        return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n      })\r\n  \r\n      const stallsData = stallsBooked && stallsBooked.filter((e)=>{\r\n        const [date] = e.bookedAt.split(\"T\");\r\n        return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n      })\r\n  \r\n      setStallsBooked(stallsData)\r\n      setfilteredInData(filterIn);\r\n      setfilteredOutData(filterOut)\r\n      handleClose()\r\n    }\r\n    \r\n    for(let item of marketsData){\r\n      farmersMarket.push(item)\r\n    }\r\n    \r\n    const handleRefundDelete = (e) => {\r\n      const id = e.target.id;\r\n      const response = window.confirm(\"Confirm Refunded?\")\r\n      // if(response === true){\r\n      //   axios.delete(\"https://wingrowagritech.herokuapp.com/cancelledstalls\" , { headers: authHeader()  , data:{id: id}}).then(res=>{\r\n      //     const data = res?.data;\r\n      //     const filter = CancelledStalls.filter(e=>e._id !== data._id);\r\n      //     setCancelledStalls(filter)\r\n      //   })\r\n      // }\r\n      if(response === true){\r\n        axios.delete(REACT_APP_API_URL+\"cancelledstalls\" , { headers: authHeader()  , data:{id: id}}).then(res=>{\r\n          const data = res?.data;\r\n          const filter = CancelledStalls.filter(e=>e._id !== data._id);\r\n          setCancelledStalls(filter)\r\n        })\r\n      }\r\n    }\r\n    \r\n  \r\n  return (\r\n    <Routes>\r\n    <Route path='/' element={<AdminMain/>}>\r\n          <Route index \r\n            element=\r\n            {<AdminHome\r\n                handleChangeMarket={handleChangeMarket}\r\n                fromDate={fromDate}\r\n                setfromDate={setfromDate}\r\n                toDate={toDate}\r\n                settoDate={settoDate}\r\n                value={value}\r\n                setValue={setValue}\r\n                handleSearch={handleSearch}\r\n                market={market}\r\n                farmersMarket={farmersMarket}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                handleClose={handleClose}\r\n                handleOpen={handleOpen}\r\n                handleSearchmarkets={handleSearchmarkets}\r\n                handleSearchDate={handleSearchDate}\r\n                filteredInData={filteredInData}\r\n                filteredOutData={filteredOutData}\r\n                purchaseQty={purchaseQty}\r\n                purchaseAmount={purchaseAmount}\r\n                salesQty={salesQty}\r\n                salesAmount={salesAmount}\r\n                noOfBookedStalls={noOfBookedStalls}\r\n                totalFarmers={finalTotal}\r\n                farmers={farmers}\r\n                Farmers={Farmers}\r\n                Customer={Customer}\r\n            />}\r\n            />\r\n          <Route path='/adminrev' element={<Adminrev \r\n          filterIn={filteredInData} filterOut={filteredOutData}\r\n\r\n          handleChangeMarket={handleChangeMarket}\r\n                fromDate={fromDate}\r\n                setfromDate={setfromDate}\r\n                toDate={toDate}\r\n                settoDate={settoDate}\r\n                value={value}\r\n                market={market}\r\n                farmersMarket={farmersMarket}\r\n                setValue={setValue}\r\n                handleSearch={handleSearch}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                handleClose={handleClose}\r\n                handleOpen={handleOpen}\r\n                handleSearchmarkets={handleSearchmarkets}\r\n                handleSearchDate={handleSearchDate}\r\n                \r\n                \r\n                \r\n          />}/>\r\n          <Route path = '/adminrevtotal' element ={ <AdminrevTotal Inward={Inward} Outward={Outward} />} />\r\n          <Route path = \"/livemarkets\" element={<AdminMarket/>} ></Route>\r\n          <Route path='/listoffarmers' element={<FarmersListData Farmers={Farmers}/>}/>\r\n          <Route path = \"/checkList\" element={<CheckList farmersMarket={farmersMarket}  />}/>\r\n          <Route path='/listofCustomers' element={<CustomersList Customer={Customer}/>}/>\r\n          <Route path=\"/subscriptionList\" element ={<AdminSub Farmers={Farmers}/>} />\r\n          <Route path='/cancelledstalls' element={<CancellationFeed Farmers={Farmers} CancelledStalls={CancelledStalls} handleRefundDelete={handleRefundDelete}/>}/>\r\n            <Route path =\"/checklistsoln\" element ={<CheckListSoln />} ></Route>\r\n         </Route>\r\n         \r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default Admin","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function Datepicker({setValue , value}) {\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <Stack spacing={3}>\r\n        <DesktopDatePicker\r\n          label=\"Date\"\r\n          inputFormat=\"MM/DD/YYYY\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\n// const API_URL = \"https://wingrowmarket.onrender.com/\";\r\n//const API_URL = \"http://localhost:4000/\"\r\nconst API_URL = \"https://wingrowmarket.com:8443/\";\r\nconst { REACT_APP_API_URL } = process.env;\r\n const getPublicContent = () => {\r\n    return axios.get(REACT_APP_API_URL + 'all');\r\n  }\r\n  const getSub = (userId) =>{\r\n    return axios.post(REACT_APP_API_URL + 'sub1',{userId})\r\n  }\r\n  // const postSub = () =>{\r\n  //   return axios.post(API_URL,'sub',{ headers: authHeader() });\r\n  // }\r\n\r\n  const postSub = (date , userId , stalls , validity ) => {\r\n    return axios.post(REACT_APP_API_URL + \"sub\", {\r\n        date,\r\n        userId,\r\n        stalls,\r\n        validity, \r\n      } , { headers: authHeader() });\r\n  }\r\n  const getInOutdata = () => {\r\n    return axios.get(REACT_APP_API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  // const addMarket = () =>{\r\n  //   return axios.post(REACT_APP_API_URL + \"add\")\r\n  // }\r\n  const getMarket = () =>{\r\n    return axios.get(REACT_APP_API_URL + \"getmarket\")\r\n  }\r\nconst getMarkets = () => {\r\n  return axios.get(REACT_APP_API_URL + \"getmarkets\")\r\n}\r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers,\r\n    getSub,\r\n    postSub,\r\n    getMarket,\r\n  getMarkets,\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n"],"names":["_jsx","_Fragment","children","Outlet","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","_ref","_ref2","filterIn","filterOut","handleChangeMarket","fromDate","setfromDate","toDate","settoDate","value","setValue","handleSearch","market","farmersMarket","open","setOpen","handleClose","handleOpen","handleSearchmarkets","handleSearchDate","console","log","markets","marketIn","Array","marketOut","netMarket","forEach","arr","purchase_quantity","purchase_rate","sales_quantity","sales_rate","idx","ans","push","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","_defineProperty","_jsxs","className","class","Bar","options","_useState","useState","_useState2","_slicedToArray","marketName","setMarketName","_useState3","_useState4","direction","setDirection","_useState5","_useState6","_React$useState","React","_React$useState2","tags","setTags","_useState7","Date","toISOString","split","_useState8","date","_useState9","_useState10","setData","showData","useEffect","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","then","res","catch","err","message","stop","apply","arguments","getData","d","offers","e","handleSubmit","_callee2","_context2","preventDefault","_x","component","noValidate","onSubmit","sx","mt","Grid","container","spacing","item","xs","sm","TextField","inputlabelprops","style","fontSize","fontFamily","autoComplete","inputProps","name","onChange","target","required","fullWidth","id","autoFocus","color","ReactTags","handleDelete","i","newTags","slice","splice","handleAddition","tag","concat","_toConsumableArray","placeholder","allowNew","autofocus","minQueryLength","classNames","suggestions","Button","type","variant","size","mb","header","CardContent","Typography","gutterBottom","FilterModal","_ref$handleCloseModal","handleCloseModal","onClick","src","width","Modal","onClose","margin","Datepicker","FormControl","m","minWidth","InputLabel","Select","labelId","length","map","MenuItem","filteredInData","filteredOutData","purchaseQty","purchaseAmount","salesQty","salesAmount","noOfBookedStalls","totalFarmers","Farmers","farmers","Customer","FarmersObj","farmersData","Map","has","farmertype","set","get","key","count","colors","data1","summary","title","subtitle","percent","data2","data3","Link","fontWeight","to","index","CircularProgressbarWithChildren","strokeWidth","text","styles","buildStyles","pathColor","trailColor","strokeLinecap","textAlign","Card","Spinner","subData","setSubData","REACT_APP_API_URL","process","farmer","filter","ele","_id","userId","padding","textTransform","firstname","lastname","phone","validity","stalls","status","marginTop","marginLeft","AuthService","useNavigate","setdata","Loading","setLoading","Id","useParams","setdate","setMarket","setWatch","array","array2","_useState11","_useState12","_useState13","_useState14","array1","setarray1","_useState15","_useState16","showItems","setShowItems","FarmerService","response","items","DatePicker","renderInput","props","_objectSpread","helperText","newValue","myDate","$d","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","formattedDate","defaultValue","newData","bookedAt","newFinal","location","stallName","justify","alignItems","flexDirection","state","useLocation","arr1","Inward","Outward","revenue","year","setDate","submit","_e$time$split","time","substring","_e$time$split3","_data$time$split","da","Number","purchase","_data$time$split3","sale","YearPicker","start","end","reverse","classes","address","CancelledStalls","handleRefundDelete","bookedBy","cancelledAt","setInward","setOutward","dayjs","now","format","setfilteredInData","setfilteredOutData","setCancelledStalls","_useState17","_useState18","stallsBooked","setStallsBooked","_useState19","_useState20","all","setAll","_useState21","_useState22","setStalls","date1","today","Difference_In_Time","getTime","Difference_In_Days","Math","floor","weeks","days","finalTotal","_React$useState3","_React$useState4","_useState23","_useState24","setFarmers","_useState25","_useState26","setCustomer","event","UserService","Set","marketsData","add","finalStall","finalStall1","_step","marketresponse","inData","outData","stallsData","_e$time$split5","_e$time$split7","_e$bookedAt$split","_iterator","_createForOfIteratorHelper","s","n","done","f","Routes","Route","path","element","AdminMain","AdminHome","Adminrev","AdminrevTotal","AdminMarket","FarmersListData","CheckList","CustomersList","AdminSub","CancellationFeed","window","confirm","headers","authHeader","CheckListSoln","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","DesktopDatePicker","inputFormat","params","getPublicContent","getStallsData","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","getSub","postSub","getMarket","getMarkets"],"sourceRoot":""}