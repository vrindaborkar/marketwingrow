{"version":3,"file":"static/js/494.7c8875e6.chunk.js","mappings":"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","sources":["Routes/Admin/AdminMain.js","Routes/Admin/Adminrev.js","Routes/Admin/AdminMarket.js","components/Card.js","components/Datepicker.js","components/FilterModal.js","Routes/Admin/AdminHome.js","Routes/Admin/AdminSub.js","Routes/Admin/CheckList.js","Routes/Admin/CheckListSoln.js","Routes/Admin/AdminrevTotal.js","Routes/Admin/FarmersListData.js","Routes/Admin/CustomersList.js","Routes/Admin/CancellationFeed.js","Routes/Admin/AdminHello.js","components/CardAdmin.js","Routes/Admin/Leaves.js","Routes/Admin/Admin.js","services/user.service.js"],"sourcesContent":["import React,{useState , useEffect} from 'react'\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Outlet } from 'react-router-dom'\r\n\r\nconst AdminMain = () => {\r\n  return (\r\n    <>\r\n        <Outlet/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminMain","import React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport dayjs from 'dayjs'\r\nimport NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\nconst Adminrev = ({filterIn,filterOut,\r\n  handleChangeMarket,\r\n  fromDate,\r\n  setfromDate,\r\n  toDate,\r\n  settoDate,\r\n  value,\r\n  setValue,\r\n  handleSearch,\r\n  market,\r\n  farmersMarket,\r\n  open,\r\n  setOpen,\r\n  handleClose,\r\n  handleOpen,\r\n  handleSearchmarkets,\r\n  handleSearchDate,\r\n \r\n}) => {\r\n  // console.log(\"in-->\",filterIn)\r\n  // console.log(\"out--->\",filterOut)\r\n  const markets = { 'Karve Nagar': 2, 'Kondhwa BK':2, 'Hadapsar': 3, 'Undri':3, 'Kharadi IT Park': 4,  'Bramhasun City': 5, 'Wagholi':5, 'Bhavadi Road':6,'Amanora City':7,'Magarpatta':7,'Green City':7}\r\n  //const markets = { 'Hadapsar': 0, 'Kharadi IT Park': 0, 'Karve Nagar': 0, 'Bramhasun City': 0, 'wanawadi': 0, 'Magarpatta': 0, 'Amanora City': 0 }\r\n  const [date,setDate] = useState(dayjs(new Date()).format(\"DD/MM/YYYY\"))\r\n  const[month,setMonth] = useState()\r\n  const[flag,setFlag] = useState(0)\r\n  const marketIn = new Array(0,0,0,0,0,0,0)\r\n  const marketOut = new Array(0,0,0,0,0,0,0)\r\n  // var filterIn1 = filterIn\r\n  // var filterOut1= filterOut\r\n  const [netMarket,setNewMarket] = useState([])\r\n  \r\n\r\n\r\n  function byDate(){\r\n \r\n    filterIn = filterIn && filterIn.filter((arr)=>{\r\n      var yourDateTime = new Date(arr.time)\r\n      const dateTimeInParts = yourDateTime.toISOString().split( \"T\" ); // DateTime object => \"2021-08-31T15:15:41.886Z\" => [ \"2021-08-31\", \"15:15:41.886Z\" ]\r\n      let date1 = dateTimeInParts[ 0 ] // \"2021-08-31\"\r\n      let date2  = dayjs(date).format(\"YYYY-MM-DD\")\r\n      console.log(date1,date2)\r\n      if(date1 == date2){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    })\r\n    filterOut = filterOut && filterOut.filter((arr)=>{\r\n      var yourDateTime =new Date( arr.time)\r\n       const dateTimeInParts = yourDateTime.toISOString().split( \"T\" ); // DateTime object => \"2021-08-31T15:15:41.886Z\" => [ \"2021-08-31\", \"15:15:41.886Z\" ]\r\n\r\n    let date1 = dateTimeInParts[ 0 ]; // \"2021-08-31\"\r\n    let date2  = dayjs(date).format(\"YYYY-DD-MM\")\r\n    //console.log(date1,date2)\r\n    if(date1 == date2){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    })\r\n\r\n    console.log(\"filter by date \", filterIn,filterOut)\r\n\r\n    fun()\r\n\r\n\r\n  }\r\n  function byMonth(){\r\n    let date2  = dayjs(month).format(\"YYYY-DD-MM\")\r\n    let months = date2.substring(8,10)\r\n    let year = date2.substring(0,4)\r\n   \r\n      //console.log(\"hemlo-\",months,year)\r\n    var firstDay = new Date(year, Number(months)-1, 1);\r\n    var lastDay = new Date(year, Number(months) , 0);\r\n\r\n    console.log(dayjs(firstDay).format(\"YYYY-MM-DD\") ,dayjs(lastDay).format(\"YYYY-MM-DD\") )\r\n    filterIn = filterIn && filterIn.filter((arr)=>{\r\n      var yourDateTime = new Date(arr.time)\r\n      \r\n      const dateTimeInParts = yourDateTime.toISOString().split( \"T\" ); // DateTime object => \"2021-08-31T15:15:41.886Z\" => [ \"2021-08-31\", \"15:15:41.886Z\" ]\r\n\r\n    let date1 = dateTimeInParts[ 0 ] // \"2021-08-31\"\r\n    console.log(date1)\r\n     if(date1 >= dayjs(firstDay).format(\"YYYY-MM-DD\") && date1 <= dayjs(lastDay).format(\"YYYY-MM-DD\")){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    })\r\n    filterOut = filterOut && filterOut.filter((arr)=>{\r\n      var yourDateTime = new Date(arr.time)\r\n     \r\n      const dateTimeInParts = yourDateTime.toISOString().split( \"T\" ); // DateTime object => \"2021-08-31T15:15:41.886Z\" => [ \"2021-08-31\", \"15:15:41.886Z\" ]\r\n\r\n    let date1 = dateTimeInParts[ 0 ] // \"2021-08-31\"\r\n  \r\n    \r\n      if(date1 >= dayjs(firstDay).format(\"YYYY-MM-DD\") && date1 <= dayjs(lastDay).format(\"YYYY-MM-DD\")){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    })\r\n    \r\n    fun()\r\n\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    console.log(netMarket)\r\n  },[netMarket])\r\n\r\n\r\n  function fun(){\r\n      console.log(\"data in and out :\",filterIn,filterOut)\r\n      filterIn && filterIn.forEach((arr) =>{\r\n        const market = arr.market;\r\n        const purchase_quantity = arr.purchase_quantity\r\n        const purchase_rate = arr.purchase_rate\r\n        const idx = markets[market]\r\n        marketIn[idx] +=purchase_quantity*purchase_rate\r\n      })\r\n      filterOut && filterOut.forEach((arr) =>{\r\n        const market = arr.market;\r\n        const sales_quantity = arr.sales_quantity\r\n        const sales_rate = arr.sales_rate\r\n        const idx = markets[market]\r\n    \r\n        marketOut[idx] += sales_quantity*sales_rate\r\n    \r\n      })\r\n    \r\n      var temp =[]\r\n      marketOut && marketOut.forEach((arr,idx)=>{\r\n        var ans = marketOut[idx] - marketIn[idx]; \r\n        temp.push(ans)\r\n      })\r\n      setNewMarket(temp)\r\n      temp && temp.forEach((arr) =>{\r\n        console.log(\"netmarket :\",arr)\r\n      })\r\n    \r\n    }\r\n    var data = {\r\n      labels: ['Karve Nagar', 'Kondhwa BK','Hadapsar', 'Undri', 'Kharadi IT Park', ,'Bramhasun City','Wagholi', ,'Bhavadi Road','Amanora City','Magarpatta','Green City'],\r\n      datasets: [\r\n        {\r\n          label: 'Data',\r\n          backgroundColor: 'green',\r\n          borderColor: 'black',\r\n          borderWidth: 1,\r\n          data: netMarket\r\n        ,\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.3)',\r\n        'rgba(255, 159, 64, 0.3)',\r\n        'rgba(255, 205, 86, 0.3)',\r\n        'rgba(75, 192, 192, 0.3)',\r\n        'rgba(54, 162, 235, 0.3)',\r\n        'rgba(153, 102, 255, 0.3)',\r\n        'rgba(201, 203, 207, 0.3)'\r\n      ],\r\n      borderColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(255, 159, 64)',\r\n        'rgb(255, 205, 86)',\r\n        'rgb(75, 192, 192)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(153, 102, 255)',\r\n        'rgb(201, 203, 207)'\r\n      ],\r\n      borderWidth: 1,\r\n      // barThickness: 50,\r\n      responsive: true,\r\n    }]\r\n    };\r\n  \r\n \r\n\r\n  const options = {\r\n    responsive: true,\r\n            scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                max: 1000,\r\n                min: -1006,\r\n                steps : 100\r\n                }\r\n            }\r\n\r\n  }\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n  return (\r\n    <div className=\"he\">\r\n        <div className='book-btn-section'>\r\n        <h1>Commodity data</h1>\r\n        </div>\r\n        <div className = \"main\">\r\n        <button onClick ={fun}>Get Full Data</button>\r\n        <button onClick={()=>setFlag(1)}>Get Data by date</button>\r\n        <button onClick={()=>setFlag(2)}>Get Data by month</button>\r\n        {flag === 1 && <div className =\"inner-child\">\r\n        <DatePicker\r\n        label={'\"day\"'} views={['day']}\r\n        value={date}\r\n        renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n        onChange={(newValue) => {const d = new Date(newValue).toLocaleDateString();setDate(d);console.log(d)}}/>\r\n        </div> }\r\n        {flag ===2 && <div className =\"inner-child\">\r\n        <DatePicker label={'\"month\" and \"year\"'} views={['month', 'year']} \r\n        value={month}\r\n        renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n        onChange={(newValue) => {const d = new Date(newValue).toLocaleDateString();console.log(\"hello\",d);setMonth(d)}}/>\r\n        </div>} \r\n        <Button onClick={()=>{\r\n          if(flag === 1){\r\n            byDate()\r\n          }else{\r\n            byMonth()\r\n          }\r\n        }\r\n        }>\r\n          Submit\r\n        </Button>\r\n        \r\n        </div>\r\n        <div className=\"head\">\r\n         <h1>{netMarket}</h1> \r\n        </div>\r\n        <div className=\"chart-container\" >\r\n              <Bar\r\n                data={data}\r\n                options={options}\r\n                className=\"graphbar\"\r\n              >\r\n              </Bar>\r\n              </div>\r\n              <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n     {mobile? <NavMenu\r\n        />:console.log(\"desktop\")}\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default Adminrev","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport axios from \"axios\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\nconst AdminMarket = () => {\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n    const [marketName,setMarketName] = useState(\"\")\r\n    const[direction,setDirection] = useState(\"\")\r\n  const [offers, setOffers] = useState(\"\")\r\n    const [tags, setTags] = React.useState([]);\r\n    const [date,setDate] = useState(new Date().toISOString().split('T')[0])\r\n    const [data,setData] = useState([])\r\n    var showData =[]\r\n    \r\n    useEffect(()=>{\r\n\r\n\r\n      async function getData(){\r\n        await axios.get(\"https://wingrowmarket.com:8443/\"+\"getMarket\")\r\n        .then((res)=>{\r\n         if(res){\r\n          const {data} = res\r\n          setData(data)\r\n          \r\n         }\r\n        })\r\n        .catch((err)=>{\r\n           console.log(err.message)\r\n         })\r\n      }\r\n\r\n\r\n      getData();\r\n\r\n    },[])\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n    data  && data.forEach((d)=>{\r\n      showData.push(\r\n        <div className = \"box\">\r\n            <p>MarketName : {d.marketName}</p>\r\n            <p>Direction :{d.direction}</p>\r\n            {d.offers && d.offers.forEach(e => <p>{e}</p>)}\r\n         </div>\r\n      )\r\n    })\r\n    const handleDelete = (i) => {\r\n        const newTags = tags.slice(0);\r\n        newTags.splice(i, 1);\r\n        setTags(newTags);\r\n      };\r\n    \r\n    const handleAddition = (tag) => {\r\n        setTags([...tags, tag]);\r\n      };\r\n    const handleSubmit = async (e) =>{\r\n       e.preventDefault();\r\n       data.push({marketName:marketName,direction:direction,tags:tags,date:date})\r\n       await axios.post(\"https://wingrowmarket.com:8443/\"+\"addMarket\",{marketName,direction,tags,date})\r\n       .then((res)=>{\r\n        if(res){\r\n          console.log(\"success\")\r\n          setDirection(\"\")\r\n          setTags([])\r\n          setMarketName(\"\")\r\n\r\n        }\r\n       })\r\n       .catch((err)=>{\r\n        console.log(err);\r\n       })\r\n    }\r\n  return (\r\n    <div>\r\n    <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            \r\n\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  // autoComplete=\"given-name\"\r\n                  autoComplete=\"nope\"\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  name=\"marketName\"\r\n                  value={marketName}\r\n                  onChange={(e) => setMarketName(e.target.value)}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Market Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputProps={{\r\n                    autoComplete: 'off'\r\n                  }}\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Direction\"\r\n                  name=\"Direction\"\r\n                  value={direction}\r\n                  onChange={(e) =>setDirection(e.target.value)}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield registerLabel\"\r\n                />\r\n              </Grid>\r\n        \r\n                <Grid item xs={12}>\r\n                  <ReactTags\r\n                    inputProps={{\r\n                      autoComplete: 'off'\r\n                    }}\r\n                    fullWidth\r\n                    tags={tags}\r\n                    \r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    placeholder=\"Add offers\"\r\n                    allowNew={true}\r\n                    autofocus={false}\r\n                    minQueryLength={1}\r\n                    className=\"textfield\"\r\n                    color=\"success\"\r\n                    classNames={{\r\n                      suggestions: 'tag-suggestions'\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n\r\n\r\n            \r\n            </Grid>\r\n            \r\n\r\n\r\n            <Button item xs={12}\r\n              type=\"submit\"\r\n              fullWidth\r\n\r\n              className=\"signup-btn\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              <span className=\"heading\">Add</span>\r\n            </Button>\r\n\r\n\r\n           \r\n          </form>\r\n          \r\n          {/* <div className='places_wrapper'>\r\n          {showData}\r\n        </div> */}\r\n        <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n      {mobile?<NavMenu\r\n      />:console.log(\"desktop\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminMarket","import CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport '../styles/Admin.css'\r\nconst Card = ({header , value }) => {\r\n  return(\r\n    <div className='card_layout'>\r\n      <CardContent className='card-content'>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          <b className='total-number'>{value}</b>\r\n        </Typography>\r\n        <Typography className='tag' sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          {header}\r\n        </Typography>\r\n      </CardContent>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Card;","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\n\r\nexport default function Datepicker({setValue , value}) {\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <Stack spacing={3}>\r\n        <DesktopDatePicker\r\n          label=\"Date\"\r\n          inputFormat=\"MM/DD/YYYY\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Modal from '@mui/material/Modal';\r\nimport '../styles/Admin.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Datepicker from '../components/Datepicker'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function FilterModal(\r\n  {\r\n    handleChangeMarket,\r\n    fromDate,\r\n    setfromDate,\r\n    toDate,\r\n    settoDate,\r\n    value,\r\n    setValue,\r\n    handleSearch,\r\n    farmersMarket,\r\n    market,\r\n    handleClose,\r\n    handleOpen,\r\n    open,\r\n    handleSearchmarkets,\r\n    handleSearchDate,\r\n    handleCloseModal = { handleCloseModal }\r\n  }\r\n) {\r\n\r\n  return (\r\n    <div className='filterButton'>\r\n      <button className='filter_btn_admin' onClick={handleOpen}><img src=\"https://cdn-icons-png.flaticon.com/512/1159/1159641.png\" width={\"30px\"} /></button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <div className='box_filter'>\r\n          <button className=\"closebtn\" onClick={handleCloseModal}>\r\n            &times;\r\n          </button>\r\n          <h2 style={{ margin: \"1rem auto\", fontSize: \"30px\" }}>Filters</h2>\r\n          <div className='header_items_center'>\r\n            <div className='header_items_filter' style={{width: '353px'}}>\r\n              <span className='date_picker_label'>Filter by date</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={setValue} value={value} />\r\n              </div>\r\n            </div>\r\n            <button className='filter_btn1' onClick={handleSearchDate}>Search</button>\r\n          </div>\r\n\r\n          <div className='header_items_center'>\r\n            <div className='header_items_filter' style={{width: '353px'}}>\r\n              <span className='date_picker_label'>Filter between dates from</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={setfromDate} value={fromDate} />\r\n              </div>\r\n            </div>\r\n            <div className='header_items_filter'>\r\n              <span className='date_picker_label'>Filter between dates to</span>\r\n              <div className='date_picker'>\r\n                <Datepicker setValue={settoDate} value={toDate} />\r\n              </div>\r\n            </div>\r\n            <button className='filter_btn' onClick={handleSearch}>Search</button>\r\n          </div>\r\n\r\n          <div className='header_items'>\r\n            <div className='header_items_filter'>\r\n              <span className='filter-market'>Filter market wise :</span>\r\n              <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\r\n                <InputLabel id=\"demo-select-small\">Market</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-select-small\"\r\n                  id=\"demo-select-small\"\r\n                  value={market}\r\n                  label=\"Market\"\r\n                  onChange={handleChangeMarket}\r\n                >\r\n                  {\r\n                    farmersMarket.length !== 0 && farmersMarket.map((e, i) => {\r\n                      return (\r\n                        <MenuItem key={i} value={e}>{e}</MenuItem>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n              <button className='filter_btn' onClick={handleSearchmarkets}>Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import \"../../styles/Admin.css\";\r\nimport Card from \"../../components/Card\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport FilterModal from \"../../components/FilterModal\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { Divider, Grid } from \"@mui/material\";\r\n// import AdminMarket from \"./AdminMarket.js\";\r\n\r\nimport { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nconst AdminHome = ({\r\n  handleChangeMarket,\r\n  fromDate,\r\n  sub,\r\n  setfromDate,\r\n  toDate,\r\n  settoDate,\r\n  value,\r\n  setValue,\r\n  handleSearch,\r\n  market,\r\n  farmersMarket,\r\n  open,\r\n  setOpen,\r\n  handleClose,\r\n  handleOpen,\r\n  handleSearchmarkets,\r\n  handleSearchDate,\r\n  filteredInData,\r\n  filteredOutData,\r\n  purchaseQty,\r\n  purchaseAmount,\r\n  salesQty,\r\n  salesAmount,\r\n  noOfBookedStalls,\r\n  totalFarmers,\r\n  farmers,\r\n  Farmers,\r\n  Customer,\r\n}) => {\r\n  const FarmersObj = [];\r\n  const farmersData = new Map();\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  Farmers &&\r\n    Farmers.forEach((e) => {\r\n      if (farmersData.has(e.farmertype)) {\r\n        farmersData.set(e.farmertype, farmersData.get(e.farmertype) + 1);\r\n      } else {\r\n        farmersData.set(e.farmertype, 1);\r\n      }\r\n    });\r\n  //this is for how many farmers of each type\r\n  // no need to go through this\r\n  farmersData.forEach((value, key) => {\r\n    FarmersObj.push({ farmertype: key, count: value });\r\n  });\r\n  let maxmarkets = 10000;\r\n  let maxStalls = 10000;\r\n  let maxPurchaseQty = 100000;\r\n  let maxPurchaseAmount = 500000;\r\n  let maxSalesAmount = 500000;\r\n  let maxSalesQty = 2000000;\r\n  const colors = {\r\n    green: '#4CAF50',\r\n    red: '#DB190C',\r\n    purple: '#8624DB',\r\n    white: '#fff',\r\n    orange: '#FF9066'\r\n  }\r\n  const data1 = {\r\n    summary: [\r\n      {\r\n        title: 'Farmers Markets',\r\n        subtitle: 'Total Farmers Markets',\r\n        value: totalFarmers,\r\n        percent: (totalFarmers * 100) / maxmarkets\r\n\r\n      },\r\n      {\r\n        title: 'Stalls Booked',\r\n        subtitle: 'Stalls of farmers',\r\n        value: 2000 + noOfBookedStalls,\r\n        percent: (noOfBookedStalls * 100) / maxStalls\r\n\r\n      }\r\n    ]\r\n  }\r\n  const data2 = {\r\n    summary: [\r\n      {\r\n        title: 'Purchased Quantity (Kgs)',\r\n        subtitle: 'Total Quantity Purched',\r\n        value: purchaseQty,\r\n        percent: (purchaseQty * 100) / maxPurchaseQty\r\n      },\r\n      {\r\n        title: 'Purchase (INR)',\r\n        subtitle: 'Total Purchase Amount',\r\n        value: purchaseAmount,\r\n        percent: (purchaseAmount * 100) / maxPurchaseAmount\r\n      },\r\n    ]\r\n  }\r\n  const data3 = {\r\n    summary: [\r\n      {\r\n        title: 'Sales Quantity (Kgs)',\r\n        subtitle: 'Total Sales Quantity',\r\n        value: purchaseQty-salesQty,\r\n        value: purchaseQty - salesQty,\r\n        percent: ((purchaseQty-salesQty)*100)/maxSalesQty\r\n      },\r\n      {\r\n        title: 'Sales (INR)',\r\n        subtitle: 'Total Sales Amount',\r\n        value: salesAmount,\r\n        percent: (salesAmount * 100) / maxSalesAmount\r\n      }\r\n    ]\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"admin_main_component\" >\r\n        <div className=\"adminAlign\">\r\n        <FilterModal\r\n          style={{ width: \"10%\" }}\r\n          handleChangeMarket={handleChangeMarket}\r\n          fromDate={fromDate}\r\n          setfromDate={setfromDate}\r\n          toDate={toDate}\r\n          settoDate={settoDate}\r\n          value={value}\r\n          setValue={setValue}\r\n          handleSearch={handleSearch}\r\n          market={market}\r\n          farmersMarket={farmersMarket}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          handleClose={handleClose}\r\n          handleOpen={handleOpen}\r\n          handleSearchmarkets={handleSearchmarkets}\r\n          handleSearchDate={handleSearchDate}\r\n          handleCloseModal={handleCloseModal}\r\n\r\n        />\r\n        <div className='admin_links'>\r\n          <div className=\"two\">\r\n            <Link className=\"admin_links_details twoDetails\" style={{fontWeight:'bold', marginBottom: '40px'}} to=\"../adminrev\">\r\n              Graph for market vs market\r\n            </Link>\r\n            <Link className='admin_links_details twoDetails' style={{fontWeight:'bold',marginBottom: '40px'}} to=\"../adminrevtotal\">Graph for a year</Link>\r\n            <Link className='admin_links_details twoDetails' style={{fontWeight:'bold',marginBottom: '40px'}} to=\"../livemarkets\">Add Live Market Data</Link>\r\n            <Link className='admin_links_details twoDetails' style={{fontWeight:'bold',marginBottom: '40px'}} to=\"../leaves\">Approve Leaves</Link>\r\n          </div>\r\n\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"farmers-stats-main farmers-stats-main1\">\r\n          <h2 className=\"overalldata_header stats\" style={{width\r\n          :'200px',fontWeight:'bold'}}>Farmers Statistics</h2>\r\n          <div className=\"farmers-stats-holder\">\r\n            {filteredInData && filteredOutData && (\r\n              <div className=\"total-stall-market\" style={{fontWeight:'bold'}}>\r\n                {/* <Card header={\"Total Market\"} value={totalFarmers.size} />\r\n                <Card header={\"Stalls Booked\"} value={noOfBookedStalls} /> */}\r\n                {\r\n                  data1.summary.map((item, index) => {\r\n                    return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                      {\r\n                        <>\r\n                          <span>{item.title} </span>\r\n\r\n\r\n                          <CircularProgressbarWithChildren\r\n                            className='circularbar'\r\n                            value={item.percent}\r\n                            strokeWidth={6}\r\n                            text={`${item.value}`}\r\n                            styles={buildStyles({\r\n                              pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                              trailColor: '#d3d3d3',\r\n                              strokeLinecap: 'round'\r\n                            })}\r\n                          >\r\n                            <br />\r\n                            {/* <div className=\"summary-box__chart__value\">\r\n                            {item.percent}%\r\n                        </div> */}\r\n                          </CircularProgressbarWithChildren>\r\n                        </>\r\n                      }\r\n                    </div>)\r\n                  })\r\n                }\r\n              </div>\r\n\r\n            )}\r\n            <div className=\"quantity\" style={{fontWeight:'bold'}}>\r\n              {/* <h2>Quantity</h2> */}\r\n              {filteredInData && filteredOutData && (\r\n                <div className=\"total-quantity\">\r\n\r\n                  {/* <Card header={\"Purchase:\"} value={purchaseQty} />\r\n                <Card header={\"Sales:\"} value={salesQty} /> */}\r\n                  {\r\n                    data2.summary.map((item, index) => {\r\n                      return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                        {\r\n                          <>\r\n                            <span>{item.title} </span>\r\n\r\n\r\n                            <CircularProgressbarWithChildren\r\n                              className='circularbar'\r\n                              value={item.percent}\r\n                              strokeWidth={6}\r\n                              text={`${item.value}`}\r\n                              styles={buildStyles({\r\n                                pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                                trailColor: '#d3d3d3',\r\n                                strokeLinecap: 'round'\r\n                              })}\r\n                            >\r\n                              <br />\r\n                              {/* <div className=\"summary-box__chart__value\">\r\n                            {item.percent}%\r\n                        </div> */}\r\n                            </CircularProgressbarWithChildren>\r\n                          </>\r\n                        }\r\n                      </div>)\r\n                    })\r\n                  }\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"amount\" style={{fontWeight:'bold'}}>\r\n              {/* <h2 >Amount</h2> */}\r\n              {filteredInData && filteredOutData && (\r\n                <div className=\"total-amount\">\r\n                  {/* <Card header={\"Purchase:\"} value={purchaseAmount} />\r\n                <Card header={\"Sales:\"} value={salesAmount} /> */}\r\n                  {\r\n                    data3.summary.map((item, index) => {\r\n                      return (<div key={`summary-${index}`} className=\"sub_overalldata\" style={{fontSize:'10px'}} >\r\n                        {\r\n                          <>\r\n                            <span>{item.title} </span>\r\n\r\n\r\n                            <CircularProgressbarWithChildren\r\n                              className='circularbar'\r\n                              value={item.percent}\r\n                              strokeWidth={6}\r\n                              text={`${item.value}`}\r\n                              styles={buildStyles({\r\n                                pathColor: item.percent < 50 ? colors.green : colors.green,\r\n                                trailColor: '#d3d3d3',\r\n                                strokeLinecap: 'round'\r\n                              })}\r\n                            >\r\n                              <br />\r\n                              {/* <div >\r\n                            {item.percent}%\r\n                        </div> */}\r\n                            </CircularProgressbarWithChildren>\r\n                          </>\r\n                        }\r\n                      </div>)\r\n                    })\r\n                  }\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"farmers-stats-main farmers-stats-main1\">\r\n          <h3 className=\"overalldata_header stats\" style={{width\r\n          :'150px',fontWeight:'bold',marginBottom:'10px'}}>Sub data</h3>\r\n          <div className=\"farmers-stats-holder\">\r\n          \r\n          <div className=\"sub_overalldata\">\r\n            <h1>Number of Subscribed Users : {sub.length} </h1>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"farmers-stats-main\" style={{textAlign:'center'}}>\r\n          <h2 className=\"overalldata_header farmers-type\" style={{width\r\n          :'200px',fontWeight:'bold'}}>Types of Farmers</h2>\r\n          {FarmersObj && (\r\n            <div className=\"cards_container\">\r\n              {FarmersObj.map((e, i) => {\r\n                return <Card key={i} header={e.farmertype} value={e.count} />;\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"total-customers\" style={{textAlign:'center'}}>\r\n          <h2 className=\"overalldata_header no-consumers\" style={{width\r\n          :'200px',fontWeight:'bold'}}>\r\n            Total No. Of Customers\r\n          </h2>\r\n          {Customer && <div className=\"customers_count\">{Customer.length}</div>}\r\n        </div>\r\n\r\n        <div className='admin-links'>\r\n\r\n\r\n        <div className=\"one\">\r\n            <Link className=\"admin_links_details admin_links_details_lists \" to=\"../listoffarmers\" style={{ width:'250px', fontWeight:'bold' }}>\r\n              Farmers List\r\n            </Link>\r\n            <Link className=\"admin_links_details admin_links_details_lists \" to=\"/admin/checklist\"style={{ width: '250px', fontWeight:'bold' }}>\r\n              CheckList\r\n            </Link>\r\n          {/* </div>\r\n          <div className=\"one\"> */}\r\n            <Link className='admin_links_details admin_links_details_lists' to=\"../listofCustomers\" style={{ width: '250px', fontWeight:'bold' }} >Customers List</Link>\r\n            <Link className='admin_links_details admin_links_details_lists' to=\"../cancelledstalls\" style={{ width: '250px', fontWeight:'bold' }}>Cancelled Stalls List</Link>\r\n            {/* <Link className=\"admin_links_details admin_links_details_lists\" to =\"../leave\" style = {{width : '250px', fontWeight:'bold'}}>Apply For Leave</Link> */}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {!filteredInData && !filteredOutData && !Farmers && <Spinner />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminHome;","import React, { useEffect, useState } from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport NavMenu from '../../components/NavMenu';\r\nimport useWindowDimensions from '../../components/useWindowDimensions';\r\n\r\nconst AdminSub = ({Farmers}) => {\r\n    const[subData,setSubData] = useState([]);\r\n    const { REACT_APP_API_URL } = process.env;\r\n    console.log(REACT_APP_API_URL)\r\n    useEffect(()=>{\r\n        async function  getData() {\r\n\r\n            await axios.get(REACT_APP_API_URL + \"subData\")\r\n                        .then((res)=>{\r\n                            console.log(\"hello\")\r\n                            const {data} = res\r\n                            console.log(data)\r\n                             setSubData(data)\r\n                        })\r\n                        .catch((err)=>{\r\n                            console.log(\"couldnt fetch data\")\r\n                        })\r\n        }\r\n\r\n        getData();\r\n    },[])\r\n    const [mobile, setmobile] = useState(false)\r\n\r\n    const { width } = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width < 850) {\r\n            setmobile(true)\r\n        } else {\r\n            setmobile(false)\r\n        }\r\n    }, [width])\r\n  return  (\r\n    <>\r\n        {subData && <div className='cancellation_feed'>\r\n        <div className='cancellation_feed_container'>\r\n                  \r\n            <h2 className='cancellation_header'>Subscription Data</h2>\r\n                  \r\n            <div className='cancellation_body'>\r\n                {\r\n                    subData && subData.length !== 0 && subData.map((e,i)=>{\r\n                    const farmer =  Farmers && Farmers.filter( ele => ele._id === e.userId)\r\n                    console.log(farmer)\r\n\r\n                    return(\r\n                        farmer && farmer.length !== 0 && <div key={i} className='cancellation_card'>\r\n                            <h2 style={{textAlign:\"center\",padding:\"0.5rem\",textTransform:\"capitalize\"}}>{farmer[0].firstname+\" \"+ farmer[0].lastname}</h2>\r\n                            <div><b>Phone No : </b>{farmer[0].phone}</div>\r\n                            <div><b> Startdate: </b>{e.date}</div>\r\n                            <div><b> validity : </b>{e.validity}</div>\r\n                            <div><b> Stalls left :</b>{e.stalls}</div>\r\n                            <div><b> Status :</b>{e.status}</div>\r\n                            \r\n                            \r\n                        </div> \r\n                    )\r\n                    })\r\n                }\r\n\r\n                \r\n            </div>\r\n                 <Link style={{ marginTop: '10px', marginLeft:'125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                      Back\r\n                  </Link> \r\n        </div>\r\n        </div>}\r\n        <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n          {mobile?<NavMenu\r\n              />:console.log(\"desktop\")}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminSub","import \"../../styles/Test.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport FarmerService from \"../../services/farmer.service\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n// Added\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { InputLabel } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { format } from 'date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport NavMenu from \"../../components/NavMenu\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\nconst userCurr = AuthService.getCurrentUser();\r\n\r\nfunction CheckList({ farmersMarket }) {\r\n  const navigate = useNavigate();\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  const [data, setdata] = useState();\r\n  const [Loading, setLoading] = useState();\r\n  const { Id } = useParams();\r\n  const today = new Date();\r\n  const todayFormatted = today.toISOString().slice(0, 10);\r\n  const [date, setdate] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [market, setMarket] = React.useState('');\r\n    const[watch,setWatch] = useState(false)\r\n  const arr = { 'Karve Nagar': 2, 'Kondhwa BK':2, 'Hadapsar': 3, 'Undri':3, 'Kharadi IT Park': 4,  'Bramhasun City': 5, 'Wagholi':5, 'Bhavadi Road':6,'Amanora City':7,'Magarpatta':7,'Green City':7}\r\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n  const array ={'Tarkari' : 0,'Exotic' : 0,'Onion-Potato':0,'Masala':0,'Antic':0,'SHG':0,}\r\n    const arr1 = ['Tarkari','Exotic','Onion-Potato','Masala','Antic','SHG']\r\n    const array2 = {'Tarkari':18,'Exotic':1,'Onion-Potato':2,'Masala':1,'Antic':1,'SHG':4}\r\n    //const arr2 = [18,1,2,1,1,4]\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [array1,setarray1]  = useState({})\r\n  const [showItems,setShowItems]=useState(false)\r\nconst[show,setShow] = useState([])\r\n   console.log(\"farmerMarket :\",farmersMarket)\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    //fetching all the data\r\n\r\n\r\n    FarmerService.getBookedStalls().then((response) => {\r\n        setdata(response.data);\r\n        setLoading(false)\r\n      });\r\n  }, [date, Id]);\r\n  var items = []\r\n\r\n// useEffect(()=>{\r\n  items.push(\r\n    <tr>\r\n      <th className='head'>Stall name</th>\r\n      <th className='head'>Used</th>\r\n      <th className='head' >Left</th>\r\n    </tr>\r\n  )\r\n  \r\n  arr1.forEach((e) => {\r\n\r\n    items.push(\r\n      <div className =\"checklist\" key={e}>\r\n      <tr key={e}>\r\n        <th className='child'>{e}</th>\r\n        <th  className='child'>{array1[e]}</th>\r\n        <th  className='child' >{array2[e] - array1[e]}</th>\r\n      </tr>\r\n        </div>\r\n\r\n        \r\n    )\r\n    \r\n  })\r\n \r\n\r\n// },[array1])\r\n  \r\n\r\n  const handleSearch = () =>{\r\n   //navigate(\"/admin/checklistsoln\",{state :{arr1:arr1,array1:array1,array2:array2}})\r\n\r\n    setWatch(true)\r\n    console.log(array1,array2)\r\n  \r\n    console.log(\"hello\",items)\r\n    setShowItems(true)\r\n\r\n   // console.log(data)\r\n   // console.log(date)\r\n    // const newData = data && data.filter((d) =>{\r\n    //     const d1 = d.bookedAt\r\n    //     const d2 = date\r\n    //     return d1 == d2\r\n    // })\r\n    // console.log(newData)\r\n    // const newFinal = newData && newData.filter((d) =>{\r\n    //     const s1 = d.location\r\n    //     const s2 = market\r\n    //     return s1 == s2\r\n    // })\r\n    // console.log(newFinal)\r\n    // newFinal && newFinal.forEach((e) =>{\r\n    //     array[e.stallName] +=1\r\n    // })\r\n    \r\n    // console.log(array)\r\n    \r\n  }\r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n  return (\r\n    <>\r\n\r\n      {!Loading ? (\r\n        <div className=\"Test\">\r\n          \r\n\r\n          <div className=\"main_container_stalls\">\r\n            <Link className=\"backbtn green\" to=\"/admin\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n              Back\r\n            </Link>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <InputLabel className=\"stall-booking-lable\">\r\n                  Enter Booking Date\r\n                </InputLabel>\r\n                \r\n                {console.log(date)}\r\n\r\n                \r\n\r\n\r\n                <DatePicker\r\n                  fullWidth\r\n                  className=\"textfield\"\r\n                  renderInput={(props) => <TextField {...props} size=\"big\" helperText={null} />}\r\n                  value={date}\r\n                  onChange={(newValue) => {\r\n                    // console.log(newValue.$d);\r\n                    const myDate = newValue.$d;\r\n                    const yyyy = myDate.getFullYear();\r\n                    const mm = String(myDate.getMonth() + 1).padStart(2, \"0\");\r\n                    const dd = String(myDate.getDate()).padStart(2, \"0\");\r\n                  \r\n                    const formattedDate = `${yyyy}-${mm}-${dd}`;\r\n                    console.log(\"date:: \",formattedDate);\r\n                    const d = new Date(newValue.toISOString().slice(0, 10));\r\n                    setdate(formattedDate);\r\n                    setMarket('')\r\n                    \r\n                    \r\n                  }}\r\n                  defaultValue={new Date()}\r\n                /> \r\n\r\n                {/* <DatePicker\r\n                \r\n                label=\"Year and Month\"\r\n                minDate={todayFormatted}\r\n                \r\n                value={value}\r\n                onChange={(newValue) => {\r\n                   setValue(newValue);\r\n                }}\r\n                renderInput={(props) => <TextField  {...props} size='small' helperText={null} />}\r\n                /> */}\r\n\r\n\r\n                {message && (\r\n                  <Typography variant=\"subtitle1\" color=\"error\">\r\n                    {message}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid style={{ margin: \"auto\", marginTop: '1.8rem' }} item xs={12} sm={6}>\r\n\r\n\r\n              <FormControl sx={{ m: 1, minWidth: 150 }} size=\"large\">\r\n                <InputLabel id=\"demo-select-small\">Market</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-select-small\"\r\n                    id=\"demo-select-small\"\r\n                    value={market}\r\n                    label=\"Market\"\r\n                    onChange={(e)=>{\r\n                      setMarket(e.target.value)\r\n                      console.log(\"market : \",e.target.value)\r\n                      console.log(\"data : \", data)\r\n                      const newData = data && data.filter((d) =>{\r\n                      var d1 = new Date(d.bookedAt).toISOString().split('T')[0]\r\n                      var d2 = date\r\n                      console.log(d1,d2)\r\n                      \r\n                  \r\n                      return d1 === d2\r\n                      })\r\n                      console.log(\"new Data :\",newData)\r\n                  const newFinal = newData && newData.filter((d) =>{\r\n                      const s1 = d.location\r\n                         const s2 = e.target.value\r\n                           return s1 === s2\r\n                           })\r\n                      console.log(\"final Data\",newFinal)\r\n                  newFinal && newFinal.forEach((e) =>{\r\n                    array[e.stallName] +=1\r\n                      })\r\n    \r\n                  console.log(array)\r\n                  setarray1(array)\r\n                      \r\n                      }\r\n                    \r\n                    \r\n                    }\r\n                >\r\n                    {\r\n                    farmersMarket.length!==0 && farmersMarket.map((e , i)=>{\r\n                        return(\r\n                        <MenuItem key={i} value={e}>{e}</MenuItem>\r\n                        )\r\n                    })\r\n                    }\r\n                </Select>\r\n                </FormControl>\r\n                \r\n\r\n               \r\n              </Grid>\r\n                {/* /////////////////////////////////////////////////////////////////////////////////// */}\r\n            \r\n            <button className='filter_btn1' onClick ={handleSearch } >Search</button>\r\n              {/* <Link to=\"/checklistsoln\" state={}>Search </Link> */}\r\n              \r\n              \r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" alignItems=\"center\" flexDirection='column'>\r\n              {showItems ? <table id=\"table\">\r\n                {items}\r\n              </table> : console.log('no')}\r\n            </Grid>\r\n            \r\n            \r\n\r\n\r\n          </div>\r\n         \r\n        </div>\r\n\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n      <div className=\"pageBottom\" ></div>\r\n\r\n      \r\n     {mobile? <NavMenu\r\n       />:console.log(\"desktop\")}\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckList;\r\n","import React from 'react'\r\nimport { Link, useNavigate,useLocation } from \"react-router-dom\";\r\nimport \"../../styles/Admin.css\";\r\nimport NavMenu from '../../components/NavMenu';\r\nimport useWindowDimensions from '../../components/useWindowDimensions';\r\n\r\nconst CheckListSoln = () => {\r\n    const navigate = useNavigate();\r\n    const {state} = useLocation();\r\n    const {arr1,array1,array2} = state\r\n    console.log(array1)\r\n    const items =[]\r\n    items.push(\r\n        <tr>\r\n                <th className='head'>Stall name</th> \r\n                <th className='head'>Used</th>\r\n                <th className='head' >Left</th>\r\n            </tr>\r\n    )\r\n    arr1.forEach((e)=>{\r\n        items.push(\r\n            // <div className =\"checklist\" key={e}>\r\n            <tr>\r\n                <th className='child'>{e}</th> \r\n                <th className='child'>{array1[e]}</th>\r\n                <th className='child' >{array2[e]-array1[e]}</th>\r\n            </tr>\r\n            \r\n        )\r\n    })\r\n    const [mobile, setmobile] = useState(false)\r\n\r\n    const { width } = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width < 850) {\r\n            setmobile(true)\r\n        } else {\r\n            setmobile(false)\r\n        }\r\n    }, [width])\r\n  return (\r\n    <div className='test'>\r\n    <div className=\"main_container_stalls\">\r\n    <Link className=\"backbtn green\" to=\"/admin/checkList\" sx={{ m: 2 }} style={{ padding: '8px 20px 8px 20px', marginTop: -'570px', marginLeft: '10px' }}>\r\n              Back\r\n    </Link>\r\n        <div className =\"checkListSolnMain\">\r\n        <table id=\"table\">\r\n            {items}\r\n        </table>\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n    <div className=\"pageBottom\" ></div>\r\n          {mobile?<NavMenu\r\n            />:console.log(\"desktop\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListSoln","import React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { YearPicker } from \"react-dropdown-date\";\r\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport NavMenu from \"../../components/NavMenu\";\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n)\r\nconst AdminrevTotal = ({Inward,Outward,}) => {\r\n  var filterIn=[]\r\n  var filterOut =[]\r\n  const revenue = [0,0,0,0,0,0,0,0,0,0,0,0]\r\nconst [date, setDate] = useState({ year: \"\"});\r\nconst submit =async () => {\r\n    console.log(date.year);\r\n      //console.log(revenue)\r\n  };\r\n  filterIn = Inward && Inward.filter((e)=>{\r\n    const [d] = e.time.split(\"T\");\r\n    const da = d.substring(0,4)\r\n    return da === date.year\r\n  })\r\n   filterOut = Outward && Outward.filter((e)=>{\r\n    const [d] = e.time.split(\"T\");\r\n    const da = d.substring(0,4)\r\n    return da === date.year\r\n  })\r\n  filterIn && filterIn.forEach((data) =>{\r\n    \r\n    const [d] = data.time.split(\"T\")\r\n    const purchase_quantity = data.purchase_quantity\r\n    const purchase_rate = data.purchase_rate\r\n\r\n    var da = Number(d.substring(5,7)) \r\n    da = da - 1\r\n    const purchase = purchase_quantity*purchase_rate\r\n    revenue[da] = purchase\r\n    console.log(da)\r\n  })\r\n  filterOut && filterOut.forEach((data) =>{\r\n    \r\n    const [d] = data.time.split(\"T\")\r\n    var da = Number(d.substring(5,7))\r\n    da = da - 1\r\n    const sales_quantity = data.sales_quantity\r\n    const sales_rate = data.sales_rate\r\n    const sale = sales_quantity*sales_rate\r\n    revenue[da] -= sale\r\n    console.log(da)\r\n  })\r\n  const data = {\r\n    labels: ['January', 'February', 'March','April','May','June','July','August','September','October','Novemeber','December'],\r\n    datasets: [\r\n      {\r\n        label: 'Data',\r\n        backgroundColor: 'green',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        data: revenue\r\n      }\r\n    ]\r\n  };\r\n \r\n\r\n  const options = {\r\n\r\n  }\r\n  \r\n  const [mobile, setmobile] = useState(false)\r\n\r\n  const { width } = useWindowDimensions()\r\n\r\n  useEffect(() => {\r\n    if (width < 850) {\r\n      setmobile(true)\r\n    } else {\r\n      setmobile(false)\r\n    }\r\n  }, [width])\r\n\r\n  return (\r\n    <div className=\"adminMain\">\r\n    <div className=\"year\">\r\n    <YearPicker\r\n        defaultValue={\"YYYY\"}\r\n        start={2015} // default is 1900\r\n        end={2025} // default is current year\r\n        reverse // default is ASCENDING\r\n        value={date.year} // mandatory\r\n        onChange={(year) => {\r\n          // mandatory\r\n          setDate((prev) => ({ ...prev, year }));\r\n        }}\r\n        id={\"year\"}\r\n        classes={`dropdown`}\r\n      />\r\n      <button type=\"button\" onClick={() => submit()}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n    <div\r\n              style={\r\n                {\r\n                  padding: '20px',\r\n                  width: '70%',\r\n                  marginLeft: '250px'\r\n                }\r\n              }\r\n\r\n            >\r\n            <h1>hello</h1>\r\n              <Bar\r\n                data={data}\r\n                options={options}\r\n              >\r\n\r\n              </Bar>\r\n            </div>\r\n            <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n      {mobile?<NavMenu\r\n       />:console.log(\"desktop\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminrevTotal","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport NavMenu from '../../components/NavMenu'\r\nimport useWindowDimensions from '../../components/useWindowDimensions'\r\nimport { useEffect,useState } from 'react'\r\n\r\nconst FarmersListData = ({Farmers}) => {\r\n    const [mobile, setmobile] = useState(false)\r\n\r\n    const { width } = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width < 850) {\r\n            setmobile(true)\r\n        } else {\r\n            setmobile(false)\r\n        }\r\n    }, [width])\r\n  return (\r\n    <>\r\n          <div className='farmers_data_entries'>\r\n                <div className='farmers_entries'>\r\n                    <div className='farmers_entries_nav'>\r\n                   \r\n                    <span className='farmers_entries_nav_farmername'>\r\n                       Name\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmerstype'>\r\n                       Type\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersContact'>\r\n                        Contact\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                        Address\r\n                    </span>\r\n                    </div>\r\n\r\n                    <div className='farmers_entries_body'>\r\n                        {\r\n                        Farmers && Farmers.map((e,i)=>{\r\n                            return(\r\n                            <div key={i} className='farmers_entries_section'>\r\n                                <span className='farmers_entries_nav_farmername'>\r\n                                    {e.firstname} {e.lastname}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.farmertype}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmersContact'>\r\n                                {e.phone}\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                    {e.address}\r\n                    </span>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n                      <Link style={{ marginTop: '10px', marginLeft:'125px'}} className=\"backbtn green\" to=\"/admin\" >\r\n                          Back\r\n                      </Link>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n            <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n          {mobile?<NavMenu\r\n             />:console.log(\"desktop\")}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FarmersListData","import React from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport NavMenu from '../../components/NavMenu'\r\nimport useWindowDimensions from '../../components/useWindowDimensions'\r\nimport { useEffect,useState } from 'react'\r\n\r\nconst CustomersList = ({Customer}) => {\r\n    const [mobile, setmobile] = useState(false)\r\n\r\n    const { width } = useWindowDimensions()\r\n\r\n    useEffect(() => {\r\n        if (width < 850) {\r\n            setmobile(true)\r\n        } else {\r\n            setmobile(false)\r\n        }\r\n    }, [width])\r\n  return (\r\n    <>\r\n          <div className='farmers_data_entries'>\r\n                <div className='farmers_entries'>\r\n                    <div className='farmers_entries_nav'>\r\n                    <span className='farmers_entries_nav_farmername'>\r\n                        Customers Name\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmerstype'>\r\n                        Phone No.\r\n                    </span>\r\n                    <span  className='farmers_entries_nav_farmersaddress'>\r\n                        Address\r\n                    </span>\r\n                    </div>\r\n\r\n                    <div className='farmers_entries_body'>\r\n                        {\r\n                        Customer && Customer.length!==0 && Customer.map((e,i)=>{\r\n                            return(\r\n                            <div key={i} className='farmers_entries_section'>\r\n                                <span className='farmers_entries_nav_farmername'>\r\n                                    {e.firstname} {e.lastname}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.phone}\r\n                                </span>\r\n                                <span  className='farmers_entries_nav_farmerstype'>\r\n                                    {e.address}\r\n                                </span>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n                        {\r\n                            !Customer && <Spinner/>\r\n                        }\r\n                        {\r\n                            Customer && Customer.length === 0 && <div className='farmers_entries_section'>No data available</div>\r\n                        }\r\n                      <Link style={{ marginTop: '10px', marginLeft: '125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                          Back\r\n                      </Link>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n            <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n          {mobile?<NavMenu\r\n             />:console.log(\"desktop\")}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomersList","import React from 'react'\r\nimport Spinner from '../../components/Spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport NavMenu from '../../components/NavMenu'\r\nimport useWindowDimensions from '../../components/useWindowDimensions'\r\nimport { useState,useEffect } from 'react'\r\n\r\n const CancellationFeed = ({CancelledStalls , Farmers , handleRefundDelete}) =>  {\r\n     const [mobile, setmobile] = useState(false)\r\n\r\n     const { width } = useWindowDimensions()\r\n\r\n     useEffect(() => {\r\n         if (width < 850) {\r\n             setmobile(true)\r\n         } else {\r\n             setmobile(false)\r\n         }\r\n     }, [width])\r\n  return (\r\n    <>\r\n        {CancelledStalls && <div className='cancellation_feed'>\r\n        <div className='cancellation_feed_container'>\r\n                  \r\n            <h2 className='cancellation_header'>Cancellation Data</h2>\r\n                  \r\n            <div className='cancellation_body'>\r\n                {\r\n                    CancelledStalls && CancelledStalls.length !== 0 && CancelledStalls.map((e,i)=>{\r\n                    const farmer =  Farmers && Farmers.filter( ele => ele._id === e.bookedBy)\r\n                    console.log(farmer)\r\n\r\n                    return(\r\n                        farmer.length !== 0 && <div key={i} className='cancellation_card'>\r\n                            <h2 style={{textAlign:\"center\",padding:\"0.5rem\",textTransform:\"capitalize\"}}>{farmer[0].firstname+\" \"+ farmer[0].lastname}</h2>\r\n                            <div><b>Phone No : </b>{farmer[0].phone}</div>\r\n                            <div><b>Stall Address : </b>{e.address}</div>\r\n                            <div><b>Cancellation Date : </b>{e.cancelledAt}</div>\r\n                            <div><b>Booked Date : </b>{e.bookedAt}</div>\r\n                            <div><b>Stall Name :</b>{e.stallName}</div>\r\n                            <div><b>Refund Status :</b>Not Refunded</div>\r\n                            <div className='refund_btn_wrapper'>\r\n                                <button className='refund_btn' id={e._id} onClick={handleRefundDelete}>Mark as Refunded</button>\r\n                            </div>\r\n                        </div> \r\n                    )\r\n                    })\r\n                }\r\n                {\r\n                    CancelledStalls && CancelledStalls.length === 0 && <h2 style={{margin:\"auto\"}}>No Cancellation Data!</h2>\r\n                }\r\n                {\r\n                    !CancelledStalls && <Spinner/>\r\n                }\r\n            </div>\r\n                 <Link style={{ marginTop: '10px', marginLeft:'125px' }} className=\"backbtn green\" to=\"/admin\" >\r\n                      Back\r\n                  </Link> \r\n        </div>\r\n        </div>}\r\n        <div className=\"pageBottom\" style={{height: '100px'}}></div>\r\n          {mobile?<NavMenu\r\n            />:console.log(\"desktop\")}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CancellationFeed","import React from 'react'\r\nimport IdleTimerContainer from \"../../components/IdleTimerContainer\"\r\n\r\nconst AdminHello = () => {\r\n  return (\r\n    <IdleTimerContainer></IdleTimerContainer>\r\n    )\r\n}\r\n\r\nexport default AdminHello","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function CardAdmin({reason,date}) {\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      \r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n          Reason : {reason}\r\n        </Typography>\r\n        <Typography variant=\"h4\" >\r\n          Date : { date}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n      {approved === \"approved\" ? <Button variant=\"contained\" color=\"success\" size=\"large\">Approved</Button> : <Button  variant=\"contained\" color=\"error\"  size=\"large\">Not Approved</Button>\r\n}\r\n\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport CardAdmin from '../../components/CardAdmin'\r\nimport Button from \"@mui/material/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst Leaves = ({Leave}) => {\r\n  console.log(\"the data is : \" , Leave)\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  async function accept(id){\r\n    console.log(\"id has been chosen \",id)\r\n    var approve = \"approved\"\r\n    await axios.put(REACT_APP_API_URL  + \"changeApproval\",{id,approve})\r\n      .then((data)=>{\r\n        if(data){\r\n          console.log(\"updated\")\r\n          window.location.reload(false);\r\n        }else{\r\n          console.log(\"failed\")\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n  async function decline(id){\r\n    console.log(\"id has been declined \",id)\r\n  \r\n    var approve = \"Napproved\"\r\n    await axios.put(REACT_APP_API_URL  + \"changeApproval\",{id,approve})\r\n      .then((data)=>{\r\n        if(data){\r\n          console.log(\"updated\")\r\n          window.location.reload(false);\r\n\r\n        }else{\r\n          console.log(\"failed\")\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n  }\r\n  return (\r\n     \r\n    <div className='cards'>\r\n     \r\n\r\n          {Leave && Leave.map((d)=>{\r\n            if(d.appoved === \"none\"){\r\n            return(\r\n            <div>\r\n          <CardAdmin date={d.date} reason ={d.reason} ></CardAdmin>\r\n          {<div> <Button variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\" onClick={() => accept(d._id)}>Approve it</Button>  <Button \r\n              onClick={() => decline(d._id)}\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              size=\"large\" >NotApprove</Button></div> }\r\n          </div>\r\n          ) }else{\r\n            return (\r\n              <div>\r\n          <CardAdmin date={d.date} reason ={d.reason} ></CardAdmin>\r\n          {d.appoved === \"approved\" && d.appoved !== \"none\" ? <Button variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\">Approved</Button> : <Button variant=\"contained\"\r\n              color=\"error\"\r\n              size=\"large\">Not Approved</Button> }\r\n          </div>\r\n            )\r\n          }\r\n          \r\n          }) }\r\n\r\n          \r\n\r\n\r\n\r\n          \r\n          \r\n\r\n         \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaves","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport AdminMain from './AdminMain';\r\nimport Adminrev from './Adminrev.js';\r\nimport AdminMarket from './AdminMarket.js'\r\nimport AdminHome from './AdminHome';\r\nimport AdminSub from './AdminSub';\r\nimport CheckList from './CheckList'\r\nimport CheckListSoln from './CheckListSoln';\r\nimport AdminrevTotal from './AdminrevTotal';\r\nimport FarmersListData from './FarmersListData';\r\nimport CustomersList from './CustomersList';\r\nimport CancellationFeed from './CancellationFeed';\r\nimport UserService from '../../services/user.service';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth.headers';\r\nimport FarmerService from '../../services/farmer.service';\r\nimport dayjs from 'dayjs'\r\nimport AdminHello from './AdminHello'\r\nimport Leaves from './Leaves'\r\nconst Admin = () => {\r\n  const [Inward, setInward] = useState()\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n    const [Outward, setOutward] = useState()\r\n    const [value, setValue] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"));\r\n    const [filteredInData, setfilteredInData] = useState()\r\n    const [filteredOutData, setfilteredOutData] = useState()\r\n    const [fromDate, setfromDate] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"))\r\n    const [toDate, settoDate] = useState(dayjs(Date.now()).format(\"YYYY-MM-DD\"))\r\n    const [market, setMarket] = React.useState('');\r\n    const [CancelledStalls, setCancelledStalls] = useState()\r\n    const [stallsBooked, setStallsBooked] = useState([]);\r\n    const[all,setAll] = useState([])\r\n    const[stalls,setStalls] = useState([])\r\n    const[sub,setSub] = useState([])\r\n  const [leave, setLeave] = useState([])\r\n   // var all=[]\r\n    const array=[2,2,3,4,5,7,8]\r\n    var total = 8\r\n    var start = 0\r\n    var date1 = new Date(\"04/15/2023\")\r\n    var today = new Date();\r\n    today = dayjs(today).format(\"MM/DD/YYYY\")\r\n    var date2 = new Date(today);\r\n    var Difference_In_Time = date2.getTime() - date1.getTime();\r\n    var Difference_In_Days = Math.floor(Difference_In_Time / (1000 * 3600 * 24));\r\n    var weeks= Math.floor(Difference_In_Days / 7)\r\n    var days = Difference_In_Days % 7\r\n    var finalTotal= start + weeks*total +array[days]\r\n    console.log(finalTotal)\r\n    console.log(Difference_In_Days,weeks,days)\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {setOpen(true); };\r\n    const handleClose = () => {setOpen(false);\r\n    };\r\n    const [Farmers, setFarmers] = useState()\r\n    const [Customer, setCustomer] = useState()\r\n    \r\n    const handleChangeMarket = (event) => {\r\n      setMarket(event.target.value);\r\n    };\r\n   \r\n    useEffect(() => {\r\n      UserService.getSubscribedData().then((res)=>{\r\n        const data = res?.data\r\n        setSub(data)\r\n        console.log(\"the subscribed data :\",data)\r\n      })\r\n      FarmerService.getBookedStalls().then(res => {\r\n        const data = res?.data;\r\n        setStallsBooked(data)\r\n        setAll(data)\r\n      })\r\n      // FarmerService.getMyStalls().then(res => {\r\n      //   const data = res?.data;\r\n      //   setStalls(data)\r\n      //   console.log(\"hello --\" ,data)\r\n      // })\r\n      \r\n      FarmerService.getInwardData().then(res => \r\n        {\r\n          setInward(res?.data);\r\n          setfilteredInData(res?.data)\r\n        })\r\n      FarmerService.getOutwardData().then(res => \r\n        {\r\n          setOutward(res?.data);\r\n          setfilteredOutData(res?.data)\r\n        })\r\n  \r\n      FarmerService.getcancelledStalls().then(res=>{\r\n        setCancelledStalls(res?.data)\r\n      })\r\n  \r\n        UserService.getFarmers().then(res=>{\r\n          setFarmers(res?.data)\r\n        })\r\n  \r\n        UserService.getUsers().then(res=>{\r\n          setCustomer(res?.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n      FarmerService.getMyStalls().then((res)=>{\r\n        if(res){\r\n          const {data} = res\r\n          console.log(\"hey\",data)\r\n          setStalls(data)\r\n        }\r\n      })\r\n    },[])\r\n  useEffect(() => {\r\n    async function getLeave() {\r\n      await axios.get(REACT_APP_API_URL + \"getLeave\")\r\n        .then((res) => {\r\n          var data = res?.data\r\n          setLeave(data)\r\n          console.log(\"the leave data \", data)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message)\r\n        })\r\n    }\r\n    getLeave();\r\n  }, [])\r\n\r\n  const totalFarmers = new Set();\r\n  const farmers = new Set();\r\n  const marketsData = new Set();\r\n  const farmersMarket = []\r\n  let purchaseQty = 0;\r\n  let purchaseAmount = 0;\r\n  let salesQty = 0;\r\n  let salesAmount = 0;\r\n  let noOfBookedStalls = stallsBooked?.length;\r\n\r\n  Inward && Inward.forEach((e) => {\r\n    marketsData.add(e.market)\r\n  });\r\n\r\n  filteredInData && filteredInData.forEach(e => {\r\n    totalFarmers.add(e.market)\r\n    farmers.add(e.userId)\r\n\r\n    purchaseQty += e.purchase_quantity\r\n    purchaseAmount += e.purchase_rate\r\n  });\r\n\r\n  filteredOutData && filteredOutData.forEach(e => {\r\n    if (!e.total_sales){\r\n      return\r\n    }\r\n    else{\r\n    salesQty += e.total_sales\r\n    }\r\n    salesAmount += e.sales_rate\r\n  });\r\n  const finalStall = new Set()\r\n  stalls && stalls.forEach(e => {\r\n    finalStall.add(e.location)\r\n  })\r\n  const finalStall1 = [...finalStall]\r\n  console.log(finalStall1)\r\n  const handleSearchmarkets = () => {\r\n    const marketresponse = Inward && Inward.filter(e => e.market === market);\r\n    setfilteredInData(marketresponse)\r\n    handleClose()\r\n  }\r\n\r\n  const handleSearchDate = () => {\r\n    const inData = Inward && Inward.filter((e) => {\r\n      const [date] = e.time.split(\"T\");\r\n      return date === dayjs(value).format(\"YYYY-MM-DD\")\r\n    })\r\n\r\n    const outData = Outward && Outward.filter((e) => {\r\n      const [date] = e.time.split(\"T\");\r\n      return date === dayjs(value).format(\"YYYY-MM-DD\")\r\n    })\r\n    console.log(all)\r\n    setStallsBooked(all)\r\n    console.log(\"before\", stallsBooked)\r\n    const stallsData = all && all.filter((e) => {\r\n\r\n      return e.bookedAt === dayjs(value).format(\"YYYY-MM-DD\")\r\n    })\r\n    console.log(\"after\", stallsData)\r\n    setStallsBooked(stallsData)\r\n    setfilteredInData(inData)\r\n    setfilteredOutData(outData)\r\n\r\n\r\n    handleClose()\r\n  }\r\n\r\n\r\n  const handleSearch = () => {\r\n    const filterIn = Inward.filter((e) => {\r\n      const [date] = e.time.split(\"T\");\r\n      return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n    })\r\n\r\n    const filterOut = Outward && Outward.filter((e) => {\r\n      const [date] = e.time.split(\"T\");\r\n      return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n    })\r\n\r\n    const stallsData = stallsBooked && stallsBooked.filter((e) => {\r\n      const [date] = e.bookedAt.split(\"T\");\r\n      return date >= dayjs(fromDate).format(\"YYYY-MM-DD\") && date <= dayjs(toDate).format(\"YYYY-MM-DD\")\r\n    })\r\n\r\n    setStallsBooked(stallsData)\r\n    setfilteredInData(filterIn);\r\n    setfilteredOutData(filterOut)\r\n    handleClose()\r\n  }\r\n\r\n  for (let item of marketsData) {\r\n    farmersMarket.push(item)\r\n\r\n  }\r\n\r\n  const handleRefundDelete = (e) => {\r\n    const id = e.target.id;\r\n    const response = window.confirm(\"Confirm Refunded?\")\r\n    // if(response === true){\r\n    //   axios.delete(\"https://wingrowagritech.herokuapp.com/cancelledstalls\" , { headers: authHeader()  , data:{id: id}}).then(res=>{\r\n    //     const data = res?.data;\r\n    //     const filter = CancelledStalls.filter(e=>e._id !== data._id);\r\n    //     setCancelledStalls(filter)\r\n    //   })\r\n    // }\r\n    if (response === true) {\r\n      axios.delete(REACT_APP_API_URL + \"cancelledstalls\", { headers: authHeader(), data: { id: id } }).then(res => {\r\n        const data = res?.data;\r\n        const filter = CancelledStalls.filter(e => e._id !== data._id);\r\n        setCancelledStalls(filter)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path='/' element={<AdminMain />}>\r\n        <Route index\r\n          element=\r\n          {<AdminHome\r\n            handleChangeMarket={handleChangeMarket}\r\n            fromDate={fromDate}\r\n            setfromDate={setfromDate}\r\n            toDate={toDate}\r\n            settoDate={settoDate}\r\n            sub={sub}\r\n            value={value}\r\n            setValue={setValue}\r\n            handleSearch={handleSearch}\r\n            market={market}\r\n            farmersMarket={farmersMarket}\r\n            open={open}\r\n            setOpen={setOpen}\r\n            handleClose={handleClose}\r\n            handleOpen={handleOpen}\r\n            handleSearchmarkets={handleSearchmarkets}\r\n            handleSearchDate={handleSearchDate}\r\n            filteredInData={filteredInData}\r\n            filteredOutData={filteredOutData}\r\n            purchaseQty={purchaseQty}\r\n            purchaseAmount={purchaseAmount}\r\n            salesQty={salesQty}\r\n            salesAmount={salesAmount}\r\n            noOfBookedStalls={noOfBookedStalls}\r\n            totalFarmers={finalTotal}\r\n            farmers={farmers}\r\n            Farmers={Farmers}\r\n            Customer={Customer}\r\n          />}\r\n        />\r\n        <Route path=\"/hello\" element={<AdminHello />}></Route>\r\n        <Route path='/adminrev' element={<Adminrev\r\n          filterIn={filteredInData} filterOut={filteredOutData}\r\n\r\n          handleChangeMarket={handleChangeMarket}\r\n                fromDate={fromDate}\r\n                setfromDate={setfromDate}\r\n                toDate={toDate}\r\n                settoDate={settoDate}\r\n                value={value}\r\n                market={market}\r\n                farmersMarket={farmersMarket}\r\n                setValue={setValue}\r\n                handleSearch={handleSearch}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                handleClose={handleClose}\r\n                handleOpen={handleOpen}\r\n                handleSearchmarkets={handleSearchmarkets}\r\n                handleSearchDate={handleSearchDate}\r\n                \r\n                \r\n                \r\n          />}/>\r\n          <Route path = \"/leaves\" element={ <Leaves Leave = {leave}/>} />\r\n          <Route path = '/adminrevtotal' element ={ <AdminrevTotal Inward={Inward} Outward={Outward} />} />\r\n          <Route path = \"/livemarkets\" element={<AdminMarket/>} ></Route>\r\n          <Route path='/listoffarmers' element={<FarmersListData Farmers={Farmers}/>}/>\r\n          <Route path = \"/checkList\" element={<CheckList farmersMarket={finalStall1}  />}/>\r\n          <Route path='/listofCustomers' element={<CustomersList Customer={Customer}/>}/>\r\n          <Route path=\"/subscriptionList\" element ={<AdminSub Farmers={Farmers}/>} />\r\n          <Route path='/cancelledstalls' element={<CancellationFeed Farmers={Farmers} CancelledStalls={CancelledStalls} handleRefundDelete={handleRefundDelete}/>}/>\r\n            <Route path =\"/checklistsoln\" element ={<CheckListSoln />} ></Route>\r\n         </Route>\r\n         \r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default Admin","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\n// const API_URL = \"https://wingrowmarket.onrender.com/\";\r\n//const API_URL = \"http://localhost:4000/\"\r\nconst API_URL = \"https://wingrowmarket.com:8443/\";\r\nconst { REACT_APP_API_URL } = process.env;\r\n const getPublicContent = () => {\r\n    return axios.get(REACT_APP_API_URL + 'all');\r\n  }\r\n  const getSubscribedData = () =>{\r\n    return axios.get(REACT_APP_API_URL +\"sub\")\r\n  }\r\n  const getSub = (userId) =>{\r\n    return axios.post(REACT_APP_API_URL + 'sub1',{userId})\r\n  }\r\n  // const postSub = () =>{\r\n  //   return axios.post(API_URL,'sub',{ headers: authHeader() });\r\n  // }\r\n\r\n  const postSub = (date , userId , stalls , validity ) => {\r\n    return axios.post(REACT_APP_API_URL + \"sub\", {\r\n        date,\r\n        userId,\r\n        stalls,\r\n        validity, \r\n        first,\r\n        second,\r\n        third\r\n      } , { headers: authHeader() });\r\n  }\r\n  const getInOutdata = () => {\r\n    return axios.get(REACT_APP_API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(REACT_APP_API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(REACT_APP_API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  // const addMarket = () =>{\r\n  //   return axios.post(REACT_APP_API_URL + \"add\")\r\n  // }\r\n  const getMarket = () =>{\r\n    return axios.get(REACT_APP_API_URL + \"getmarket\")\r\n  }\r\nconst getMarkets = () => {\r\n  return axios.get(REACT_APP_API_URL + \"getmarkets\")\r\n}\r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers,\r\n    getSub,\r\n    postSub,\r\n    getMarket,\r\n  getMarkets,\r\n  getSubscribedData\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n"],"names":["_jsx","_Fragment","children","Outlet","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","_ref","_ref2","filterIn","filterOut","markets","handleChangeMarket","fromDate","setfromDate","toDate","settoDate","value","setValue","handleSearch","market","farmersMarket","open","setOpen","handleClose","handleOpen","handleSearchmarkets","handleSearchDate","_useState","useState","dayjs","Date","format","_useState2","_slicedToArray","date","setDate","_useState3","_useState4","month","setMonth","_useState5","_useState6","flag","setFlag","marketIn","Array","marketOut","_useState7","_useState8","netMarket","setNewMarket","fun","console","log","forEach","arr","purchase_quantity","purchase_rate","idx","sales_quantity","sales_rate","temp","ans","push","useEffect","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","_defineProperty","_useState9","_useState10","mobile","setmobile","width","useWindowDimensions","_jsxs","className","onClick","DatePicker","views","renderInput","props","TextField","_objectSpread","size","helperText","onChange","newValue","d","toLocaleDateString","Button","filter","date1","time","toISOString","split","date2","months","substring","year","firstDay","Number","lastDay","byMonth","Bar","options","responsive","scales","y","beginAtZero","max","min","steps","style","height","NavMenu","marketName","setMarketName","direction","setDirection","_React$useState","React","_React$useState2","tags","setTags","setData","showData","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","then","res","catch","err","message","stop","apply","arguments","getData","_useState11","_useState12","offers","e","handleSubmit","_callee2","_context2","preventDefault","_x","component","noValidate","onSubmit","sx","mt","Grid","container","spacing","item","xs","sm","inputlabelprops","fontSize","fontFamily","autoComplete","inputProps","name","target","required","fullWidth","id","autoFocus","color","ReactTags","handleDelete","i","newTags","slice","splice","handleAddition","tag","concat","_toConsumableArray","placeholder","allowNew","autofocus","minQueryLength","classNames","suggestions","type","variant","mb","header","CardContent","Typography","gutterBottom","Datepicker","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","DesktopDatePicker","inputFormat","params","FilterModal","_ref$handleCloseModal","handleCloseModal","src","Modal","onClose","margin","FormControl","m","minWidth","InputLabel","Select","labelId","length","map","MenuItem","sub","filteredInData","filteredOutData","purchaseQty","purchaseAmount","salesQty","salesAmount","noOfBookedStalls","totalFarmers","Farmers","farmers","Customer","FarmersObj","farmersData","Map","has","farmertype","set","get","key","count","colors","data1","summary","title","subtitle","percent","data2","data3","Link","fontWeight","marginBottom","to","index","CircularProgressbarWithChildren","strokeWidth","text","styles","buildStyles","pathColor","trailColor","strokeLinecap","textAlign","Card","Spinner","subData","setSubData","REACT_APP_API_URL","process","farmer","ele","_id","userId","padding","textTransform","firstname","lastname","phone","validity","stalls","status","marginTop","marginLeft","AuthService","useNavigate","setdata","Loading","setLoading","Id","useParams","setdate","setMarket","setWatch","array","array2","_useState13","_useState14","array1","setarray1","_useState15","_useState16","showItems","setShowItems","_useState17","_useState18","FarmerService","response","items","_useState19","_useState20","myDate","$d","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","formattedDate","defaultValue","newData","d1","bookedAt","d2","newFinal","location","stallName","justify","alignItems","flexDirection","state","useLocation","arr1","Inward","Outward","revenue","submit","_e$time$split","_e$time$split3","_data$time$split","da","purchase","_data$time$split3","sale","YearPicker","start","end","reverse","classes","address","CancelledStalls","handleRefundDelete","bookedBy","cancelledAt","IdleTimerContainer","CardAdmin","reason","maxWidth","Leave","_accept","approve","window","reload","_decline","appoved","accept","_x2","decline","setInward","setOutward","now","setfilteredInData","setfilteredOutData","setCancelledStalls","stallsBooked","setStallsBooked","all","setAll","_useState21","_useState22","setStalls","_useState23","_useState24","setSub","_useState25","_useState26","leave","setLeave","today","Difference_In_Time","getTime","Difference_In_Days","Math","floor","weeks","days","finalTotal","_React$useState3","_React$useState4","_useState27","_useState28","setFarmers","_useState29","_useState30","setCustomer","event","UserService","_getLeave","getLeave","Set","marketsData","add","total_sales","finalStall","finalStall1","_step","marketresponse","inData","outData","stallsData","_e$time$split5","_e$time$split7","_e$bookedAt$split","_iterator","_createForOfIteratorHelper","s","n","done","f","Routes","Route","path","element","AdminMain","AdminHome","AdminHello","Adminrev","Leaves","AdminrevTotal","AdminMarket","FarmersListData","CheckList","CustomersList","AdminSub","CancellationFeed","confirm","headers","authHeader","CheckListSoln","getPublicContent","getStallsData","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","getSub","postSub","first","second","third","getMarket","getMarkets","getSubscribedData"],"sourceRoot":""}